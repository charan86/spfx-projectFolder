var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
define(["require", "exports", 'react', '../../../../Persona', '../../../../Button', '../../../../utilities/css', './PickerItemsDefault.scss'], function (require, exports, React, Persona_1, Button_1, css_1) {
    "use strict";
    exports.SelectedItemDefault = function (peoplePickerItemProps) {
        var item = peoplePickerItemProps.item, onRemoveItem = peoplePickerItemProps.onRemoveItem, index = peoplePickerItemProps.index, isSelected = peoplePickerItemProps.isSelected;
        return (React.createElement("div", {className: css_1.css('ms-PickerPersona-container', {
            'is-selected': isSelected
        }), "data-is-focusable": true, "data-selection-index": index, key: index}, React.createElement("div", {className: 'ms-PickerItem-content'}, React.createElement(Persona_1.Persona, __assign({}, item, {presence: item.presence ? item.presence : Persona_1.PersonaPresence.online, size: Persona_1.PersonaSize.extraSmall}))), React.createElement(Button_1.Button, {onClick: function () { if (onRemoveItem) {
            onRemoveItem();
        } }, icon: 'Cancel', buttonType: Button_1.ButtonType.icon, className: 'ms-PickerItem-content', "data-is-focusable": false})));
    };
});
