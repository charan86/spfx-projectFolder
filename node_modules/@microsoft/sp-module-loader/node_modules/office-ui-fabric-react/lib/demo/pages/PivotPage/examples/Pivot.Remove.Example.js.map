{"version":3,"sources":["demo/pages/PivotPage/examples/Pivot.Remove.Example.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,sBAQO,mBAAmB,CAAC,CAAA;AAM3B;IAAwC,sCAAgD;IAGtF,4BAAY,KAAU;QACpB,kBAAM,KAAK,CAAC,CAAC;QAEb,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;QACtC,IAAI,CAAC,KAAK,GAAG;YACX,wBAAwB,EAAE,IAAI;SAC/B,CAAC;QAEF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC;IACM,mCAAM,GAAb;QACE,IAAI,UAAU,GAA0C,EAAE,CAAC;QAE3D,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC,CAAC;YACxC,UAAU,CAAC,IAAI,CACb,oBAAC,iBAAS,GAAC,QAAQ,EAAC,KAAK,EAAC,OAAO,EAAC,KAAK,EAAC,GAAG,EAAC,KAAK,GAC/C,oBAAC,aAAK,+DAA6D,EACnE,oBAAC,aAAK,oFAAkF,EACxF,oBAAC,aAAK,iFAA+E,CAC3E,CACb,CAAC;QACJ,CAAC;QAED,UAAU,GAAG,UAAU,CAAC,MAAM,CAC5B,CACE,oBAAC,iBAAS,GAAC,QAAQ,EAAC,KAAK,EAAC,OAAO,EAAC,KAAK,EAAC,GAAG,EAAC,KAAK,GAC/C,oBAAC,aAAK,mBAAiB,CACb,CACb,EACD,CACE,oBAAC,iBAAS,GAAC,QAAQ,EAAC,KAAK,EAAC,OAAO,EAAC,KAAK,EAAC,GAAG,EAAC,KAAK,GAC/C,oBAAC,aAAK,mBAAiB,CACb,CACb,EACD,CACE,oBAAC,iBAAS,GAAC,QAAQ,EAAC,KAAK,EAAC,OAAO,EAAC,KAAK,EAAC,GAAG,EAAC,KAAK,GAC/C,oBAAC,aAAK,mBAAiB,CACb,CACb,CACF,CAAC;QAEF,MAAM,CAAC,CACL,qBAAC,GAAG,SACF,oBAAC,aAAK,GAAC,QAAQ,EAAG,qBAAa,CAAC,KAAO,EAAC,UAAU,EAAG,uBAAe,CAAC,IAAM,GACvE,UAAY,CACR,EACR,qBAAC,GAAG,SACF,oBAAC,cAAM,GAAC,OAAO,EAAG,IAAI,CAAC,YAAc,GACjC,CAAG,IAAI,CAAC,KAAK,CAAC,wBAAwB,GAAG,MAAM,GAAG,MAAM,uBAAqB,CACxE,CACL,CACF,CACP,CAAC;IACJ,CAAC;IAEO,yCAAY,GAApB;QACE,IAAI,CAAC,yBAAyB,GAAG,CAAC,IAAI,CAAC,yBAAyB,CAAC;QACjE,IAAI,CAAC,QAAQ,CAAC;YACZ,wBAAwB,EAAE,IAAI,CAAC,yBAAyB;SACzD,CAAC,CAAC;IACL,CAAC;IACH,yBAAC;AAAD,CAhEA,AAgEC,CAhEuC,KAAK,CAAC,SAAS,GAgEtD;AAhEY,0BAAkB,qBAgE9B,CAAA","file":"demo/pages/PivotPage/examples/Pivot.Remove.Example.js","sourcesContent":["import * as React from 'react';\nimport {\n  Label,\n  Button,\n  Pivot,\n  PivotItem,\n  PivotLinkFormat,\n  PivotLinkSize,\n  IPivotItemProps\n} from '../../../../index';\n\nexport interface IPivotOnChangeExampleState {\n  shouldShowFirstPivotItem: boolean;\n}\n\nexport class PivotRemoveExample extends React.Component<any, IPivotOnChangeExampleState> {\n  private _shouldShowFirstPivotItem;\n\n  constructor(props: any) {\n    super(props);\n\n    this._shouldShowFirstPivotItem = true;\n    this.state = {\n      shouldShowFirstPivotItem: true\n    };\n\n    this._handleClick = this._handleClick.bind(this);\n  }\n  public render() {\n    let pivotArray: React.ReactElement<IPivotItemProps>[] = [];\n\n    if (this.state.shouldShowFirstPivotItem) {\n      pivotArray.push(\n        <PivotItem linkText='Foo' itemKey='Foo' key='Foo'>\n          <Label>Click the button below to show/hide this pivot item.</Label>\n          <Label>The selected item will not change when the number of pivot items changes.</Label>\n          <Label>If the selected item was removed, the new first item will be selected.</Label>\n        </PivotItem>\n      );\n    }\n\n    pivotArray = pivotArray.concat(\n      (\n        <PivotItem linkText='Bar' itemKey='Bar' key='Bar'>\n          <Label>Pivot #2</Label>\n        </PivotItem>\n      ),\n      (\n        <PivotItem linkText='Bas' itemKey='Bas' key='Bas'>\n          <Label>Pivot #3</Label>\n        </PivotItem>\n      ),\n      (\n        <PivotItem linkText='Biz' itemKey='Biz' key='Biz'>\n          <Label>Pivot #4</Label>\n        </PivotItem>\n      )\n    );\n\n    return (\n      <div>\n        <Pivot linkSize={ PivotLinkSize.large } linkFormat={ PivotLinkFormat.tabs }>\n          { pivotArray }\n        </Pivot>\n        <div>\n          <Button onClick={ this._handleClick }>\n            { `${this.state.shouldShowFirstPivotItem ? 'Hide' : 'Show'} First Pivot Item` }\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  private _handleClick(): void {\n    this._shouldShowFirstPivotItem = !this._shouldShowFirstPivotItem;\n    this.setState({\n      shouldShowFirstPivotItem: this._shouldShowFirstPivotItem\n    });\n  }\n}\n"],"sourceRoot":"/src"}