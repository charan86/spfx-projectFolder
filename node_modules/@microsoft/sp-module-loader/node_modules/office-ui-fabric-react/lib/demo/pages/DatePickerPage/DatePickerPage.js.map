{"version":3,"sources":["demo/pages/DatePickerPage/DatePickerPage.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,sBAIO,wBAAwB,CAAC,CAAA;AAEhC,yCAAuC,qCAAqC,CAAC,CAAA;AAC7E,4CAA0C,wCAAwC,CAAC,CAAA;AACnF,yCAAuC,qCAAqC,CAAC,CAAA;AAC7E,0BAAsC,2BAA2B,CAAC,CAAA;AAClE,yBAAyB,+BAA+B,CAAC,CAAA;AAGzD,IAAM,0BAA0B,GAAG,OAAO,CAAC,yCAAyC,CAAC,CAAC;AACtF,IAAM,6BAA6B,GAAG,OAAO,CAAC,4CAA4C,CAAC,CAAC;AAC5F,IAAM,0BAA0B,GAAG,OAAO,CAAC,yCAAyC,CAAC,CAAC;AAEtF;IAAoC,kCAA6C;IAG/E;QACE,iBAAO,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,iCAAqB,CAAC,mBAAQ,EAAE,kBAAkB,EAAE,YAAY,CAAC,CAAC;IAChF,CAAC;IACM,+BAAM,GAAb;QACE,MAAM,CAAC,CACL,oBAAC,qBAAa,GACZ,KAAK,EAAC,YAAY,EAClB,aAAa,EAAC,mBAAmB,EACjC,YAAY,EACV,qBAAC,GAAG,SACF,oBAAC,mBAAW,GAAC,KAAK,EAAC,YAAY,EAAC,IAAI,EAAG,0BAA4B,GACjE,oBAAC,iDAAsB,OAAG,CACd,EACd,oBAAC,mBAAW,GAAC,KAAK,EAAC,8BAA8B,EAAC,IAAI,EAAG,6BAA+B,GACtF,oBAAC,uDAAyB,OAAG,CACjB,EACd,oBAAC,mBAAW,GAAC,KAAK,EAAC,qCAAqC,EAAC,IAAI,EAAG,0BAA4B,GAC1F,oBAAC,iDAAsB,OAAG,CACd,CAEjB,EACD,gBAAgB,EACd,oBAAC,0BAAkB,GAAC,aAAa,EAAC,YAAY,EAC/C,EACD,QAAQ,EACN,qBAAC,GAAG,SACF,qBAAC,CAAC,yEAEE,CAEP,EACD,aAAa,EACX,qBAAC,GAAG,QACL,EACD,GAAG,EACD,qBAAC,GAAG,SACF,qBAAC,EAAE,SACD,qBAAC,EAAE,+CAAyC,EAC5C,qBAAC,EAAE,sIAAgI,EACnI,qBAAC,EAAE,6IAAuI,EAC1I,qBAAC,EAAE,6KAAuK,EAC1K,qBAAC,EAAE,+IAAyI,CACzI,CAER,EACD,KAAK,EACH,qBAAC,GAAG,SACF,qBAAC,EAAE,SACD,qBAAC,EAAE,kJAA4I,EAC/I,qBAAC,EAAE,iEAA2D,EAC9D,qBAAC,EAAE,wFAAkF,EACrF,qBAAC,EAAE,kGAA4F,CAC5F,CAER,EACD,OAAO,EACL,qBAAC,CAAC,IAAC,IAAI,EAAC,8FAA8F,eACvG,EACD,KAAK,EAAG,IAAI,CAAC,IAAM,EACnB,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAiB,EAChC,CACjB,CAAC;IACJ,CAAC;IAEH,qBAAC;AAAD,CApEA,AAoEC,CApEmC,KAAK,CAAC,SAAS,GAoElD;AApEY,sBAAc,iBAoE1B,CAAA","file":"demo/pages/DatePickerPage/DatePickerPage.js","sourcesContent":["import * as React from 'react';\nimport {\n  ExampleCard,\n  PropertiesTableSet,\n  ComponentPage\n} from '../../components/index';\n\nimport { DatePickerBasicExample } from './examples/DatePicker.Basic.Example';\nimport { DatePickerRequiredExample } from './examples/DatePicker.Required.Example';\nimport { DatePickerInputExample } from './examples/DatePicker.Input.Example';\nimport { getPageRouteFromState } from '../../utilities/pageroute';\nimport { AppState } from '../../components/App/AppState';\nimport { IComponentDemoPageProps } from '../../components/ComponentPage/IComponentDemoPageProps';\n\nconst DatePickerBasicExampleCode = require('./examples/DatePicker.Basic.Example.tsx');\nconst DatePickerRequiredExampleCode = require('./examples/DatePicker.Required.Example.tsx');\nconst DatePickerInputExampleCode = require('./examples/DatePicker.Input.Example.tsx');\n\nexport class DatePickerPage extends React.Component<IComponentDemoPageProps, any> {\n  private _url: string;\n\n  constructor() {\n    super();\n    this._url = getPageRouteFromState(AppState, 'Basic components', 'DatePicker');\n  }\n  public render() {\n    return (\n      <ComponentPage\n        title='DatePicker'\n        componentName='DatePickerExample'\n        exampleCards={\n          <div>\n            <ExampleCard title='DatePicker' code={ DatePickerBasicExampleCode }>\n              <DatePickerBasicExample />\n            </ExampleCard>\n            <ExampleCard title='DatePicker as required field' code={ DatePickerRequiredExampleCode }>\n              <DatePickerRequiredExample />\n            </ExampleCard>\n            <ExampleCard title='DatePicker allows input date string' code={ DatePickerInputExampleCode }>\n              <DatePickerInputExample />\n            </ExampleCard>\n          </div>\n        }\n        propertiesTables={\n          <PropertiesTableSet componentName='DatePicker' />\n        }\n        overview={\n          <div>\n            <p>\n              The DatePicker component enables a user to pick a date value.\n            </p>\n          </div>\n        }\n        bestPractices={\n          <div></div>\n        }\n        dos={\n          <div>\n            <ul>\n              <li>Use the control as a single entity.</li>\n              <li>Set the default date to the current date unless a specific date is required for context (e.g. the date of the conference).</li>\n              <li>The control is designed to resize relative to available screen width. Allow it to render in either wide or narrow as appropriate.</li>\n              <li>When the control is engaged, the DatePicker renders as a flyout and has defined widths (300px -narrow and 440px â€“ wide). Plan your UI implementation accordingly.</li>\n              <li>The control renders date in a specific format. If allowing for manual entry of date, provide helper text in the appropriate format.</li>\n            </ul>\n          </div>\n        }\n        donts={\n          <div>\n            <ul>\n              <li>Don't attempt to break apart year from month/day selectors. If granularity is required, use the Dropdown control or something similar.</li>\n              <li>Don't attempt to force resize the control in any way.</li>\n              <li>Don't force the control to render one mode vs. the other (year or month/day)</li>\n              <li>The flyout selector is a light dismiss control. Don't modify this behavior in any way.</li>\n            </ul>\n          </div>\n        }\n        related={\n          <a href='https://github.com/OfficeDev/office-ui-fabric-js/blob/master/ghdocs/components/DatePicker.md'>Fabric JS</a>\n        }\n        route={ this._url }\n        isHeaderVisible={ this.props.isHeaderVisible }>\n      </ComponentPage>\n    );\n  }\n\n}\n"],"sourceRoot":"/src"}