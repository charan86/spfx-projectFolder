{"version":3,"sources":["demo/pages/ButtonPage/examples/Button.ScreenReader.Example.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,sBAIO,mBAAmB,CAAC,CAAA;AAG3B;IAA+C,6CAAiC;IAC9E;QACE,iBAAO,CAAC;IACV,CAAC;IAEM,0CAAM,GAAb;QACQ,sCAAU,CAAgB;QAEhC,MAAM,CAAC,CACL,qBAAC,GAAG,IAAC,SAAS,EAAC,wBAAwB,GACrC,oBAAC,aAAK,yDAAuD,EAC7D,oBAAC,cAAM,IACL,kBAAkB,GAAC,MAAM,EACzB,QAAQ,EAAG,UAAY,EACvB,UAAU,EAAG,kBAAU,CAAC,OAAS,EACjC,eAAe,EAAC,kDAAkD,sBAE3D,CACL,CACP,CAAC;IACJ,CAAC;IACH,gCAAC;AAAD,CArBA,AAqBC,CArB8C,KAAK,CAAC,SAAS,GAqB7D;AArBY,iCAAyB,4BAqBrC,CAAA","file":"demo/pages/ButtonPage/examples/Button.ScreenReader.Example.js","sourcesContent":["import * as React from 'react';\nimport {\n  Button,\n  ButtonType,\n  Label\n} from '../../../../index';\nimport { IButtonProps } from './IButtonProps';\n\nexport class ButtonScreenReaderExample extends React.Component<IButtonProps, {}> {\n  public constructor() {\n    super();\n  }\n\n  public render() {\n    let { isDisabled } = this.props;\n\n    return (\n      <div className='ms-BasicButtonsExample'>\n        <Label>Button with aria description for screen reader</Label>\n        <Button\n          data-automation-id='test'\n          disabled={ isDisabled }\n          buttonType={ ButtonType.primary }\n          ariaDescription='This is aria description used for screen reader.'>\n          Aria Description\n        </Button>\n      </div>\n    );\n  }\n}"],"sourceRoot":"/src"}