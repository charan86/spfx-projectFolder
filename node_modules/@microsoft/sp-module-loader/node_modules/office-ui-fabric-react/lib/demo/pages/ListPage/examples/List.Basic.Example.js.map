{"version":3,"sources":["demo/pages/ListPage/examples/List.Basic.Example.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,sBAOO,mBAAmB,CAAC,CAAA;AAC3B,oBAAoB,2BAA2B,CAAC,CAAA;AAChD,oBAAuB,2BAA2B,CAAC,CAAA;AACnD,QAAO,2BAA2B,CAAC,CAAA;AAWnC;IAAsC,oCAA4C;IAChF,0BAAY,KAA6B;QACvC,kBAAM,KAAK,CAAC,CAAC;QAEb,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEzD,IAAI,CAAC,KAAK,GAAG;YACX,UAAU,EAAE,EAAE;YACd,KAAK,EAAE,KAAK,CAAC,KAAK;SACnB,CAAC;IACJ,CAAC;IAEM,iCAAM,GAAb;QACQ,oCAAoB,CAAgB;QACpC,4BAAK,CAAgB;QAC3B,IAAI,eAAe,GAAG,KAAK,CAAC,MAAM,KAAK,aAAa,CAAC,MAAM,GAAG,EAAE,GAAG,OAAM,KAAK,CAAC,MAAM,YAAS,aAAa,CAAC,MAAM,YAAU,CAAC;QAE7H,MAAM,CAAC,CACL,oBAAC,iBAAS,GAAC,SAAS,EAAG,0BAAkB,CAAC,QAAU,GAClD,oBAAC,iBAAS,GAAC,KAAK,EAAG,gBAAgB,GAAG,eAAiB,EAAC,cAAc,EAAG,IAAI,CAAC,gBAAkB,EAAG,EACjG,oBAAC,YAAI,GACH,KAAK,EAAG,KAAO,EACf,YAAY,EAAG,UAAC,IAAI,EAAE,KAAK,IAAK,OAAA,CAC9B,qBAAC,GAAG,IAAC,SAAS,EAAC,8BAA8B,GAAC,iBAAiB,GAAG,IAAM,GACtE,oBAAC,aAAK,GACJ,SAAS,EAAC,+BAA+B,EACzC,GAAG,EAAG,IAAI,CAAC,SAAW,EACtB,KAAK,EAAG,EAAI,EACZ,MAAM,EAAG,EAAI,EACb,QAAQ,EAAG,gBAAQ,CAAC,KAAO,EAC1B,EACH,qBAAC,GAAG,IAAC,SAAS,EAAC,iCAAiC,GAC9C,qBAAC,GAAG,IAAC,SAAS,EAAC,yCAAyC,GAAG,IAAI,CAAC,IAAM,CAAM,EAC5E,qBAAC,GAAG,IAAC,SAAS,EAAC,+BAA+B,GAAG,UAAS,KAAU,CAAM,EAC1E,qBAAC,GAAG,IAAC,SAAS,EAAC,wCAAwC,GAAG,IAAI,CAAC,WAAa,CAAM,CAC9E,EACN,qBAAC,CAAC,IAAC,SAAS,EAAG,SAAG,CAAC,qCAAqC,EAAE;YACxD,uBAAuB,EAAE,CAAC,YAAM,EAAE;YAClC,sBAAsB,EAAE,YAAM,EAAE;SACjC,CAAG,EAAG,CACH,CACP,EAnB+B,CAmB7B,EACH,CACQ,CACf,CAAC;IACJ,CAAC;IAEO,2CAAgB,GAAxB,UAAyB,IAAY;QAC7B,4BAAK,CAAgB;QAE3B,IAAI,CAAC,QAAQ,CAAC;YACZ,UAAU,EAAE,IAAI;YAChB,KAAK,EAAE,IAAI;gBACT,KAAK,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,EAAxD,CAAwD,CAAC;gBAC9E,KAAK;SACR,CAAC,CAAC;IACL,CAAC;IACH,uBAAC;AAAD,CAzDA,AAyDC,CAzDqC,KAAK,CAAC,SAAS,GAyDpD;AAzDY,wBAAgB,mBAyD5B,CAAA","file":"demo/pages/ListPage/examples/List.Basic.Example.js","sourcesContent":["import * as React from 'react';\nimport {\n  FocusZone,\n  FocusZoneDirection,\n  TextField,\n  Image,\n  ImageFit,\n  List\n} from '../../../../index';\nimport { css } from '../../../../utilities/css';\nimport { getRTL } from '../../../../utilities/rtl';\nimport './List.Basic.Example.scss';\n\nexport interface IListBasicExampleProps {\n  items: any[];\n}\n\nexport interface IListBasicExampleState {\n  filterText?: string;\n  items?: any[];\n}\n\nexport class ListBasicExample extends React.Component<IListBasicExampleProps, any> {\n  constructor(props: IListBasicExampleProps) {\n    super(props);\n\n    this._onFilterChanged = this._onFilterChanged.bind(this);\n\n    this.state = {\n      filterText: '',\n      items: props.items\n    };\n  }\n\n  public render() {\n    let { items: originalItems } = this.props;\n    let { items } = this.state;\n    let resultCountText = items.length === originalItems.length ? '' : ` (${ items.length } of ${ originalItems.length } shown)`;\n\n    return (\n      <FocusZone direction={ FocusZoneDirection.vertical }>\n        <TextField label={ 'Filter by name' + resultCountText } onBeforeChange={ this._onFilterChanged } />\n          <List\n            items={ items }\n            onRenderCell={ (item, index) => (\n              <div className='ms-ListBasicExample-itemCell' data-is-focusable={ true }>\n                <Image\n                  className='ms-ListBasicExample-itemImage'\n                  src={ item.thumbnail }\n                  width={ 50 }\n                  height={ 50 }\n                  imageFit={ ImageFit.cover }\n                 />\n                <div className='ms-ListBasicExample-itemContent'>\n                  <div className='ms-ListBasicExample-itemName ms-font-xl'>{ item.name }</div>\n                  <div className='ms-ListBasicExample-itemIndex'>{ `Item ${ index }` }</div>\n                  <div className='ms-ListBasicExample-itemDesc ms-font-s'>{ item.description }</div>\n                </div>\n                <i className={ css('ms-ListBasicExample-chevron ms-Icon', {\n                  'ms-Icon--chevronRight': !getRTL(),\n                  'ms-Icon--chevronLeft': getRTL()\n                }) } />\n              </div>\n            ) }\n          />\n        </FocusZone>\n    );\n  }\n\n  private _onFilterChanged(text: string) {\n    let { items } = this.props;\n\n    this.setState({\n      filterText: text,\n      items: text ?\n        items.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) >= 0) :\n        items\n    });\n  }\n}\n"],"sourceRoot":"/src"}