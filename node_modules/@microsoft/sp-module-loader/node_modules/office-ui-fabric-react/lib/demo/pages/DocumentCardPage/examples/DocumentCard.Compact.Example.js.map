{"version":3,"sources":["demo/pages/DocumentCardPage/examples/DocumentCard.Compact.Example.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,sBAOO,mBAAmB,CAAC,CAAA;AAE3B;IAAgD,8CAAyB;IAAzE;QAAgD,8BAAyB;IA2EzE,CAAC;IA1EQ,2CAAM,GAAb;QACE,IAAI,YAAY,GAA8B;YAC5C,4BAA4B,EAAE,UAAC,aAAqB,IAAK,OAAA,OAAK,aAAa,WAAQ,EAA1B,CAA0B;YACnF,aAAa,EAAE;gBACb;oBACE,IAAI,EAAE,yDAAyD;oBAC/D,GAAG,EAAE,iBAAiB;oBACtB,eAAe,EAAE,2BAA2B;oBAC5C,OAAO,EAAE,mBAAmB;oBAC5B,KAAK,EAAE,GAAG;iBACX;gBACD;oBACE,IAAI,EAAE,6DAA6D;oBACnE,GAAG,EAAE,iBAAiB;oBACtB,eAAe,EAAE,4BAA4B;oBAC7C,OAAO,EAAE,mBAAmB;oBAC5B,KAAK,EAAE,GAAG;iBACX;gBACD;oBACE,IAAI,EAAE,uBAAuB;oBAC7B,GAAG,EAAE,iBAAiB;oBACtB,eAAe,EAAE,4BAA4B;oBAC7C,OAAO,EAAE,mBAAmB;oBAC5B,KAAK,EAAE,GAAG;iBACX;gBACD;oBACE,IAAI,EAAE,gCAAgC;oBACtC,GAAG,EAAE,iBAAiB;oBACtB,eAAe,EAAE,2BAA2B;oBAC5C,OAAO,EAAE,mBAAmB;oBAC5B,KAAK,EAAE,GAAG;iBACX;aACF;SACF,CAAC;QAEF,MAAM,CAAC,CACL,qBAAC,GAAG,SACF,oBAAC,oBAAY,GAAC,IAAI,EAAG,wBAAgB,CAAC,OAAS,EAAC,WAAW,EAAC,iBAAiB,EAAC,WAAW,EAAC,SAAS,GACjG,oBAAC,2BAAmB,eAAM,YAAY,EAAK,EAC3C,qBAAC,GAAG,IAAC,SAAS,EAAC,yBAAyB,GACtC,oBAAC,yBAAiB,GAChB,KAAK,EAAC,uBAAuB,EAC7B,cAAc,EAAG,IAAM,EAAE,EAC3B,oBAAC,4BAAoB,GACnB,QAAQ,EAAC,2BAA2B,EACpC,MAAM,EACJ;YACE,EAAE,IAAI,EAAE,aAAa,EAAE,eAAe,EAAE,2BAA2B,EAAE;SAExE,EACD,CACE,CACO,EACf,qBAAC,CAAC,QAAE,EACJ,oBAAC,oBAAY,GAAC,IAAI,EAAG,wBAAgB,CAAC,OAAS,EAAC,WAAW,EAAC,iBAAiB,EAAC,WAAW,EAAC,SAAS,GACjG,oBAAC,2BAAmB,GAAC,aAAa,EAAG,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC,CAAG,EAAI,EAC1E,qBAAC,GAAG,IAAC,SAAS,EAAC,yBAAyB,GACtC,oBAAC,yBAAiB,GAChB,KAAK,EAAC,yDAAyD,EAC/D,cAAc,EAAG,IAAM,EAAE,EAC3B,oBAAC,4BAAoB,GACnB,QAAQ,EAAC,2BAA2B,EACpC,MAAM,EACJ;YACE,EAAE,IAAI,EAAE,aAAa,EAAE,eAAe,EAAE,2BAA2B,EAAE;SAExE,EACD,CACE,CACO,CACX,CACP,CAAC;IACJ,CAAC;IAEH,iCAAC;AAAD,CA3EA,AA2EC,CA3E+C,KAAK,CAAC,SAAS,GA2E9D;AA3EY,kCAA0B,6BA2EtC,CAAA","file":"demo/pages/DocumentCardPage/examples/DocumentCard.Compact.Example.js","sourcesContent":["import * as React from 'react';\nimport {\n  DocumentCard,\n  DocumentCardActivity,\n  DocumentCardPreview,\n  DocumentCardTitle,\n  IDocumentCardPreviewProps,\n  DocumentCardType\n} from '../../../../index';\n\nexport class DocumentCardCompactExample extends React.Component<any, any> {\n  public render() {\n    let previewProps: IDocumentCardPreviewProps = {\n      getOverflowDocumentCountText: (overflowCount: number) => `+${ overflowCount } more`,\n      previewImages: [\n        {\n          name: 'Revenue stream proposal fiscal year 2016 version02.pptx',\n          url: 'http://bing.com',\n          previewImageSrc: 'dist/document-preview.png',\n          iconSrc: 'dist/icon-ppt.png',\n          width: 144\n        },\n        {\n          name: 'New Contoso Collaboration for Conference Presentation Draft',\n          url: 'http://bing.com',\n          previewImageSrc: 'dist/document-preview2.png',\n          iconSrc: 'dist/icon-ppt.png',\n          width: 144\n        },\n        {\n          name: 'Spec Sheet for design',\n          url: 'http://bing.com',\n          previewImageSrc: 'dist/document-preview3.png',\n          iconSrc: 'dist/icon-ppt.png',\n          width: 144\n        },\n        {\n          name: 'Contoso Marketing Presentation',\n          url: 'http://bing.com',\n          previewImageSrc: 'dist/document-preview.png',\n          iconSrc: 'dist/icon-ppt.png',\n          width: 144\n        },\n      ],\n    };\n\n    return (\n      <div>\n        <DocumentCard type={ DocumentCardType.compact } onClickHref='http://bing.com' accentColor='#ce4b1f'>\n          <DocumentCardPreview { ...previewProps } />\n          <div className='ms-DocumentCard-details'>\n            <DocumentCardTitle\n              title='4 files were uploaded'\n              shouldTruncate={ true }/>\n            <DocumentCardActivity\n              activity='Created a few minutes ago'\n              people={\n                [\n                  { name: 'Kat Larrson', profileImageSrc: 'images/persona-female.png' }\n                ]\n              }\n            />\n          </div>\n        </DocumentCard>\n        <p/>\n        <DocumentCard type={ DocumentCardType.compact } onClickHref='http://bing.com' accentColor='#ce4b1f'>\n          <DocumentCardPreview previewImages={ [previewProps.previewImages[0]] }  />\n          <div className='ms-DocumentCard-details'>\n            <DocumentCardTitle\n              title='Revenue stream proposal fiscal year 2016 version02.pptx'\n              shouldTruncate={ true }/>\n            <DocumentCardActivity\n              activity='Created a few minutes ago'\n              people={\n                [\n                  { name: 'Kat Larrson', profileImageSrc: 'images/persona-female.png' }\n                ]\n              }\n            />\n          </div>\n        </DocumentCard>\n      </div>\n    );\n  }\n\n}\n"],"sourceRoot":"/src"}