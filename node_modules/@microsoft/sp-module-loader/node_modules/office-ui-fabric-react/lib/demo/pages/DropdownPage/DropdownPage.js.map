{"version":3,"sources":["demo/pages/DropdownPage/DropdownPage.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,sBAIO,wBAAwB,CAAC,CAAA;AAEhC,uCAAqC,mCAAmC,CAAC,CAAA;AACzE,0BAAsC,2BAA2B,CAAC,CAAA;AAClE,yBAAyB,+BAA+B,CAAC,CAAA;AAGzD,IAAM,wBAAwB,GAAG,OAAO,CAAC,uCAAuC,CAAC,CAAC;AAElF;IAAkC,gCAA6C;IAG7E;QACE,iBAAO,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,iCAAqB,CAAC,mBAAQ,EAAE,kBAAkB,EAAE,UAAU,CAAC,CAAC;IAC9E,CAAC;IAEM,6BAAM,GAAb;QACE,MAAM,CAAC,CACL,oBAAC,qBAAa,GACZ,KAAK,EAAC,UAAU,EAChB,aAAa,EAAC,iBAAiB,EAC/B,YAAY,EACV,oBAAC,mBAAW,GAAC,KAAK,EAAC,UAAU,EAAC,IAAI,EAAG,wBAA0B,GAC7D,oBAAC,6CAAoB,OAAG,CAE3B,EACD,gBAAgB,EACd,oBAAC,0BAAkB,GAAC,aAAa,EAAC,UAAU,EAC7C,EACD,QAAQ,EACN,qBAAC,GAAG,SACF,qBAAC,CAAC,4cAEE,CAEP,EACD,aAAa,EACX,qBAAC,GAAG,QACL,EACD,GAAG,EACD,qBAAC,GAAG,SACF,qBAAC,EAAE,SACD,qBAAC,EAAE,+JAAyJ,EAC5J,qBAAC,EAAE,4DAAsD,EACzD,qBAAC,EAAE,wMAAkM,CAClM,CAER,EACD,KAAK,EACH,qBAAC,GAAG,QACL,EACD,OAAO,EACL,qBAAC,CAAC,IAAC,IAAI,EAAC,4FAA4F,eACrG,EACD,KAAK,EAAG,IAAI,CAAC,IAAM,EACnB,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAiB,EAChC,CACjB,CAAC;IACJ,CAAC;IACH,mBAAC;AAAD,CAnDA,AAmDC,CAnDiC,KAAK,CAAC,SAAS,GAmDhD;AAnDY,oBAAY,eAmDxB,CAAA","file":"demo/pages/DropdownPage/DropdownPage.js","sourcesContent":["import * as React from 'react';\nimport {\n  ExampleCard,\n  PropertiesTableSet,\n  ComponentPage\n} from '../../components/index';\n\nimport { DropdownBasicExample } from './examples/Dropdown.Basic.Example';\nimport { getPageRouteFromState } from '../../utilities/pageroute';\nimport { AppState } from '../../components/App/AppState';\nimport { IComponentDemoPageProps } from '../../components/ComponentPage/IComponentDemoPageProps';\n\nconst DropdownBasicExampleCode = require('./examples/Dropdown.Basic.Example.tsx');\n\nexport class DropdownPage extends React.Component<IComponentDemoPageProps, any> {\n  private _url: string;\n\n  constructor() {\n    super();\n    this._url = getPageRouteFromState(AppState, 'Basic components', 'Dropdown');\n  }\n\n  public render() {\n    return (\n      <ComponentPage\n        title='Dropdown'\n        componentName='DropdownExample'\n        exampleCards={\n          <ExampleCard title='Dropdown' code={ DropdownBasicExampleCode }>\n            <DropdownBasicExample />\n          </ExampleCard>\n        }\n        propertiesTables={\n          <PropertiesTableSet componentName='Dropdown' />\n        }\n        overview={\n          <div>\n            <p>\n              A Dropdown is a list in which the selected item is always visible, and the others are visible on demand by clicking a drop-down button. They are used to simplify the design and make a choice within the UI. When closed, only the selected item is visible. When users click the drop-down button, all the options become visible. To change the value, users open the list and click another value or use the arrow keys (up and down) to select a new value.\n            </p>\n          </div>\n        }\n        bestPractices={\n          <div></div>\n        }\n        dos={\n          <div>\n            <ul>\n              <li>Use a Dropdown when there are multiple choices that can be collapsed under one title. Or if the list of items is long or when space is constrained.</li>\n              <li>Dropdowns contain shortened statements or words.</li>\n              <li>Use a Dropdown when the selected option is more important than the alternatives (in contrast to radio buttons where all the choices are visible putting more emphasis on the other options).</li>\n            </ul>\n          </div>\n        }\n        donts={\n          <div></div>\n        }\n        related={\n          <a href='https://github.com/OfficeDev/office-ui-fabric-js/blob/master/ghdocs/components/Dropdown.md'>Fabric JS</a>\n        }\n        route={ this._url }\n        isHeaderVisible={ this.props.isHeaderVisible }>\n      </ComponentPage>\n    );\n  }\n}\n"],"sourceRoot":"/src"}