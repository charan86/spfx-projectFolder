{"version":3,"sources":["demo/pages/CheckboxPage/examples/Checkbox.Basic.Example.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,yBAES,sBAAsB,CAAC,CAAA;AAMhC;IAA0C,wCAA+C;IACvF;QACE,iBAAO,CAAC;QAER,IAAI,CAAC,KAAK,GAAG;YACX,SAAS,EAAE,KAAK;SACjB,CAAC;QAEF,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7D,CAAC;IAEM,qCAAM,GAAb;QAAA,iBA0BC;QAzBO,oCAAS,CAAgB;QAE/B,MAAM,CAAC,CACL,qBAAC,GAAG,SACF,oBAAC,mBAAQ,GACP,KAAK,EAAC,uBAAuB,EAC7B,QAAQ,EAAG,IAAI,CAAC,iBAAmB,EAAG,EAExC,oBAAC,mBAAQ,GACP,KAAK,EAAC,gDAAgD,EACtD,cAAc,EAAG,IAAM,EACvB,QAAQ,EAAG,IAAI,CAAC,iBAAmB,EAAG,EAExC,oBAAC,mBAAQ,GACP,KAAK,EAAC,yDAAyD,EAC/D,QAAQ,EAAG,IAAM,EACjB,cAAc,EAAG,IAAM,EACvB,QAAQ,EAAG,IAAI,CAAC,iBAAmB,EAAG,EAExC,oBAAC,mBAAQ,GACP,KAAK,EAAC,qBAAqB,EAC3B,OAAO,EAAG,SAAW,EACrB,QAAQ,EAAG,UAAC,EAAE,EAAE,OAAO,IAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,EAArC,CAAuC,EAAG,CACpE,CACP,CAAC;IACJ,CAAC;IAEO,gDAAiB,GAAzB,UAA0B,EAAmB,EAAE,SAAkB;QAC/D,OAAO,CAAC,GAAG,CAAC,oCAAmC,SAAS,MAAI,CAAC,CAAC;IAChE,CAAC;IAEH,2BAAC;AAAD,CA3CA,AA2CC,CA3CyC,KAAK,CAAC,SAAS,GA2CxD;AA3CY,4BAAoB,uBA2ChC,CAAA","file":"demo/pages/CheckboxPage/examples/Checkbox.Basic.Example.js","sourcesContent":["import * as React from 'react';\nimport {\n  Checkbox\n  } from '../../../../Checkbox';\n\nexport interface ICheckboxBasicExampleState {\n  isChecked: boolean;\n}\n\nexport class CheckboxBasicExample extends React.Component<{}, ICheckboxBasicExampleState> {\n  constructor() {\n    super();\n\n    this.state = {\n      isChecked: false\n    };\n\n    this._onCheckboxChange = this._onCheckboxChange.bind(this);\n  }\n\n  public render() {\n    let { isChecked } = this.state;\n\n    return (\n      <div>\n        <Checkbox\n          label='Uncontrolled checkbox'\n          onChange={ this._onCheckboxChange } />\n\n        <Checkbox\n          label='Uncontrolled checkbox with defaultChecked true'\n          defaultChecked={ true }\n          onChange={ this._onCheckboxChange } />\n\n        <Checkbox\n          label='Disabled uncontrolled checkbox with defaultChecked true'\n          disabled={ true }\n          defaultChecked={ true }\n          onChange={ this._onCheckboxChange } />\n\n        <Checkbox\n          label='Controlled checkbox'\n          checked={ isChecked }\n          onChange={ (ev, checked) => this.setState({ isChecked: checked }) } />\n      </div>\n    );\n  }\n\n  private _onCheckboxChange(ev: React.FormEvent, isChecked: boolean) {\n    console.log(`The option has been changed to ${ isChecked }.`);\n  }\n\n}\n"],"sourceRoot":"/src"}