{"version":3,"sources":["demo/components/ExampleCard/ExampleCard.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,QAAO,oBAAoB,CAAC,CAAA;AAC5B,uBAAmC,iBAAiB,CAAC,CAAA;AACrD,oBAAoB,wBAAwB,CAAC,CAAA;AAE7C,IAAM,SAAS,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAgB7C;IAAiC,+BAAqD;IAEpF,qBAAY,KAAwB;QAClC,kBAAM,KAAK,CAAC,CAAC;QAEb,IAAI,CAAC,KAAK,GAAG;YACX,aAAa,EAAE,KAAK;SACrB,CAAC;QAEF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/D,CAAC;IAEM,4BAAM,GAAb;QACE,IAAA,eAA4D,EAApD,gBAAK,EAAE,cAAI,EAAE,sBAAQ,EAAE,kCAAc,CAAgB;QACrD,4CAAa,CAAgB;QACrC,IAAI,SAAS,GAAG,aAAa,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,iBAAiB,GAAG,EAAE,CAAC,CAAC;QAEpF,MAAM,CAAC,CACL,qBAAC,GAAG,IAAC,SAAS,EAAG,SAAW,GAC1B,qBAAC,GAAG,IAAC,SAAS,EAAC,oBAAoB,GACjC,qBAAC,IAAI,IAAC,SAAS,EAAC,6BAA6B,GAAG,KAAO,CAAO,EAC9D,qBAAC,GAAG,IAAC,SAAS,EAAC,qCAAqC,GAChD,IAAI,GAAG,CACT,oBAAC,eAAM,GAAC,UAAU,EAAG,mBAAU,CAAC,IAAM,EAAC,IAAI,EAAC,OAAO,EACjD,OAAO,EAAG,IAAI,CAAC,kBAAoB,EAAC,SAAS,EAAG,SAAG,CAAC,wBAAwB,EAAE,EAAE,WAAW,EAAE,aAAa,EAAE,CAAG,GAC7G,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,WAAW,GAAG,WAAa,CACjD,CACR,GAAG,CAAE,IAAI,CAAI,CACV,CACF,EAEN,qBAAC,GAAG,IAAC,SAAS,EAAC,kBAAkB,GAC/B,oBAAC,SAAS,GAAC,SAAS,EAAC,YAAY,GAC7B,IAAM,CACE,CACR,EAEN,qBAAC,GAAG,IAAC,SAAS,EAAG,SAAG,CAAC,qBAAqB,EAAE,EAAE,mBAAmB,EAAE,CAAC,cAAc,CAAC,EAAE,CAAG,GAAC,kBAAkB,GAAC,MAAM,GAC9G,QAAU,CACR,EAEJ,IAAI,CAAC,eAAe,EAAI,CACtB,CACP,CAAC;IACJ,CAAC;IAEO,qCAAe,GAAvB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,CACL,qBAAC,GAAG,IAAC,SAAS,EAAC,yBAAyB,GACtC,qBAAC,GAAG,IAAC,SAAS,EAAC,iBAAiB,GAC9B,qBAAC,EAAE,cAAQ,EACT,IAAI,CAAC,KAAK,CAAC,GAAK,CACd,EACN,qBAAC,GAAG,IAAC,SAAS,EAAC,mBAAmB,GAChC,qBAAC,EAAE,kBAAY,EACb,IAAI,CAAC,KAAK,CAAC,KAAO,CAChB,CACF,CACP,CAAC;QACJ,CAAC;IACH,CAAC;IAEO,wCAAkB,GAA1B;QACE,IAAI,CAAC,QAAQ,CAAC;YACZ,aAAa,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa;SACzC,CAAC,CAAC;IACL,CAAC;IACH,kBAAC;AAAD,CApEA,AAoEC,CApEgC,KAAK,CAAC,SAAS,GAoE/C;AApEY,mBAAW,cAoEvB,CAAA","file":"demo/components/ExampleCard/ExampleCard.js","sourcesContent":["import * as React from 'react';\nimport './ExampleCard.scss';\nimport { Button, ButtonType } from '../../../Button';\nimport { css } from '../../../utilities/css';\n\nconst Highlight = require('react-highlight');\n\nexport interface IExampleCardProps {\n  title: string;\n  isOptIn?: boolean;\n  code?: string;\n  children?: any;\n  isRightAligned?: boolean;\n  dos?: JSX.Element;\n  donts?: JSX.Element;\n}\n\nexport interface IExampleCardState {\n  isCodeVisible?: boolean;\n}\n\nexport class ExampleCard extends React.Component<IExampleCardProps, IExampleCardState> {\n\n  constructor(props: IExampleCardProps) {\n    super(props);\n\n    this.state = {\n      isCodeVisible: false\n    };\n\n    this._onToggleCodeClick = this._onToggleCodeClick.bind(this);\n  }\n\n  public render() {\n    const { title, code, children, isRightAligned } = this.props;\n    const { isCodeVisible } = this.state;\n    let rootClass = 'ExampleCard' + (this.state.isCodeVisible ? ' is-codeVisible' : '');\n\n    return (\n      <div className={ rootClass }>\n        <div className='ExampleCard-header'>\n          <span className='ExampleCard-title ms-font-l'>{ title }</span>\n          <div className='ExampleCard-toggleButtons ms-font-l'>\n            { code ? (\n            <Button buttonType={ ButtonType.icon } icon='Embed'\n              onClick={ this._onToggleCodeClick } className={ css('ExampleCard-codeButton', { 'is-active': isCodeVisible }) }>\n              { this.state.isCodeVisible ? 'Hide code' : 'Show code' }\n            </Button>\n            ) : ( null ) }\n          </div>\n        </div>\n\n        <div className='ExampleCard-code'>\n          <Highlight className='javascript'>\n            { code }\n          </Highlight>\n        </div>\n\n        <div className={ css('ExampleCard-example', { ' is-right-aligned': (isRightAligned) }) } data-is-scrollable='true'>\n          { children }\n        </div>\n\n        { this._getDosAndDonts() }\n      </div>\n    );\n  }\n\n  private _getDosAndDonts() {\n    if (this.props.dos && this.props.donts) {\n      return (\n        <div className='ExampleCard-dosAndDonts'>\n          <div className='ExampleCard-dos'>\n            <h4>Do</h4>\n            { this.props.dos }\n          </div>\n          <div className='ExampleCard-donts'>\n            <h4>Do not</h4>\n            { this.props.donts }\n          </div>\n        </div>\n      );\n    }\n  }\n\n  private _onToggleCodeClick() {\n    this.setState({\n      isCodeVisible: !this.state.isCodeVisible\n    });\n  }\n}\n"],"sourceRoot":"/src"}