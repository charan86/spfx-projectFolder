{"version":3,"sources":["utilities/selection/SelectionZone.test.tsx"],"names":[],"mappings":"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","file":"utilities/selection/SelectionZone.test.js","sourcesContent":["/* tslint:disable:no-unused-variable */\nimport * as React from 'react';\n/* tslint:enable:no-unused-variable */\n\nimport * as ReactDOM from 'react-dom';\nimport * as ReactTestUtils from 'react-addons-test-utils';\nlet { expect } = chai;\n\nimport { SelectionZone, Selection, SelectionMode } from './index';\nimport { KeyCodes } from '../KeyCodes';\n\nlet _selection: Selection;\nlet _selectionZone: any;\nlet _componentElement: Element;\nlet _toggleAll: Element;\nlet _surface0: Element;\nlet _invoke0: Element;\nlet _toggle0: Element;\nlet _surface1: Element;\nlet _invoke1: Element;\nlet _toggle1: Element;\nlet _invoke2: Element;\nlet _toggle2: Element;\nlet _surface3: Element;\n\nlet _onItemInvokeCalled: number;\nlet _lastItemInvoked: any;\n\nfunction _initializeSelection(selectionMode = SelectionMode.multiple) {\n  _selection = new Selection();\n  _selection.setItems([{ key: 'a', }, { key: 'b' }, { key: 'c' }, { key: 'd' }]);\n  _selectionZone = ReactTestUtils.renderIntoDocument(\n    <SelectionZone\n      selection={ _selection }\n      selectionMode={ selectionMode }\n      onItemInvoked={ (item) => { _onItemInvokeCalled++; _lastItemInvoked = item; } }>\n\n      <button id='toggleAll' data-selection-all-toggle={ true }>Toggle all selected</button>\n\n      <div id='surface0' data-selection-index='0'>\n        <button id='toggle0' data-selection-toggle={ true }>Toggle</button>\n        <button id='invoke0' data-selection-invoke={ true }>Invoke</button>\n      </div>\n\n      <div id='surface1' data-selection-index='1'>\n        <button id='toggle1' data-selection-toggle={ true }>Toggle</button>\n        <button id='invoke1' data-selection-invoke={ true }>Invoke</button>\n      </div>\n\n      <div id='invoke2' data-selection-index='2' data-selection-invoke={ true }>\n        <button id='toggle2' data-selection-toggle={ true }>Toggle</button>\n      </div>\n\n      <div id='surface3' data-selection-index='3'></div>\n\n    </SelectionZone>\n  );\n\n  _componentElement = ReactDOM.findDOMNode(_selectionZone);\n  _toggleAll = _componentElement.querySelector('#toggleAll');\n  _surface0 = _componentElement.querySelector('#surface0');\n  _invoke0 = _componentElement.querySelector('#invoke0');\n  _toggle0 = _componentElement.querySelector('#toggle0');\n  _surface1 = _componentElement.querySelector('#surface1');\n  _invoke1 = _componentElement.querySelector('#invoke1');\n  _toggle1 = _componentElement.querySelector('#toggle1');\n  _invoke2 = _componentElement.querySelector('#invoke2');\n  _toggle2 = _componentElement.querySelector('#toggle2');\n  _surface3 =  _componentElement.querySelector('#surface3');\n\n  _onItemInvokeCalled = 0;\n  _lastItemInvoked = undefined;\n}\n\ndescribe('SelectionZone', () => {\n  beforeEach(() => _initializeSelection());\n\n  it('toggles an item on click of toggle element', () => {\n    _simulateClick(_toggle0);\n    expect(_selection.isIndexSelected(0)).equals(true, 'Index 0 not selected');\n    _simulateClick(_toggle0);\n    expect(_selection.isIndexSelected(0)).equals(false, 'Index 0 selected');\n    expect(_onItemInvokeCalled).equals(0, 'onItemInvoked was called');\n  });\n\n  it('toggles an item on dblclick of toggle element', () => {\n    ReactTestUtils.Simulate.doubleClick(_toggle0);\n    expect(_selection.isIndexSelected(0)).equals(false, 'Index 0 selected');\n    expect(_onItemInvokeCalled).equals(0, 'onItemInvoked was called');\n  });\n\n  it('does not toggle an item on mousedown of toggle element', () => {\n    ReactTestUtils.Simulate.mouseDown(_toggle0);\n    expect(_selection.isIndexSelected(0) === false, 'Index 0 selected');\n    expect(_onItemInvokeCalled === 0, 'onItemInvoked was called');\n  });\n\n  it('selects an unselected item on mousedown of invoke without modifiers pressed', () => {\n    _selection.setAllSelected(true);\n    _selection.setIndexSelected(0, false, true);\n\n    // Mousedown on the only unselected item's invoke surface should deselect all and select that one.\n    ReactTestUtils.Simulate.mouseDown(_invoke0);\n    expect(_selection.isIndexSelected(0)).equals(true, 'Index 0 not selected after mousedown');\n    expect(_selection.getSelectedCount()).equals(1, 'Only 1 item should be selected');\n  });\n\n  it('does nothing with mousedown of invoke when item is selected already', () => {\n    // Mousedown on an item that's already selected should do nothing.\n    _selection.setAllSelected(true);\n    ReactTestUtils.Simulate.mouseDown(_invoke0);\n    expect(_selection.isAllSelected()).equals(true, 'Expecting all items to be selected');\n  });\n\n  it('calls the invoke callback on click of invoke area', () => {\n    _simulateClick(_invoke0);\n    expect(_onItemInvokeCalled === 1, 'onItemInvoked was not called 1 time after normal click');\n  });\n\n  it('selects an unselected item on click of item surface element', () => {\n    _simulateClick(_surface0);\n    expect(_selection.isIndexSelected(0)).equals(true, 'Index 0 not selected');\n    expect(_onItemInvokeCalled).equals(0, 'onItemInvoked was called');\n  });\n\n  it('does not unselect a selected item on click of item surface element', () => {\n    _selection.setIndexSelected(0, true, true);\n    _simulateClick(_surface0);\n    expect(_selection.isIndexSelected(0)).equals(true, 'Index 0 not selected');\n    expect(_onItemInvokeCalled).equals(0, 'onItemInvoked was called');\n  });\n\n  it('does not select an unselected item on mousedown of item surface element', () => {\n    ReactTestUtils.Simulate.mouseDown(_surface0);\n    expect(_selection.isIndexSelected(0)).equals(false, 'Index 0 selected');\n  });\n\n  it('invokes an item on double clicking the surface element', () => {\n    ReactTestUtils.Simulate.doubleClick(_surface0);\n    expect(_onItemInvokeCalled).equals(1, 'Item was invoked');\n    expect(_lastItemInvoked.key).equals('a', 'Item invoked was not expected item');\n  });\n\n  it('toggles all on toggle-all clicks', () => {\n    _simulateClick(_toggleAll);\n    expect(_selection.getSelectedCount()).equals(4, 'There were not 4 selected items');\n\n    _simulateClick(_toggle1);\n    expect(_selection.getSelectedCount()).equals(3, 'There were not 3 selected items after toggling index 1');\n\n    _simulateClick(_toggleAll);\n    expect(_selection.getSelectedCount()).equals(4, 'There were not 4 selected items after selecting all again');\n\n    _simulateClick(_toggleAll);\n    expect(_selection.getSelectedCount()).equals(0, 'There were not 0 selected items');\n  });\n\n  it('suports mouse shift click range select scenarios', () => {\n    _simulateClick(_surface1);\n    expect(_selection.getSelectedCount()).equals(1, 'Clicked surface 1');\n\n    _simulateClick(_surface3, { shiftKey: true });\n    expect(_selection.getSelectedCount()).equals(3, 'After clicking surface 1 and then shift clicking to surface 3');\n\n    _simulateClick(_surface0, { shiftKey: true });\n    expect(_selection.getSelectedCount()).equals(2, 'After shift clicking surface 0');\n  });\n\n  it('toggles by ctrl clicking a surface', () => {\n    _simulateClick(_toggleAll);\n    expect(_selection.getSelectedCount()).equals(4, 'There were not 4 selected items');\n\n    _simulateClick(_surface1, {\n      ctrlKey: true\n    });\n    expect(_selection.getSelectedCount()).equals(3, 'There were not 3 selected items');\n  });\n\n  it ('selects all on ctrl-a', () => {\n    ReactTestUtils.Simulate.keyDown(_componentElement, { ctrlKey: true, which: KeyCodes.a });\n    expect(_selection.isAllSelected()).equals(true, 'Expecting that all is selected aftr ctrl-a');\n  });\n\n  it('unselects all on escape', () => {\n    _selection.setAllSelected(true);\n    ReactTestUtils.Simulate.keyDown(_componentElement, { which: KeyCodes.escape });\n    expect(_selection.getSelectedCount()).equals(0, 'Expecting that none is selected aftr escape');\n  });\n\n  it('selects item on focus', () => {\n    ReactTestUtils.Simulate.focus(_surface0);\n    expect(_selection.isIndexSelected(0)).equals(true, 'Item 0 was not selected');\n  });\n\n  it('does not select an item on focus if ctrl/meta is pressed', () => {\n    ReactTestUtils.Simulate.keyDown(_componentElement, { ctrlKey: true });\n    ReactTestUtils.Simulate.focus(_surface0);\n    expect(_selection.isIndexSelected(0)).equals(false, 'Item 0 was selected on focus with modifier');\n  });\n\n  it('does not select an item on focus when ignoreNextFocus is called', () => {\n    _selectionZone.ignoreNextFocus();\n    ReactTestUtils.Simulate.focus(_surface0);\n    expect(_selection.isIndexSelected(0)).equals(false, 'Item 0 was selected on ignored focus');\n  });\n\n  it('toggles an item when pressing space', () => {\n    ReactTestUtils.Simulate.keyDown(_surface0, { which: KeyCodes.space });\n    expect(_selection.isIndexSelected(0)).equals(true, 'Expecting index 0 to become selected');\n    ReactTestUtils.Simulate.keyDown(_surface0, { which: KeyCodes.space });\n    expect(_selection.isIndexSelected(0)).equals(false, 'Expecting index 0 to become unselected');\n  });\n\n  it('does not select the row when clicking on a toggle within an invoke element', () => {\n    ReactTestUtils.Simulate.mouseDown(_toggle2);\n    expect(_selection.isIndexSelected(2)).equals(false, 'Item 2 should have been unselected');\n  });\n});\n\nfunction _simulateClick(el, eventData?: React.SyntheticEventData) {\n  ReactTestUtils.Simulate.mouseDown(el, eventData);\n  ReactTestUtils.Simulate.focus(el, eventData);\n  ReactTestUtils.Simulate.click(el, eventData);\n}\n"],"sourceRoot":"/src"}