{"version":3,"sources":["components/Checkbox/Checkbox.tsx"],"names":[],"mappings":"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","file":"components/Checkbox/Checkbox.js","sourcesContent":["import * as React from 'react';\nimport { BaseComponent } from '../../common/BaseComponent';\nimport {\n  ICheckbox,\n  ICheckboxProps\n} from './Checkbox.Props';\nimport { autobind } from '../../utilities/autobind';\nimport { css } from '../../utilities/css';\nimport { getId } from '../../utilities/object';\nimport './Checkbox.scss';\n\nexport interface ICheckboxState {\n  /** Is true when the control has focus. */\n  isFocused?: boolean;\n\n  /** Is true when Uncontrolled control is checked. */\n  isChecked?: boolean;\n}\n\nexport class Checkbox extends BaseComponent<ICheckboxProps, ICheckboxState> implements ICheckbox {\n  public static defaultProps: ICheckboxProps = {\n  };\n\n  private _id: string;\n  private _checkBox: HTMLInputElement;\n\n  constructor(props: ICheckboxProps) {\n    super(props);\n\n    this._id = getId('checkbox-');\n    this.state = {\n      isFocused: false,\n      isChecked: props.defaultChecked || false\n    };\n  }\n\n  public render() {\n    const {\n      checked,\n      className,\n      defaultChecked,\n      disabled,\n      inputProps,\n      label\n    } = this.props;\n\n    const { isFocused } = this.state;\n    const isChecked = checked === undefined ? this.state.isChecked : checked;\n\n    return (\n      <div\n        className={ css('ms-Checkbox', className, { 'is-inFocus': isFocused }) }\n      >\n        <input\n          { ...inputProps }\n          { ...(checked !== undefined && { checked }) }\n          { ...(defaultChecked !== undefined && { defaultChecked }) }\n          disabled={ disabled }\n          ref={ this._resolveRef('_checkBox') }\n          id={ this._id }\n          name={ this._id }\n          className='ms-Checkbox-input'\n          type='checkbox'\n          onChange={ this._onChange }\n          onFocus={ this._onFocus }\n          onBlur={ this._onBlur }\n          aria-checked={ isChecked }\n        />\n        {this.props.children}\n        <label htmlFor={ this._id }\n          className={ css('ms-Checkbox-label', {\n            'is-checked': isChecked,\n            'is-disabled': disabled\n            })\n          }\n        >\n          { label && <span className='ms-Label'>{ label }</span> }\n        </label>\n      </div>\n    );\n  }\n\n  public get checked(): boolean {\n    return this._checkBox ? this._checkBox.checked : false;\n  }\n\n  public focus() {\n    if (this._checkBox) {\n      this._checkBox.focus();\n    }\n  }\n\n  @autobind\n  private _onFocus(ev: React.FocusEvent): void {\n    this.setState({ isFocused: true });\n  }\n\n  @autobind\n  private _onBlur(ev: React.FocusEvent): void {\n    this.setState({ isFocused: false });\n  }\n\n  @autobind\n  private _onChange(ev: React.FormEvent) {\n    const { onChange } = this.props;\n    const isChecked = (ev.target as HTMLInputElement).checked;\n\n    if (onChange) {\n      onChange(ev, isChecked);\n    }\n\n    if (this.props.checked === undefined) {\n      this.setState({ isChecked: isChecked });\n    }\n  }\n}\n"],"sourceRoot":"/src"}