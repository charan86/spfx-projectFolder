{"version":3,"sources":["components/pickers/BasePicker.tsx"],"names":[],"mappings":"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","file":"components/pickers/BasePicker.js","sourcesContent":["import * as React from 'react';\nimport { FocusZone } from '../../FocusZone';\nimport { Callout } from '../../Callout';\nimport { KeyCodes } from '../../utilities/KeyCodes';\nimport { Selection, SelectionZone, SelectionMode } from '../../utilities/selection/index';\nimport { Suggestions } from './Suggestions/Suggestions';\nimport { ISuggestionsProps } from './Suggestions/Suggestions.Props';\nimport { SuggestionsController } from './Suggestions/SuggestionsController';\nimport { IBasePickerProps } from './BasePicker.Props';\nimport { IPickerItemProps } from './PickerItem.Props';\nimport { BaseComponent } from '../../common/BaseComponent';\nimport { css } from '../../utilities/css';\nimport { autobind } from '../../utilities/autobind';\nimport './BasePicker.scss';\n\nexport interface IBasePickerState {\n  items?: any;\n  displayValue?: string;\n  value?: string;\n  moreSuggestionsAvailable?: boolean;\n  suggestionsVisible?: boolean;\n  suggestionsLoading?: boolean;\n}\n\n// This interface is because selection direction is not currently supported by the typedefinitions even\n// though it works in IE (9 and later), Chrome, and Firefox.\nexport interface IHTMLInputElementWithSelectionDirection extends HTMLInputElement {\n  setSelectionRange(start: number, end: number, direction?: string): void;\n}\n\nexport class BasePicker<T, P extends IBasePickerProps<T>> extends BaseComponent<P, IBasePickerState> {\n\n  protected selection: Selection;\n\n  protected root: HTMLElement;\n  protected input: HTMLInputElement;\n  protected focusZone: FocusZone;\n  protected suggestionElement: Suggestions<T>;\n\n  protected suggestionStore: SuggestionsController<T>;\n  protected SuggestionOfProperType = Suggestions as new (props: ISuggestionsProps<T>) => Suggestions<T>;\n  protected loadingTimer: number;\n  protected currentPromise: PromiseLike<any>;\n\n  constructor(basePickerProps: P) {\n    super(basePickerProps);\n\n    let items: T[] = basePickerProps.defaultSelectedItems || [];\n\n    this.suggestionStore = new SuggestionsController<T>();\n    this.selection = new Selection({ onSelectionChanged: () => this.onSelectionChange() });\n    this.selection.setItems(items);\n    this.state = {\n      items: items,\n      displayValue: '',\n      value: '',\n      moreSuggestionsAvailable: false\n    };\n  }\n\n  public componentWillReceiveProps(newProps: IBasePickerProps<T>, newState: IBasePickerState) {\n    if (newState.items && newState.items !== this.state.items) {\n      this.selection.setItems(newState.items);\n    }\n  }\n\n  public componentDidMount() {\n    this.selection.setItems(this.state.items);\n  }\n\n  public focus() {\n    this.focusZone.focus();\n  }\n  @autobind\n  public dismissSuggestions() {\n    this.setState({ suggestionsVisible: false });\n  }\n\n  public completeSuggestion() {\n    if (this.suggestionStore.hasSelectedSuggestion()) {\n      this.addItem(this.suggestionStore.currentSuggestion.item);\n      this.updateValue('');\n    }\n  }\n\n  public render() {\n    let { displayValue } = this.state;\n    return (\n      <div ref={ this._resolveRef('root') } className={ css('ms-BasePicker', this.props.className ? this.props.className : '') } onKeyDown={ this.onKeyDown }>\n        <SelectionZone selection={ this.selection } selectionMode={ SelectionMode.multiple }>\n          <FocusZone ref={ this._resolveRef('focusZone') } className='ms-BasePicker-text'>\n            { this.renderItems() }\n            <input\n              ref={ this._resolveRef('input') }\n              className='ms-BasePicker-input'\n              onFocus={ this.onInputFocus }\n              onChange={ this.onInputChange }\n              value={ displayValue }\n              aria-activedescendant={ 'sug-' + this.suggestionStore.currentIndex }\n              aria-owns='suggestion-list'\n              aria-expanded='true'\n              aria-haspopup='true'\n              autoCapitalize='off'\n              autoComplete='off'/>\n          </FocusZone>\n        </SelectionZone>\n        { this.renderSuggestions() }\n      </div>\n    );\n  }\n\n  protected renderSuggestions(): JSX.Element {\n    let TypedSuggestion = this.SuggestionOfProperType;\n    return this.state.suggestionsVisible ? (\n      <Callout isBeakVisible={ false } gapSpace={ 0 } targetElement={ this.root } onDismiss={ this.dismissSuggestions }>\n        <TypedSuggestion\n          onRenderSuggestion={ this.props.onRenderSuggestionsItem }\n          onSuggestionClick={ this.onSuggestionClick }\n          suggestions={ this.suggestionStore.getSuggestions() }\n          ref={ this._resolveRef('suggestionElement') }\n          onGetMoreResults={ this.onGetMoreResults }\n          moreSuggestionsAvailable={ this.state.moreSuggestionsAvailable }\n          isLoading={ this.state.suggestionsLoading }\n          { ...this.props.pickerSuggestionsProps }\n          />\n      </Callout>\n    ) : (null);\n  }\n\n  protected renderItems(): JSX.Element[] {\n    let { onRenderItem = () => undefined } = this.props;\n    let { items } = this.state;\n    return items.map((item, index) => onRenderItem({\n      item,\n      index,\n      isSelected: this.selection.isIndexSelected(index),\n      onRemoveItem: () => this.removeItem(item)\n    }));\n  }\n\n  protected resetFocus(index: number) {\n    let { items } = this.state;\n\n    if (items.length) {\n      let newEl: HTMLElement = this.root.querySelectorAll('[data-selection-index]')[Math.min(index, items.length - 1)] as HTMLElement;\n\n      if (newEl) {\n        this.focusZone.focusElement(newEl);\n      }\n    } else {\n      this.input.focus();\n    }\n  }\n\n  protected onSuggestionSelect() {\n    if (this.suggestionStore.currentSuggestion) {\n      let currentValue: string = this.state.value;\n      let itemValue: string = this.props.getTextFromItem(this.suggestionStore.currentSuggestion.item, currentValue);\n      this.updateDisplayValue(currentValue, itemValue, () => this.suggestionElement.scrollSelected());\n    }\n  }\n\n  protected onSelectionChange() {\n    this.forceUpdate();\n  }\n\n  protected updateSuggestions(suggestions: any[]) {\n    this.suggestionStore.updateSuggestions(suggestions);\n    this.forceUpdate();\n  }\n\n  protected updateValue(updatedValue: string) {\n    let { value } = this.state;\n\n    if (!this.suggestionStore.currentIndex || updatedValue !== value) {\n      let suggestions: T[] | PromiseLike<T[]> = this.props.onResolveSuggestions(updatedValue, this.state.items);\n      let suggestionsArray: T[] = suggestions as T[];\n      let suggestionsPromiseLike: PromiseLike<T[]> = suggestions as PromiseLike<T[]>;\n\n      // Check to see if the returned value is an array, if it is then just pass it into the next function.\n      // If the returned value is not an array then check to see if it's a promise or PromiseLike. If it is then resolve it asynchronously.\n      if (Array.isArray(suggestionsArray)) {\n        this.resolveNewValue(updatedValue, suggestionsArray);\n      } else if (suggestionsPromiseLike.then) {\n        if (!this.loadingTimer) {\n          this.loadingTimer = this._async.setTimeout(() => this.setState({\n            suggestionsLoading: true\n          }), 500);\n        }\n        this.updateDisplayValue(updatedValue);\n        // Ensure that the promise will only use the callback if it was the most recent one.\n        let promise: PromiseLike<void> = this.currentPromise = suggestionsPromiseLike.then((newSuggestions: T[]) => {\n          if (promise === this.currentPromise) {\n            this.resolveNewValue(updatedValue, newSuggestions);\n            if (this.loadingTimer) {\n              this._async.clearTimeout(this.loadingTimer);\n              this.loadingTimer = undefined;\n            }\n          }\n        });\n      }\n    }\n  }\n\n  protected resolveNewValue(updatedValue: string, suggestions: T[]) {\n\n    this.suggestionStore.updateSuggestions(suggestions);\n    let itemValue: string = undefined;\n    if (this.suggestionStore.currentSuggestion) {\n      itemValue = this.props.getTextFromItem(this.suggestionStore.currentSuggestion.item, updatedValue);\n    }\n    this.setState({ suggestionsLoading: false });\n    this.updateDisplayValue(updatedValue, itemValue);\n  }\n\n  protected updateDisplayValue(updatedValue: string, itemValue?: string, afterUpdateCallback?: () => void) {\n    let differenceIndex: number = 0;\n\n    if (updatedValue && itemValue) {\n      while (differenceIndex < updatedValue.length && updatedValue[differenceIndex].toLocaleLowerCase() === itemValue[differenceIndex].toLocaleLowerCase()) {\n        differenceIndex++;\n      }\n    }\n\n    this.setState({\n      displayValue: itemValue || updatedValue,\n      value: updatedValue,\n      suggestionsVisible: updatedValue && updatedValue !== ''\n    }, () => {\n      if (afterUpdateCallback) {\n        afterUpdateCallback();\n      }\n      if (itemValue && differenceIndex < itemValue.length && differenceIndex === updatedValue.length) {\n        (this.input as IHTMLInputElementWithSelectionDirection).setSelectionRange(differenceIndex, itemValue.length, 'backward');\n      }\n    });\n  }\n\n  protected onChange() {\n    if (this.props.onChange) {\n      this.props.onChange(this.state.items);\n    }\n  }\n\n  @autobind\n  protected onInputChange(ev: React.FormEvent) {\n    let value: string = (ev.target as HTMLInputElement).value;\n\n    this.updateValue(value);\n    this.setState({ moreSuggestionsAvailable: true });\n  }\n\n  @autobind\n  protected onSuggestionClick(ev: React.MouseEvent, item: any, index: number) {\n    this.addItemByIndex(index);\n  }\n\n  @autobind\n  protected onInputFocus(ev: React.FocusEvent) {\n    this.selection.setAllSelected(false);\n    if (this.state.value) {\n      this.setState({ suggestionsVisible: true });\n    }\n  }\n\n  @autobind\n  protected onKeyDown(ev: React.KeyboardEvent) {\n    let { value } = this.state;\n\n    switch (ev.which) {\n      case KeyCodes.escape:\n        this.dismissSuggestions();\n        break;\n\n      case KeyCodes.tab:\n      case KeyCodes.enter:\n        if (value && this.suggestionStore.hasSelectedSuggestion()) {\n          this.completeSuggestion();\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n\n        break;\n\n      case KeyCodes.backspace:\n        this.onBackspace(ev);\n        break;\n\n      case KeyCodes.up:\n        if (ev.target === this.input && this.suggestionStore.previousSuggestion()) {\n          ev.preventDefault();\n          ev.stopPropagation();\n          this.onSuggestionSelect();\n        }\n        break;\n\n      case KeyCodes.down:\n        if (ev.target === this.input) {\n          if (this.suggestionStore.nextSuggestion()) {\n            ev.preventDefault();\n            ev.stopPropagation();\n            this.onSuggestionSelect();\n          }\n        }\n        break;\n    }\n  }\n\n  @autobind\n  protected onGetMoreResults() {\n    if (this.props.onGetMoreResults) {\n      let suggestions: T[] | PromiseLike<T[]> = this.props.onGetMoreResults(this.state.value, this.state.items);\n      let suggestionsArray: T[] = suggestions as T[];\n      let suggestionsPromiseLike: PromiseLike<T[]> = suggestions as PromiseLike<T[]>;\n\n      if (Array.isArray(suggestionsArray)) {\n        this.updateSuggestions(suggestionsArray);\n      } else if (suggestionsPromiseLike.then) {\n        suggestionsPromiseLike.then((newSuggestions: T[]) => this.updateSuggestions(newSuggestions));\n      }\n    }\n    this.input.focus();\n    this.setState({ moreSuggestionsAvailable: false });\n  }\n\n  @autobind\n  protected addItemByIndex(index: number): void {\n    this.addItem(this.suggestionStore.getSuggestionAtIndex(index).item);\n    this.updateValue('');\n  }\n\n  @autobind\n  protected addItem(item: T) {\n    let newItems: T[] = this.state.items.concat([item]);\n    this.selection.setItems(newItems);\n    this.setState({ items: newItems }, () => this.onChange());\n  }\n\n  @autobind\n  protected removeItem(item: IPickerItemProps<T>) {\n    let { items } = this.state;\n    let index: number = items.indexOf(item);\n\n    if (index >= 0) {\n      let newItems: T[] = items.slice(0, index).concat(items.slice(index + 1));\n\n      this.selection.setItems(newItems);\n      this.setState({ items: newItems }, () => this.onChange());\n    }\n  }\n\n  @autobind\n  protected removeItems(itemsToRemove: any[]) {\n    let { items } = this.state;\n    let newItems: T[] = items.filter(item => itemsToRemove.indexOf(item) === -1);\n    let firstItemToRemove = this.selection.getSelection()[0];\n    let index: number = items.indexOf(firstItemToRemove);\n\n    this.selection.setItems(newItems);\n\n    this.setState({ items: newItems }, () => this.resetFocus(index));\n  }\n\n  // This is protected because we may expect the backspace key to work differently in a different kind of picker.\n  // This lets the subclass override it and provide it's own onBackspace. For an example see the BasePickerListBelow\n  protected onBackspace(ev: React.KeyboardEvent) {\n    let { displayValue } = this.state;\n    if (ev.target === this.input) {\n      if (displayValue && this.suggestionStore.hasSelectedSuggestion() && this.input.selectionStart !== this.input.selectionEnd) {\n        this.updateValue(displayValue.substr(0, this.input.selectionStart - 1));\n        // Since this effectively deletes a letter from the string we need to preventDefault so that\n        // the backspace doesn't try to delete a letter that's already been deleted. If a letter is deleted\n        // it can trigger the onChange event again which can have unintended consequences.\n        ev.preventDefault();\n      } else if (!displayValue && this.state.items.length) {\n        this.removeItem(this.state.items[this.state.items.length - 1]);\n      }\n    } else if (this.selection.getSelectedCount() > 0) {\n      this.removeItems(this.selection.getSelection());\n    }\n  }\n}\n\nexport class BasePickerListBelow<T, P extends IBasePickerProps<T>> extends BasePicker<T, P> {\n  public render() {\n    let { displayValue } = this.state;\n\n    return (\n      <div>\n        <div ref={ this._resolveRef('root') }\n          className={ css('ms-BasePicker', this.props.className ? this.props.className : '') }\n          onKeyDown={ this.onKeyDown }>\n          <SelectionZone selection={ this.selection }\n            selectionMode={ SelectionMode.multiple }>\n            <div className='ms-BasePicker-text'>\n              <input ref={ this._resolveRef('input') }\n                onFocus={ this.onInputFocus }\n                onChange={ this.onInputChange }\n                value={ displayValue }\n                className='ms-BasePicker-input'\n                />\n            </div>\n          </SelectionZone>\n        </div>\n        { this.renderSuggestions() }\n        <FocusZone ref={ this._resolveRef('focusZone') } className='ms-BasePicker-selectedItems'>\n          { this.renderItems() }\n        </FocusZone>\n\n      </div>\n    );\n  }\n\n  protected onBackspace(ev: React.KeyboardEvent) {\n    let { value } = this.state;\n    if (ev.target === this.input) {\n      if (value && this.input.selectionStart !== this.input.selectionEnd) {\n        this.updateValue(value.substring(0, this.input.selectionStart));\n        // Since this effectively deletes a letter from the string we need to preventDefault so that\n        // the backspace doesn't try to delete a letter that's already been deleted. If a letter is deleted\n        // it can trigger the onChange event again which can have unintended consequences.\n        ev.preventDefault();\n      }\n    }\n  }\n}\n"],"sourceRoot":"/src"}