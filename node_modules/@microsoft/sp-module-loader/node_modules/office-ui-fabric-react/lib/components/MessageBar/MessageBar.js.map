{"version":3,"sources":["components/MessageBar/MessageBar.tsx"],"names":[],"mappings":"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","file":"components/MessageBar/MessageBar.js","sourcesContent":["import * as React from 'react';\nimport { Button, ButtonType } from '../../Button';\nimport './MessageBar.scss';\nimport { css } from '../../utilities/css';\nimport { IMessageBarProps, MessageBarType } from './MessageBar.Props';\nimport { getId } from '../../utilities/object';\n\nexport interface IMessageBarState {\n  labelId?: string;\n}\n\nexport class MessageBar extends React.Component<IMessageBarProps, IMessageBarState> {\n\n  public static defaultProps: IMessageBarProps = {\n    messageBarType: MessageBarType.info,\n    onDismiss: null,\n    isMultiline: true,\n  };\n\n  private ICON_MAP = {\n    [MessageBarType.info]:    'Info',\n    [MessageBarType.warning]: 'Info',\n    [MessageBarType.error]: 'ErrorBadge',\n    [MessageBarType.blocked]: 'Blocked',\n    [MessageBarType.remove]: 'Blocked', // TODO remove deprecated value at >= 1.0.0\n    [MessageBarType.severeWarning]: 'Warning',\n    [MessageBarType.success]: 'Completed'\n  };\n\n  constructor(props: IMessageBarProps) {\n    super(props);\n\n    this.state = {\n      labelId: getId('MessageBar')\n    };\n  }\n\n  public render(): JSX.Element {\n    let { isMultiline } = this.props;\n\n    return isMultiline ? this._renderMultiLine() : this._renderSingleLine();\n  }\n\n  private _getActionsDiv(): JSX.Element {\n    if (this.props.actions) {\n      return this.props.isMultiline ?\n        <div className='ms-MessageBar-actions'> { this.props.actions } </div> :\n        <div className='ms-MessageBar-actionsOneline'> { [this._getDismissDiv(), this.props.actions] } </div>;\n    }\n    return null;\n  }\n\n  private _getClassName(): string {\n    return css(this.props.className, 'ms-MessageBar', {\n      'ms-MessageBar': this.props.messageBarType === MessageBarType.info,\n      'ms-MessageBar--error': this.props.messageBarType === MessageBarType.error,\n      'ms-MessageBar--blocked': (this.props.messageBarType === MessageBarType.blocked) || (this.props.messageBarType === MessageBarType.remove), // TODO remove deprecated value at >= 1.0.0\n      'ms-MessageBar--severeWarning': this.props.messageBarType === MessageBarType.severeWarning,\n      'ms-MessageBar--success' : this.props.messageBarType === MessageBarType.success,\n      'ms-MessageBar--warning' : this.props.messageBarType === MessageBarType.warning\n    });\n  }\n\n  private _getDismissDiv(): JSX.Element {\n    if (this.props.onDismiss != null) {\n      return <Button\n        disabled={ false }\n        className='ms-MessageBar-dismissal'\n        buttonType={ ButtonType.icon }\n        onClick={ this.props.onDismiss }\n        icon='Cancel'\n        ariaLabel={ this.props.dismissButtonAriaLabel }\n      />;\n    }\n    return null;\n  }\n\n  private _getIconSpan(): JSX.Element {\n    return <div className='ms-MessageBar-icon'><i className={ `ms-Icon ms-Icon--${this.ICON_MAP[this.props.messageBarType]}` }></i></div>;\n  }\n\n  private _getInnerTextClassName(): string {\n    return this.props.onDismiss || this.props.actions ? 'ms-MessageBar-innerTextPadding' : 'ms-MessageBar-innerText';\n  }\n\n  private _renderMultiLine(): React.ReactElement<React.HTMLProps<HTMLAreaElement>> {\n    return (\n      <div className={ this._getClassName() + ' ms-MessageBar-multiline' } role='status' aria-live='polite' aria-controls='ms-MessageBar-text'>\n        <div className='ms-MessageBar-content'>\n          { this._getIconSpan() }\n          <div className='ms-MessageBar-actionables'>\n            { this._getDismissDiv() }\n            <div className='ms-MessageBar-text' id={ this.state.labelId }>\n              <span className={ this._getInnerTextClassName() }>\n              {  this.props.children }\n              </span>\n            </div>\n          { this._getActionsDiv() }\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private _renderSingleLine(): React.ReactElement<React.HTMLProps<HTMLAreaElement>> {\n    return (\n      <div className={this._getClassName() + ' ms-MessageBar-singleline' } role='status' aria-live='polite' aria-controls='ms-MessageBar-text'>\n        <div className='ms-MessageBar-content'>\n          { this._getIconSpan() }\n          <div className='ms-MessageBar-actionables'>\n            <div className='ms-MessageBar-text' id={ this.state.labelId }>\n              <span className={ this._getInnerTextClassName() }>\n              {  this.props.children }\n              </span>\n            </div>\n          { this._getActionsDiv() }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"/src"}