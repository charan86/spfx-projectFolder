{"version":3,"sources":["components/SearchBox/SearchBox.tsx"],"names":[],"mappings":"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","file":"components/SearchBox/SearchBox.js","sourcesContent":["import * as React from 'react';\nimport { ISearchBoxProps } from './SearchBox.Props';\nimport { css } from '../../utilities/css';\nimport { getId } from '../../utilities/object';\nimport './SearchBox.scss';\n\nexport interface ISearchBoxState {\n  value?: string;\n  hasFocus?: boolean;\n  id?: string;\n}\n\nexport class SearchBox extends React.Component<ISearchBoxProps, ISearchBoxState> {\n  public static defaultProps: ISearchBoxProps = {\n    labelText: 'Search',\n  };\n\n  public refs: {\n    [key: string]: React.ReactInstance;\n    inputText: HTMLInputElement;\n  };\n\n  public constructor(props: ISearchBoxProps) {\n    super(props);\n\n    // Handle deprecated prop\n    if (this.props.onChanged) {\n      this.props.onChange = this.props.onChanged;\n    }\n\n    this.state = {\n      value: props.value,\n      hasFocus: false,\n      id: getId('SearchBox')\n    };\n    this._clearInput = this._clearInput.bind(this);\n    this._onInputChanged = this._onInputChanged.bind(this);\n    this._onInputFocus = this._onInputFocus.bind(this);\n    this._onInputBlur = this._onInputBlur.bind(this);\n  }\n\n  public componentWillReceiveProps(newProps: ISearchBoxProps) {\n    if (newProps.value !== undefined) {\n      this.setState({\n        value: newProps.value\n      });\n    }\n  }\n\n  public render() {\n    let { labelText, className } = this.props;\n    let { value, hasFocus, id } = this.state;\n\n    return (\n      <div className={ css('ms-SearchBox', className, {\n          'is-active': hasFocus\n        })}\n      >\n        { !hasFocus && !value ? <label className='ms-SearchBox-label' htmlFor={id}>\n              <i className='ms-SearchBox-icon ms-Icon ms-Icon--Search'></i>\n              <span className='ms-SearchBox-text'>{ labelText }</span>\n             </label> : null }\n        <input id={id} className='ms-SearchBox-field' onFocus={ this._onInputFocus } onBlur={ this._onInputBlur } onChange={ this._onInputChanged } value={value} ref='inputText' />\n        <button className='ms-SearchBox-closeButton' onMouseDown={ this._clearInput }><i className='ms-Icon ms-Icon--Clear'></i></button>\n      </div>\n    );\n  }\n\n  private _clearInput(ev?: any) {\n    this.setState({\n      value: ''\n    });\n    this._onChange('');\n    ev.stopPropagation();\n    ev.preventDefault();\n  }\n\n   private _onInputFocus() {\n    this.setState({\n      hasFocus: true\n    });\n  }\n\n  private _onInputBlur() {\n    this.setState({\n      hasFocus: false\n    });\n  }\n\n  private _onInputChanged(ev: React.KeyboardEvent) {\n    this.setState({\n      value: this.refs.inputText.value\n    });\n    this._onChange(this.refs.inputText.value);\n  }\n\n  private _onChange(newValue: string): void {\n    let { onChange } = this.props;\n\n    if (onChange) {\n      onChange(newValue);\n    }\n  }\n}\n"],"sourceRoot":"/src"}