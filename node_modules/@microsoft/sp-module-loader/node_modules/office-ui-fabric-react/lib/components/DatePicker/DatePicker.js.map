{"version":3,"sources":["components/DatePicker/DatePicker.tsx"],"names":[],"mappings":"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","file":"components/DatePicker/DatePicker.js","sourcesContent":["import * as React from 'react';\nimport {\n  DayOfWeek,\n  IDatePickerProps\n} from './DatePicker.Props';\nimport { DatePickerDay } from './DatePickerDay';\nimport { DatePickerMonth } from './DatePickerMonth';\nimport { TextField } from '../../TextField';\nimport {\n  autobind,\n  BaseComponent,\n  KeyCodes,\n  css,\n  elementContains\n} from '../../Utilities';\nimport './DatePicker.scss';\n\nexport interface IDatePickerState {\n  /** The currently focused date in the drop down, but not necessarily selected */\n  navigatedDate?: Date;\n  selectedDate?: Date;\n  formattedDate?: string;\n  isDatePickerShown?: boolean;\n  errorMessage?: string;\n}\n\nexport class DatePicker extends BaseComponent<IDatePickerProps, IDatePickerState> {\n  public static defaultProps: IDatePickerProps = {\n    allowTextInput: false,\n    formatDate: (date: Date) => {\n      if (date) {\n        return date.toDateString();\n      }\n\n      return null;\n    },\n    parseDateFromString: (dateStr: string) => {\n      const date = Date.parse(dateStr);\n      if (date) {\n        return new Date(date);\n      }\n\n      return null;\n    },\n    firstDayOfWeek: DayOfWeek.Sunday,\n    isRequired: false,\n    isMonthPickerVisible: true,\n    strings: null\n  };\n\n  public refs: {\n    [key: string]: React.ReactInstance;\n    root: HTMLElement;\n    textField: TextField;\n    textFieldContainer: HTMLElement;\n    dayPicker: DatePickerDay;\n  };\n\n  private _preventFocusOpeningPicker: boolean;\n  private _focusOnSelectedDateOnUpdate: boolean;\n\n  constructor(props: IDatePickerProps) {\n    super();\n\n    let { formatDate, value } = props;\n\n    this.state = {\n      selectedDate: value || new Date(),\n      formattedDate: formatDate && value ? formatDate(value) : null,\n      isDatePickerShown: false,\n      errorMessage: ''\n    };\n\n    this._preventFocusOpeningPicker = false;\n  }\n\n  public componentWillReceiveProps(nextProps: IDatePickerProps) {\n    let { formatDate, isRequired, strings, value } = nextProps;\n    const errorMessage = isRequired && !value ? (strings.isRequiredErrorMessage || '*') : '';\n\n    this.setState({\n      selectedDate: value || new Date(),\n      formattedDate: formatDate && value ? formatDate(value) : null,\n      errorMessage: errorMessage\n    });\n  }\n\n  public componentDidMount() {\n    this._events.on(window, 'scroll', this._dismissDatePickerPopup);\n    this._events.on(window, 'resize', this._dismissDatePickerPopup);\n    this._events.on(window, 'click', this._onClickCapture, true);\n    this._events.on(window, 'focus', this._onClickCapture, true);\n    this._events.on(window, 'touchstart', this._onClickCapture, true);\n  }\n\n  public componentDidUpdate() {\n    if (this._focusOnSelectedDateOnUpdate) {\n      this.refs.dayPicker.focus();\n      this._focusOnSelectedDateOnUpdate = false;\n    }\n  }\n\n  public render() {\n    let rootClass = 'ms-DatePicker';\n    let { firstDayOfWeek, strings, label, isRequired, ariaLabel, placeholder, allowTextInput } = this.props;\n    let { isDatePickerShown, formattedDate, selectedDate, navigatedDate, errorMessage } = this.state;\n\n    return (\n      <div className={ rootClass } ref='root'>\n        <div ref='textFieldContainer'>\n          <TextField\n            ariaLabel={ ariaLabel }\n            aria-haspopup='true'\n            required={ isRequired }\n            onKeyDown={ this._onTextFieldKeyDown }\n            onFocus={ this._onTextFieldFocus }\n            onBlur={ this._onTextFieldBlur }\n            onClick={ this._onTextFieldClick }\n            onChanged={ this._onTextFieldChanged }\n            errorMessage={ errorMessage }\n            label={ label }\n            placeholder={ placeholder }\n            iconClass={ css(\n              'ms-Icon ms-Icon--Calendar',\n              label ? 'ms-DatePicker-event--with-label' : 'ms-DatePicker-event--without-label'\n            ) }\n            readOnly={ !allowTextInput }\n            value={ formattedDate }\n            ref='textField' />\n        </div>\n\n        { isDatePickerShown && (\n          <div className={'ms-DatePicker-picker ms-DatePicker-picker--opened ms-DatePicker-picker--focused ' + (this.props.isMonthPickerVisible ? 'is-monthPickerVisible' : '') } >\n            <div className='ms-DatePicker-holder' onKeyDown={ this._onDatePickerPopupKeyDown }>\n              <div className='ms-DatePicker-frame'>\n                <div className='ms-DatePicker-wrap'>\n                  <DatePickerDay\n                    selectedDate={ selectedDate }\n                    navigatedDate={ navigatedDate }\n                    onSelectDate={ this._onSelectDate }\n                    onNavigateDate={ this._onNavigateDate }\n                    firstDayOfWeek={ firstDayOfWeek }\n                    strings={ strings }\n                    ref='dayPicker' />\n                  <DatePickerMonth\n                    navigatedDate={ navigatedDate }\n                    strings={ strings }\n                    onNavigateDate={ this._onNavigateDate } />\n                  <span\n                    className='ms-DatePicker-goToday js-goToday'\n                    onClick={ this._onGotoToday }\n                    onKeyDown={ this._onGotoTodayKeyDown }\n                    tabIndex={ 0 }>\n                    { strings.goToToday }\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) }\n      </div>\n    );\n  }\n\n  private _restoreFocusToTextField() {\n    this._preventFocusOpeningPicker = true;\n    this.refs.textField.focus();\n  }\n\n  private _navigateDay(date: Date) {\n    this.setState({\n      navigatedDate: date\n    });\n  }\n\n  @autobind\n  private _onNavigateDate(date: Date, focusOnNavigatedDay: boolean) {\n    this._focusOnSelectedDateOnUpdate = this._focusOnSelectedDateOnUpdate || focusOnNavigatedDay;\n    this._navigateDay(date);\n  }\n\n  @autobind\n  private _onSelectDate(date: Date) {\n    let { formatDate, onSelectDate } = this.props;\n\n    this.setState({\n      selectedDate: date,\n      isDatePickerShown: false,\n      formattedDate: formatDate && date ? formatDate(date) : null,\n    });\n\n    this._restoreFocusToTextField();\n\n    if (onSelectDate) {\n      onSelectDate(date);\n    }\n  };\n\n  @autobind\n  private _onGotoToday() {\n    this._focusOnSelectedDateOnUpdate = true;\n    this._navigateDay(new Date());\n  };\n\n  @autobind\n  private _onGotoTodayKeyDown(ev: React.KeyboardEvent) {\n    if (ev.which === KeyCodes.enter) {\n      ev.preventDefault();\n      this._onGotoToday();\n    }\n  };\n\n  @autobind\n  private _onTextFieldFocus(ev: React.FocusEvent) {\n    if (!this.props.allowTextInput) {\n      if (!this._preventFocusOpeningPicker) {\n        this._showDatePickerPopup();\n      }\n\n      this._preventFocusOpeningPicker = false;\n    }\n  };\n\n  @autobind\n  private _onTextFieldBlur(ev: React.FocusEvent) {\n    this._validateTextInput();\n  };\n\n  @autobind\n  private _onTextFieldChanged(newValue: string) {\n    if (this.props.allowTextInput) {\n      if (this.state.isDatePickerShown) {\n        this._dismissDatePickerPopup();\n      }\n\n      this.setState({\n        errorMessage: '',\n        formattedDate: newValue\n      });\n    }\n  }\n\n  @autobind\n  private _onTextFieldKeyDown(ev: React.KeyboardEvent) {\n    switch (ev.which) {\n      case KeyCodes.enter:\n        ev.preventDefault();\n        ev.stopPropagation();\n        if (!this.state.isDatePickerShown) {\n          this._showDatePickerPopup();\n        } else {\n          // When DatePicker allows input date string directly,\n          // it is expected to hit another enter to close the popup\n          if (this.props.allowTextInput) {\n            this._restoreFocusToTextField();\n            this._dismissDatePickerPopup();\n          }\n        }\n        break;\n\n      case KeyCodes.escape:\n        this._handleEscKey(ev);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  @autobind\n  private _onDatePickerPopupKeyDown(ev: React.KeyboardEvent) {\n    switch (ev.which) {\n      case KeyCodes.enter:\n        ev.preventDefault();\n        break;\n\n      case KeyCodes.backspace:\n        ev.preventDefault();\n        break;\n\n      case KeyCodes.escape:\n        this._handleEscKey(ev);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  @autobind\n  private _onClickCapture(ev: React.MouseEvent) {\n    if (!elementContains(this.refs.root, ev.target as HTMLElement)) {\n      this._dismissDatePickerPopup();\n    }\n  }\n\n  @autobind\n  private _onTextFieldClick(ev: React.MouseEvent) {\n    if (!this.state.isDatePickerShown) {\n      this._showDatePickerPopup();\n    } else {\n      if (this.props.allowTextInput) {\n        this.setState({\n          isDatePickerShown: false\n        });\n      }\n    }\n  }\n\n  private _showDatePickerPopup() {\n    if (!this.state.isDatePickerShown) {\n      this._focusOnSelectedDateOnUpdate = true;\n      this.setState({\n        isDatePickerShown: true,\n        navigatedDate: this.state.selectedDate,\n        errorMessage: ''\n      });\n    }\n  }\n\n  private _dismissDatePickerPopup() {\n    if (this.state.isDatePickerShown) {\n      this.setState({\n        isDatePickerShown: false\n      });\n\n      this._validateTextInput();\n    }\n  }\n\n  @autobind\n  private _handleEscKey(ev: React.KeyboardEvent) {\n    this._restoreFocusToTextField();\n    this._dismissDatePickerPopup();\n  }\n\n  @autobind\n  private _validateTextInput() {\n    let { isRequired, allowTextInput, strings, formatDate, parseDateFromString, onSelectDate } = this.props;\n    const inputValue: string = this.state.formattedDate;\n\n    // Do validation only if DatePicker's popup is dismissed\n    if (this.state.isDatePickerShown) {\n      return;\n    }\n\n    // Check when DatePicker is a required field but has NO input value\n    if (isRequired && !inputValue) {\n      this.setState({\n        // Since fabic react doesn't have loc support yet\n        // use the symbol '*' to represent error message\n        errorMessage: strings.isRequiredErrorMessage || '*'\n      });\n      return;\n    }\n\n    if (allowTextInput) {\n      let date = null;\n      if (inputValue) {\n        date = parseDateFromString(inputValue);\n        if (!date) {\n          this.setState({\n            errorMessage: strings.invalidInputErrorMessage || '*'\n          });\n        } else {\n          this.setState({\n            selectedDate: date,\n            formattedDate: formatDate && date ? formatDate(date) : null,\n            errorMessage: ''\n          });\n        }\n      } else {\n        // No input date string shouldn't be an error if field is not required\n        this.setState({\n          errorMessage: ''\n        });\n      }\n\n      // Execute onSelectDate callback\n      if (onSelectDate) {\n        // If no input date string or input date string is invalid\n        // date variable will be null, callback should expect null value for this case\n        onSelectDate(date);\n      }\n    }\n  }\n}\n"],"sourceRoot":"/src"}