{"version":3,"sources":["common/connect.tsx"],"names":[],"mappings":";AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,8BAA8B,iBAAiB,CAAC,CAAA;AAGhD,iBACE,SAA0F,EAC1F,iBAAmC,EACnC,QAAyD;IAGzD,MAAM,CAAC,UAAC,KAAgB,IAAK,OAAA,CAC3B,oBAAC,6BAAa,GACZ,SAAS,EAAE,SAAU,EACrB,cAAc,EAAE,KAAM,EACtB,QAAQ,EAAE,QAAS,EACnB,iBAAiB,EAAE,iBAAkB,EACnC,CACL,EAP4B,CAO5B,CAAC;AACJ,CAAC;AAde,eAAO,UActB,CAAA","file":"common/connect.js","sourcesContent":["import * as React from 'react';\nimport { ConnectedHost } from './ConnectedHost';\nimport { IStoreKey } from './storeKey';\n\nexport function connect<ORIGINAL_PROPS, NEW_PROPS>(\n  component: React.ComponentClass<ORIGINAL_PROPS> | React.StatelessComponent<ORIGINAL_PROPS>,\n  storesToSubscribe: IStoreKey<any>[],\n  getProps: (props: ORIGINAL_PROPS, ...stores) => NEW_PROPS\n): React.StatelessComponent<NEW_PROPS> {\n\n  return (props: NEW_PROPS) => (\n    <ConnectedHost\n      component={component}\n      componentProps={props}\n      getProps={getProps}\n      storesToSubscribe={storesToSubscribe}\n      />\n  );\n}\n"],"sourceRoot":"/src"}