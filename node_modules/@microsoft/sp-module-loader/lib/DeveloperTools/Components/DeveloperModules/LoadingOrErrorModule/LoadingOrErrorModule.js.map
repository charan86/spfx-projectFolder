{"version":3,"sources":["DeveloperTools/Components/DeveloperModules/LoadingOrErrorModule/LoadingOrErrorModule.tsx"],"names":[],"mappings":"AAAA;;;GAGG;;;;;;;AAEH,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAG/B,qCAA0C,iCAAiC,CAAC,CAAA;AAE5E,iDAAmB,oCAAoC,CAAC,CAAA;AAExD,0CAAoB,6BAA6B,CAAC,CAAA;AAMlD;IAAkD,wCAA8C;IAC9F;QACE,iBAAO,CAAC;IACV,CAAC;IAEM,gDAAiB,GAAxB;QAAA,iBAQC;QAPC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,EAAE;aAC3B,IAAI,CAAC;YACJ,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAY;YAClB,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,qCAAM,GAAb;QACE,IAAM,GAAG,GAAsB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAE9C,EAAE,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;YAClB,MAAM,CAAE,qBAAC,GAAG,IAAC,SAAS,EAAE,0CAAM,CAAC,aAAc;gBACnC,oBAAC,8BAAO,GAAC,IAAI,EAAE,kCAAW,CAAC,KAAM,EAAC,KAAK,EAAE,mCAAO,CAAC,4BAA6B,EAAG;aAC7E,CAAC;QACjB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,SAAS,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;YAC3C,mCAAmC;YACnC,IAAM,YAAY,GAAG,GAAG,CAAC,SAAS,IAAI,mCAAO,CAAC,oCAAoC,CAAC;YACnF,MAAM,CAAE,qBAAC,GAAG,IAAC,SAAS,EAAE,0CAAM,CAAC,MAAO;gBAC5B,qBAAC,GAAG,KAAC,SAAS,GAAC,WAAW,EAAC,SAAS,EAAC,uBAAuB,GAAC,kBAAkB,GAAC,eAAe,GAC5F,YAAa,CACV;gBACN,qBAAC,CAAC,IAAC,SAAS,EAAE,0BAAG,CAAC,2BAA2B,EAAE,WAAW,EAAE,0CAAM,CAAC,SAAS,CAAE,GAC3E,YAAa,CACZ,CACA,CAAC;QACjB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC5C,CAAC;IACH,CAAC;IACH,2BAAC;AAAD,CArCA,AAqCC,CArCiD,KAAK,CAAC,SAAS,GAqChE;AArCD;sCAqCC,CAAA","file":"DeveloperTools/Components/DeveloperModules/LoadingOrErrorModule/LoadingOrErrorModule.js","sourcesContent":["/**\r\n * @file LoadingOrErrorModule.tsx\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n */\r\n\r\nimport * as React from 'react';\r\n\r\nimport DeveloperToolsTab from './../../../Models/DeveloperToolsTab';\r\nimport { Spinner, SpinnerType, css } from './../../../DeveloperToolsFabric';\r\n\r\nimport styles from './LoadingOrErrorModule.module.scss';\r\n\r\nimport strings from './LoadingOrErrorModule.resx';\r\n\r\nexport interface ILoadingOrErrorTabProps {\r\n  tab: DeveloperToolsTab;\r\n}\r\n\r\nexport default class LoadingOrErrorModule extends React.Component<ILoadingOrErrorTabProps, void> {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this.props.tab.loadComponent()\r\n      .then(() => {\r\n        this.forceUpdate();\r\n      })\r\n      .catch((error: Error) => {\r\n        this.forceUpdate();\r\n      });\r\n  }\r\n\r\n  public render(): React.ReactElement<any> { // tslint:disable-line:no-any\r\n    const tab: DeveloperToolsTab = this.props.tab;\r\n\r\n    if (tab.isLoading) {\r\n      return  <div className={styles.loadingModule}>\r\n                <Spinner type={SpinnerType.large} label={strings.developerToolsTabLoadingText} />\r\n              </div>;\r\n    } else if (tab.loadError || !tab.component) {\r\n      // tslint:disable-next-line:typedef\r\n      const errorMessage = tab.loadError || strings.developerToolsTabLoadingUnknownError;\r\n      return  <div className={styles.module}>\r\n                <div aria-live='assertive' className='ms-u-screenReaderOnly' data-automation-id='error-message'>\r\n                  {errorMessage}\r\n                </div>\r\n                <p className={css('ms-TextField-errorMessage', 'ms-font-l', styles.errorText)}>\r\n                  {errorMessage}\r\n                </p>\r\n              </div>;\r\n    } else {\r\n      return React.createElement(tab.component);\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}