/**
 * @file ManifestManager.tsx
 * @Copyright (c) Microsoft Corporation.  All rights reserved.
 */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var React = require('react');
var ManifestManagerStore_1 = require('./../../../Stores/ManifestManagerStore');
var ManifestManagerActionCreator_1 = require('./../../../ActionCreators/ManifestManagerActionCreator');
var ManifestDetails_1 = require('./ManifestDetails/ManifestDetails');
var DeveloperToolsFabric_1 = require('./../../../DeveloperToolsFabric');
var ManifestManager_module_scss_1 = require('./ManifestManager.module.scss');
var ManifestManager_resx_1 = require('./ManifestManager.resx');
var ManifestManager = (function (_super) {
    __extends(ManifestManager, _super);
    function ManifestManager() {
        var _this = this;
        _super.call(this);
        this._selection = new DeveloperToolsFabric_1.Selection({
            getKey: function (item) { return item.id; },
            onSelectionChanged: function () {
                var selectedModule = _this._selection.getSelection()[0];
                if (!selectedModule) {
                    ManifestManagerActionCreator_1.default.selectManifest(undefined);
                }
                else {
                    ManifestManagerActionCreator_1.default.selectManifest(selectedModule.id);
                }
            }
        });
        this._setState = function () {
            _this.setState({
                manifests: ManifestManagerStore_1.default.registeredManifests,
                selectedManifest: ManifestManagerStore_1.default.selectedManifest
            });
        };
        this.state = {
            manifests: ManifestManagerStore_1.default.registeredManifests,
            selectedManifest: ManifestManagerStore_1.default.selectedManifest
        };
    }
    ManifestManager.prototype.componentDidMount = function () {
        ManifestManagerStore_1.default.addListener(this._setState);
    };
    ManifestManager.prototype.componentWillUnmount = function () {
        ManifestManagerStore_1.default.removeListener(this._setState);
    };
    ManifestManager.prototype.render = function () {
        var selectedManifest = this.state.selectedManifest;
        var manifestDetailsBox = selectedManifest
            ? React.createElement(ManifestDetails_1.default, {manifest: selectedManifest})
            : React.createElement("div", {className: ManifestManager_module_scss_1.default.noManifestSelectedContainer}, 
                React.createElement("div", null, ManifestManager_resx_1.default.noManifestSelected)
            );
        return React.createElement("div", {className: ManifestManager_module_scss_1.default.container}, 
            React.createElement("div", {className: ManifestManager_module_scss_1.default.manifestListContainer}, 
                React.createElement(DeveloperToolsFabric_1.DetailsList, {items: this.state.manifests, columns: [{
                        key: 'id',
                        name: 'id',
                        fieldName: 'id',
                        minWidth: 0,
                        maxWidth: 290
                    }], isHeaderVisible: false, selectionMode: DeveloperToolsFabric_1.SelectionMode.single, selection: this._selection, setKey: 'set', constrainMode: DeveloperToolsFabric_1.ConstrainMode.unconstrained})
            ), 
            React.createElement("div", {className: ManifestManager_module_scss_1.default.manifestDetailsContainer}, manifestDetailsBox));
    };
    return ManifestManager;
}(React.Component));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = ManifestManager;

//# sourceMappingURL=ManifestManager.js.map
