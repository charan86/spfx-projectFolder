{"version":3,"sources":["DeveloperTools/Models/DeveloperToolsTab.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAWH,oCAAoB,0BAA0B,CAAC,CAAA;AAE/C;;;;;GAKG;AACH;IAQE,2BAAmB,UAA8B;QARnD,iBA+DC;QA3DS,eAAU,GAAY,KAAK,CAAC;QA0B7B,kBAAa,GAAwB;YAC1C,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC;gBAChC,+DAA+D;gBAC/D,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YACpC,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,4BAA4B,CAAC,CAAC,CAAC;gBACvC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,KAAI,CAAC,4BAA4B,GAAG,IAAI,OAAO,CAA6B,KAAI,CAAC,qBAAqB,CAAC;qBACpG,IAAI,CAAC,UAAC,SAAqC;oBAC1C,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;gBAC9B,CAAC,CAAC;qBACD,KAAK,CAAC,UAAC,KAAY;oBAClB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBAC1B,CAAC,CAAC,CAAC;YACP,CAAC;YAED,MAAM,CAAC,KAAI,CAAC,4BAA4B,CAAC;QAC3C,CAAC,CAAC;QAzCA,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC;QAE/B,IAAM,mBAAmB,GACvB,UAAmD,CAAC;QACtD,IAAM,iBAAiB,GACrB,UAAiD,CAAC;QAEpD,EAAE,CAAC,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,qBAAqB,GAAG,iBAAiB,CAAC,oBAAoB,CAAC;YACpE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC,SAAS,CAAC;QAClD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,IAAI,KAAK,CAAC,6BAAO,CAAC,yCAAyC,CAAC,CAAC;QACrE,CAAC;IACH,CAAC;IAED,sBAAW,oCAAK;aAAhB;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;;;OAAA;IAwBD,sBAAW,wCAAS;aAApB;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;;;OAAA;IAED,sBAAW,wCAAS;aAApB;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;;;OAAA;IAED,sBAAW,wCAAS;aAApB;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;;;OAAA;IACH,wBAAC;AAAD,CA/DA,AA+DC,IAAA;AA/DD;mCA+DC,CAAA","file":"DeveloperTools/Models/DeveloperToolsTab.js","sourcesContent":["/**\r\n * @file DeveloperToolsTab.ts\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n */\r\n\r\nimport * as React from 'react';\r\n\r\nimport {\r\n  IComponentInitializer,\r\n  IDeveloperToolsTabComponentParameters,\r\n  IDeveloperToolsTabPromiseParameters,\r\n  IDeveloperToolsTab\r\n} from '../IDeveloperToolsTab';\r\n\r\nimport strings from './../DeveloperTools.resx';\r\n\r\n/**\r\n * Represents a developer tools tab. The developer console can be invoked with the \"CTRL+SHIFT+~\"\r\n *  key combination.\r\n *\r\n * @internal\r\n */\r\nexport default class DeveloperToolsTab {\r\n  private _title: string;\r\n  private _componentInitializer: IComponentInitializer;\r\n  private _componentInitializerPromise: Promise<void>;\r\n  private _isLoading: boolean = false;\r\n  private _component: React.ComponentClass<void>;\r\n  private _loadError: Error;\r\n\r\n  public constructor(parameters: IDeveloperToolsTab) {\r\n    this._title = parameters.title;\r\n\r\n    const componentParameters: IDeveloperToolsTabComponentParameters =\r\n      parameters as IDeveloperToolsTabComponentParameters;\r\n    const promiseParameters: IDeveloperToolsTabPromiseParameters =\r\n      parameters as IDeveloperToolsTabPromiseParameters;\r\n\r\n    if (promiseParameters.componentInitializer) {\r\n      this._componentInitializer = promiseParameters.componentInitializer;\r\n      this._isLoading = true;\r\n    } else if (componentParameters.component) {\r\n      this._component = componentParameters.component;\r\n    } else {\r\n      throw new Error(strings.missingDeveloperToolsTabInitFunctionError);\r\n    }\r\n  }\r\n\r\n  public get title(): string {\r\n    return this._title;\r\n  }\r\n\r\n  public loadComponent: () => Promise<void> = (): Promise<void> => {\r\n    if (!this._componentInitializer) {\r\n      // If the component was passed in directly, resolve immediately\r\n      return Promise.resolve(undefined);\r\n    }\r\n\r\n    if (!this._componentInitializerPromise) {\r\n      this._isLoading = true;\r\n      this._componentInitializerPromise = new Promise<React.ComponentClass<void>>(this._componentInitializer)\r\n        .then((component: React.ComponentClass<void>) => {\r\n          this._isLoading = false;\r\n          this._component = component;\r\n        })\r\n        .catch((error: Error) => {\r\n          this._isLoading = false;\r\n          this._loadError = error;\r\n        });\r\n    }\r\n\r\n    return this._componentInitializerPromise;\r\n  };\r\n\r\n  public get isLoading(): boolean {\r\n    return this._isLoading;\r\n  }\r\n\r\n  public get component(): React.ComponentClass<void> {\r\n    return this._component;\r\n  }\r\n\r\n  public get loadError(): Error {\r\n    return this._loadError;\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}