{"version":3,"sources":["stores/ModuleStore.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAGH,uCAAmC,6BAA6B,CAAC,CAAA;AAEjE;IAAA;QAWU,eAAU,GAAqB,IAAI,GAAG,EAAe,CAAC,CAAC,6BAA6B;IAkE9F,CAAC;IA1EC,sBAAkB,uBAAQ;aAA1B;YACE,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC3B,WAAW,CAAC,SAAS,GAAG,IAAI,WAAW,EAAE,CAAC;YAC5C,CAAC;YAED,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC;QAC/B,CAAC;;;OAAA;IAIM,mCAAa,GAApB,UAA8B,EAAU;QACtC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC;IAEM,qCAAe,GAAtB,UAAuB,EAAU,EAAE,MAAW;QAC5C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;QAClC,CAAC;IACH,CAAC;IAED;;;;OAIG;IACI,oCAAc,GAArB,UAAsB,WAAmB;QACvC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACd,IAAM,GAAG,GAAe,OAAO,CAAC,KAAK,CAAC,CAAC;YACvC,IAAM,gBAAgB,GAAW,yBAAyB,CAAC;YAC3D,IAAM,eAAe,GAAW,wBAAwB,CAAC;YAEzD,EAAE,CAAC,CAAC,gBAAgB,KAAK,aAAa,GAAG,cAAc;gBACnD,eAAe,KAAM,aAAa,GAAG,aAAa,CAAC,CAAC,CAAC;gBACvD,yGAAyG;gBACzG,MAAM,CAAC,SAAS,CAAC;YACnB,CAAC;YAED,IAAM,QAAQ,GAAW,GAAG,CAAC,OAAO,CAAC,uBAAuB,EAAE,gBAAgB,CAAC,CAAC;YAChF,IAAM,OAAO,GAAW,GAAG,CAAC,OAAO,CAAC,uBAAuB,EAAE,eAAe,CAAC,CAAC;YAE9E,wCAAwC;YACxC,2BAA2B;YAC3B,IAAM,eAAe,GAGjB,WAAkB,CAAC;YACvB,0BAA0B;YAE1B,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC;gBACpC,eAAe,CAAC,aAAa,GAAG,gCAAsB,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACtF,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC,CAAC;gBAClC,eAAe,CAAC,YAAY,GAAG,gCAAsB,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YACrF,CAAC;YAED,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACpB,KAAK,OAAO;oBACV,MAAM,CAAC,eAAe,CAAC,aAAa,CAAC;gBAEvC,KAAK,WAAW;oBACd,qCAAqC;oBACrC,MAAM,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,UAAC,KAAU,IAAK,OAAA,KAAK,CAAC,4CAA4C,EAAlD,CAAkD,CAAC,CAAC;gBAEhH,KAAK,MAAM;oBACT,MAAM,CAAC,eAAe,CAAC,YAAY,CAAC;gBAEtC;oBACE,KAAK,CAAC;YACV,CAAC;QACH,CAAC;QAED,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IACH,kBAAC;AAAD,CA7EA,AA6EC,IAAA;AA7ED;6BA6EC,CAAA","file":"stores/ModuleStore.js","sourcesContent":["/**\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n *\r\n * @file ModuleStore.ts\r\n */\r\n\r\nimport * as URL from 'url';\r\nimport SPModuleLoaderProvider from './../SPModuleLoaderProvider';\r\n\r\nexport default class ModuleStore {\r\n  private static _instance: ModuleStore;\r\n\r\n  public static get instance(): ModuleStore {\r\n    if (!ModuleStore._instance) {\r\n      ModuleStore._instance = new ModuleStore();\r\n    }\r\n\r\n    return ModuleStore._instance;\r\n  }\r\n\r\n  private _moduleMap: Map<string, any> = new Map<string, any>(); // tslint:disable-line:no-any\r\n\r\n  public getModuleById<TModule>(id: string): TModule {\r\n    return this._moduleMap.get(id);\r\n  }\r\n\r\n  public storeModuleById(id: string, module: any): void { // tslint:disable-line:no-any\r\n    if (!this._moduleMap.has(id)) {\r\n      this._moduleMap.set(id, module);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function contains some magic to load special packages (React, React-DOM, and Flux) while we're serving\r\n   *  from a local workbench without bunding any of them. This function shouldn't be used in any context other\r\n   *  than the local workbench and for specific packages.\r\n   */\r\n  public npmLoadPackage(packageName: string): Promise<any> { // tslint:disable-line:no-any\r\n    if (NPM_BUILD) {\r\n      const url: typeof URL = require('url');\r\n      const relativeReactUrl: string = '__RELATIVE_REACT_PATH__';\r\n      const relativeFluxUrl: string = '__RELATIVE_FLUX_PATH__';\r\n\r\n      if (relativeReactUrl === '__RELATIVE_' + 'REACT_PATH__' ||\r\n          relativeFluxUrl  === '__RELATIVE_' + 'FLUX_PATH__') {\r\n        // If the package hasn't been installed (i.e. - it's NPMX linked), don't try to load from incorrect paths\r\n        return undefined;\r\n      }\r\n\r\n      const reactUrl: string = url.resolve(__webpack_public_path__, relativeReactUrl);\r\n      const fluxUrl: string = url.resolve(__webpack_public_path__, relativeFluxUrl);\r\n\r\n      // Stick these on the ModuleStore object\r\n      /* tslint:disable:no-any */\r\n      const staticContainer: {\r\n        _reactPromise: Promise<any>,\r\n        _fluxPromise: Promise<any>\r\n      } = ModuleStore as any;\r\n      /* tslint:enable:no-any */\r\n\r\n      if (!staticContainer._reactPromise) {\r\n       staticContainer._reactPromise = SPModuleLoaderProvider.instance.loadScript(reactUrl);\r\n      }\r\n\r\n      if (!staticContainer._fluxPromise) {\r\n        staticContainer._fluxPromise = SPModuleLoaderProvider.instance.loadScript(fluxUrl);\r\n      }\r\n\r\n      switch (packageName) {\r\n        case 'react':\r\n          return staticContainer._reactPromise;\r\n\r\n        case 'react-dom':\r\n          /* tslint:disable-next-line:no-any */\r\n          return staticContainer._reactPromise.then((react: any) => react.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED);\r\n\r\n        case 'flux':\r\n          return staticContainer._fluxPromise;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}