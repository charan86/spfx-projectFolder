{"version":3,"sources":["stores/ManifestStore.ts"],"names":[],"mappings":"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","file":"stores/ManifestStore.js","sourcesContent":["/**\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n *\r\n * @file ManifestStore.ts\r\n */\r\n\r\nimport { IClientSideComponentManifest } from '@microsoft/sp-module-interfaces';\r\nimport { IApplicationPreloadedData, ensureDebugAllowed } from './../SPModuleLoader';\r\n\r\nexport interface IManifestStoreEntry {\r\n  /**\r\n   * The manifest's ID.\r\n   */\r\n  id: string;\r\n\r\n  /**\r\n   * The manifest V2 payload.\r\n   */\r\n  manifest: IClientSideComponentManifest;\r\n\r\n  /**\r\n   * A debug manifest V2 payload, if one has been provided.\r\n   */\r\n  debugManifest?: IClientSideComponentManifest;\r\n}\r\n\r\n/**\r\n * This class maintains a cache of the manifests on the current page.\r\n */\r\nexport default class ManifestStore {\r\n  private static _instance: ManifestStore;\r\n\r\n  // @TODO VSO#248541: remove this when server side change is in.\r\n  // sorted by GUID order./\r\n  private static _internalManifestMap: {} = {\r\n    '02a01e42-69ab-403d-8a16-acd128661f8e': 'OfficeUIFabricReact',\r\n    '0ef418ba-5d19-4ade-9db0-b339873291d0': 'NewsfeedWebPart',\r\n    '1c6c9123-7aac-41f3-a376-3caea41ed83f': 'SPModuleLoader',\r\n    '1c4541f7-5c31-41aa-9fa8-fbc9dc14c0a8': 'SPPageContext',\r\n    '243166f5-4dc3-4fe2-9df2-a7971b546a0a': 'ClientWebPart',\r\n    '275c0095-a77e-4f6d-a2a0-6a7626911518': 'EmbeddedVideoWebPart',\r\n    '31e9537e-f9dc-40a4-8834-0e3b7df418bc': 'YammerEmbedWebPart',\r\n    '3be745e0-eb4e-4a48-8a39-fdf10af0ac79': 'QuickLinksWebPart',\r\n    '4268b5b2-0ad2-11e6-b512-3e1d05defe78': 'EventsWebPart',\r\n    '490d7c76-1824-45b2-9de3-676421c997fa': 'ContentEmbedWebPart',\r\n    '4d5eb168-6729-49a8-aec7-0e397f486b6e': 'SPClientPreview',\r\n    '4df9bb86-ab0a-4aab-ab5f-48bf167048fb': 'SPApplicationBase',\r\n    '58fcd18b-e1af-4b0a-b23b-422c2c52d5a2': 'PowerBIReportEmbedWebPart',\r\n    '6410b3b6-d440-4663-8744-378976dc041e': 'LinkPreviewWebPart',\r\n    '6676088b-e28e-4a90-b9cb-d0d0303cd2eb': 'GroupCalendarWebPart',\r\n    '6aeaab4a-4d96-47fe-a0c2-9e063a2efda4': 'ReactFlux',\r\n    '73e1dc6c-8441-42cc-ad47-4bd3659f8a3a': 'SPLodashSubset',\r\n    '8494e7d7-6b99-47b2-a741-59873e42f16f': 'SPComponentUtilities',\r\n    '85093aa7-8c12-4683-91aa-47cd5e2654db': 'SPCanvas',\r\n    '8be81a5c-af38-4bb2-af97-afa3b64dfbed': 'WebPartWorkbench',\r\n    '91a50c94-865f-4f5c-8b4e-e49659e69772': 'QuickChartWebPart',\r\n    '974a7777-0990-4136-8fa6-95d80114c2e0': 'SPWebPartBase',\r\n    'a5df8fdf-b508-4b66-98a6-d83bc2597f63': 'NewsreelWebPart',\r\n    'a81a5cf6-c9ad-4a0a-85aa-68c03d2d22a2': 'SPFilepicker',\r\n    'a8c07ea7-3ee8-4376-8afa-e0c5098615eb': 'ClientBaseLodashOdspUtilities',\r\n    'af59c2b3-2da7-41fd-8b72-3939817960af': 'SPClientBase',\r\n    'af8be689-990e-492a-81f7-ba3e4cd3ed9c': 'ImageGalleryWebPart',\r\n    'b6917cb1-93a0-4b97-a84d-7cf49975d4ec': 'PublishingPage',\r\n    'b7dd04e1-19ce-4b24-9132-b60a1c2b910d': 'DocumentEmbedWebPart',\r\n    'c07208f0-ea3b-4c1a-9965-ac1b825211a6': 'SPHttp',\r\n    'c70391ea-0b10-4ee9-b2b4-006d3fcad0cd': 'PinnedItemsWebPart',\r\n    'c83d5509-ccd5-4c67-919f-2440f237927a': 'I18nUtilities',\r\n    'cc2cc925-b5be-41bb-880a-f0f8030c6aff': 'OdspUtilitiesBundle',\r\n    'd1d91016-032f-456d-98a4-721247c305e8': 'ImageWebPart',\r\n    'daf0b71c-6de8-4ef7-b511-faae7c388708': 'ContentRollupWebPart',\r\n    'e377ea37-9047-43b9-8cdb-a761be2f8e09': 'BingMapWebPart',\r\n    'e990b1eb-5816-42ed-afc5-4c8568db1196': 'WorldClockWebPart',\r\n    'eb4b666b-5c29-4dad-9a99-23613f21a2b7': 'ClassicPageWebPartApplication',\r\n    'eb95c819-ab8f-4689-bd03-0c2d65d47b1f': 'SiteActivityWebPart',\r\n    'f97266fb-ccb7-430e-9384-4124d05295d3': 'Decorators'\r\n  };\r\n\r\n  public static get instance(): ManifestStore {\r\n    if (!this._instance) {\r\n      this._instance = new ManifestStore();\r\n    }\r\n\r\n    return this._instance;\r\n  }\r\n\r\n  private _manifests: Map<string, IManifestStoreEntry> = new Map<string, IManifestStoreEntry>();\r\n\r\n  /**\r\n   * Populate the manifest store with the preloaded manifests.\r\n   *\r\n   * @param {preloadedData} The preloaded data\r\n   */\r\n  public populateManifests(preloadedData: IApplicationPreloadedData): void {\r\n    if (preloadedData) {\r\n      if (preloadedData.clientSideApplicationManifest) {\r\n        this._addManifest(preloadedData.clientSideApplicationManifest, true);\r\n      }\r\n\r\n      if (preloadedData.manifests && preloadedData.manifests.length) {\r\n        this.importManifests(preloadedData.manifests, true);\r\n      }\r\n    }\r\n\r\n    /* tslint:disable-next-line:no-any */\r\n    const globalManifests: IClientSideComponentManifest[] = (window as any).g_webPartManifests;\r\n    if (globalManifests && globalManifests.length) {\r\n      this.importManifests(globalManifests, true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Populate the manifest store with debug manifests.\r\n   *\r\n   * @param {manifests} A dictionary of debug manifests.\r\n   */\r\n  public populateDebugManifests(manifests: { [id: string]: IClientSideComponentManifest }): void {\r\n    if (manifests) {\r\n      for (const id in manifests) { // tslint:disable-line:forin\r\n        if (!this._manifests.get(id)) {\r\n          this._manifests.set(id, {\r\n            id: id,\r\n            manifest: undefined\r\n          });\r\n        }\r\n\r\n        this._manifests.get(id).debugManifest = manifests[id];\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return a manifest by its ID. Only return a debug manifest is debug is allowed. If a manifest isn't found by\r\n   * the provided ID, return undefined.\r\n   *\r\n   * @param {id} The ID of the manifest to retrieve.\r\n   * @param {allowDebug} If true, return a debug manifest if one exists.\r\n   * @returns The retrieved manifest, or undefined if one could not be found.\r\n   */\r\n  public getManifestById(id: string): IClientSideComponentManifest {\r\n    const manifestEntry: IManifestStoreEntry = this._manifests.get(id);\r\n    return this._getManifestFromStoreEntry(manifestEntry);\r\n  }\r\n\r\n  /**\r\n   * Get all registered manifest objects.\r\n   *\r\n   * @returns The registered manifest objects.\r\n   */\r\n  public getAllManifests(): IClientSideComponentManifest[] {\r\n    const result: IClientSideComponentManifest[] = [];\r\n\r\n    this._manifests.forEach((manifestEntry: IManifestStoreEntry) => {\r\n      const manifest: IClientSideComponentManifest = this._getManifestFromStoreEntry(manifestEntry);\r\n      if (manifest) {\r\n        result.push(manifest);\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Returns a map of manifest IDs to manfiests.\r\n   *\r\n   * @return {{ [key: string]: IManifestStoreEntry }}: A map of manifest IDs to manfiests.\r\n   */\r\n  public getManifestMap(): { [key: string]: IManifestStoreEntry } {\r\n    const result: { [key: string]: IManifestStoreEntry } = {};\r\n    this._manifests.forEach((value: IManifestStoreEntry, key: string) => result[key] = value);\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Loads additional manifests into the manifest store, updating existing manifests.\r\n   *\r\n   * @param {manifests} The manifests to load into the store.\r\n   */\r\n  public importManifests(manifests: IClientSideComponentManifest[],\r\n                         overwriteExisting: boolean): void {\r\n    manifests.forEach((manifest: IClientSideComponentManifest) => this._addManifest(manifest, overwriteExisting));\r\n  }\r\n\r\n  private _getManifestFromStoreEntry(manifestEntry: IManifestStoreEntry): IClientSideComponentManifest {\r\n    const allowDebug: boolean = ensureDebugAllowed(false);\r\n\r\n    if (manifestEntry) {\r\n      if (allowDebug && manifestEntry.debugManifest) {\r\n        return manifestEntry.debugManifest;\r\n      } else {\r\n        return manifestEntry.manifest;\r\n      }\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  private _addManifest(manifest: IClientSideComponentManifest, overwriteExisting: boolean): void {\r\n    const existingEntry: IManifestStoreEntry = this._manifests.get(manifest.id);\r\n    this._enhanceManifest(manifest);\r\n    if (existingEntry) {\r\n      if (overwriteExisting || !existingEntry.manifest) {\r\n        existingEntry.manifest = manifest;\r\n      }\r\n    } else {\r\n      this._manifests.set(manifest.id, { id: manifest.id, manifest: manifest });\r\n    }\r\n  }\r\n\r\n  // @TODO VSO#248541: remove this when server side change is in.\r\n  private _enhanceManifest(manifest: IClientSideComponentManifest): void {\r\n    const alias: string = ManifestStore._internalManifestMap[manifest.id];\r\n    if (alias) {\r\n      manifest.isInternal = true;\r\n      if (!manifest.alias) {\r\n        manifest.alias = alias;\r\n      }\r\n    } else {\r\n      manifest.isInternal = false;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}