{"version":3,"sources":["MapExtensions.js"],"names":["Object","defineProperty","exports","value","MapExtensions","mergeFromMap","targetMap","sourceMap","pair","entries","set"],"mappings":"AAAA;AACA;AACA;;AACAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA;;;;;AAKA,MAAMC,aAAN,CAAoB;AAChB;;;;;;;AAOA,WAAOC,YAAP,CAAoBC,SAApB,EAA+BC,SAA/B,EAA0C;AACtC,aAAK,MAAMC,IAAX,IAAmBD,UAAUE,OAAV,EAAnB,EAAwC;AACpCH,sBAAUI,GAAV,CAAcF,KAAK,CAAL,CAAd,EAAuBA,KAAK,CAAL,CAAvB;AACH;AACJ;AAZe;AAcpBN,QAAQE,aAAR,GAAwBA,aAAxB;AACA","file":"MapExtensions.js","sourcesContent":["\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Helper functions for working with the `Map<K, V>` data type.\n *\n * @public\n */\nclass MapExtensions {\n    /**\n     * Adds all the (key, value) pairs from the source map into the target map.\n     * @remarks\n     * This function modifies targetMap.  Any existing keys will be overwritten.\n     * @param targetMap - The map that entries will be added to\n     * @param sourceMap - The map containing the entries to be added\n     */\n    static mergeFromMap(targetMap, sourceMap) {\n        for (const pair of sourceMap.entries()) {\n            targetMap.set(pair[0], pair[1]);\n        }\n    }\n}\nexports.MapExtensions = MapExtensions;\n//# sourceMappingURL=MapExtensions.js.map"]}