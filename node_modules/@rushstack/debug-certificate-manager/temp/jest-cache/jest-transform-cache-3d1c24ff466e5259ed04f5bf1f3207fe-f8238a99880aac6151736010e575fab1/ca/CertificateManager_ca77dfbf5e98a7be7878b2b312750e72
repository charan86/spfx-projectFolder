fcce2a83c8bf83a476d161570dc0fe44
"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.

/* istanbul ignore next */var cov_46hqz1nrw = function () {
    var path = "/home/vsts/work/1/s/libraries/debug-certificate-manager/lib/CertificateManager.js",
        hash = "35233418fd0671644e4ed222a518fdecc1657884",
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = "__coverage__",
        coverageData = {
        path: "/home/vsts/work/1/s/libraries/debug-certificate-manager/lib/CertificateManager.js",
        statementMap: {
            "0": {
                start: {
                    line: 4,
                    column: 0
                },
                end: {
                    line: 4,
                    column: 62
                }
            },
            "1": {
                start: {
                    line: 5,
                    column: 14
                },
                end: {
                    line: 5,
                    column: 35
                }
            },
            "2": {
                start: {
                    line: 6,
                    column: 13
                },
                end: {
                    line: 6,
                    column: 28
                }
            },
            "3": {
                start: {
                    line: 7,
                    column: 22
                },
                end: {
                    line: 7,
                    column: 46
                }
            },
            "4": {
                start: {
                    line: 8,
                    column: 13
                },
                end: {
                    line: 8,
                    column: 26
                }
            },
            "5": {
                start: {
                    line: 9,
                    column: 28
                },
                end: {
                    line: 9,
                    column: 67
                }
            },
            "6": {
                start: {
                    line: 10,
                    column: 19
                },
                end: {
                    line: 10,
                    column: 40
                }
            },
            "7": {
                start: {
                    line: 11,
                    column: 27
                },
                end: {
                    line: 11,
                    column: 56
                }
            },
            "8": {
                start: {
                    line: 12,
                    column: 21
                },
                end: {
                    line: 12,
                    column: 55
                }
            },
            "9": {
                start: {
                    line: 13,
                    column: 21
                },
                end: {
                    line: 13,
                    column: 72
                }
            },
            "10": {
                start: {
                    line: 14,
                    column: 20
                },
                end: {
                    line: 14,
                    column: 56
                }
            },
            "11": {
                start: {
                    line: 23,
                    column: 8
                },
                end: {
                    line: 23,
                    column: 75
                }
            },
            "12": {
                start: {
                    line: 32,
                    column: 8
                },
                end: {
                    line: 51,
                    column: 9
                }
            },
            "13": {
                start: {
                    line: 33,
                    column: 12
                },
                end: {
                    line: 47,
                    column: 13
                }
            },
            "14": {
                start: {
                    line: 34,
                    column: 38
                },
                end: {
                    line: 35,
                    column: 92
                }
            },
            "15": {
                start: {
                    line: 36,
                    column: 16
                },
                end: {
                    line: 41,
                    column: 17
                }
            },
            "16": {
                start: {
                    line: 37,
                    column: 20
                },
                end: {
                    line: 37,
                    column: 103
                }
            },
            "17": {
                start: {
                    line: 40,
                    column: 20
                },
                end: {
                    line: 40,
                    column: 89
                }
            },
            "18": {
                start: {
                    line: 42,
                    column: 16
                },
                end: {
                    line: 42,
                    column: 58
                }
            },
            "19": {
                start: {
                    line: 43,
                    column: 16
                },
                end: {
                    line: 46,
                    column: 17
                }
            },
            "20": {
                start: {
                    line: 44,
                    column: 20
                },
                end: {
                    line: 44,
                    column: 54
                }
            },
            "21": {
                start: {
                    line: 45,
                    column: 20
                },
                end: {
                    line: 45,
                    column: 62
                }
            },
            "22": {
                start: {
                    line: 49,
                    column: 13
                },
                end: {
                    line: 51,
                    column: 9
                }
            },
            "23": {
                start: {
                    line: 50,
                    column: 12
                },
                end: {
                    line: 50,
                    column: 54
                }
            },
            "24": {
                start: {
                    line: 52,
                    column: 8
                },
                end: {
                    line: 55,
                    column: 10
                }
            },
            "25": {
                start: {
                    line: 63,
                    column: 8
                },
                end: {
                    line: 122,
                    column: 9
                }
            },
            "26": {
                start: {
                    line: 65,
                    column: 40
                },
                end: {
                    line: 65,
                    column: 77
                }
            },
            "27": {
                start: {
                    line: 66,
                    column: 16
                },
                end: {
                    line: 69,
                    column: 17
                }
            },
            "28": {
                start: {
                    line: 68,
                    column: 20
                },
                end: {
                    line: 68,
                    column: 33
                }
            },
            "29": {
                start: {
                    line: 70,
                    column: 41
                },
                end: {
                    line: 70,
                    column: 127
                }
            },
            "30": {
                start: {
                    line: 71,
                    column: 16
                },
                end: {
                    line: 78,
                    column: 17
                }
            },
            "31": {
                start: {
                    line: 72,
                    column: 20
                },
                end: {
                    line: 72,
                    column: 92
                }
            },
            "32": {
                start: {
                    line: 73,
                    column: 20
                },
                end: {
                    line: 73,
                    column: 33
                }
            },
            "33": {
                start: {
                    line: 76,
                    column: 20
                },
                end: {
                    line: 76,
                    column: 97
                }
            },
            "34": {
                start: {
                    line: 77,
                    column: 20
                },
                end: {
                    line: 77,
                    column: 32
                }
            },
            "35": {
                start: {
                    line: 80,
                    column: 16
                },
                end: {
                    line: 80,
                    column: 90
                }
            },
            "36": {
                start: {
                    line: 81,
                    column: 49
                },
                end: {
                    line: 81,
                    column: 150
                }
            },
            "37": {
                start: {
                    line: 82,
                    column: 16
                },
                end: {
                    line: 85,
                    column: 17
                }
            },
            "38": {
                start: {
                    line: 83,
                    column: 20
                },
                end: {
                    line: 83,
                    column: 127
                }
            },
            "39": {
                start: {
                    line: 84,
                    column: 20
                },
                end: {
                    line: 84,
                    column: 33
                }
            },
            "40": {
                start: {
                    line: 86,
                    column: 36
                },
                end: {
                    line: 86,
                    column: 94
                }
            },
            "41": {
                start: {
                    line: 87,
                    column: 28
                },
                end: {
                    line: 87,
                    column: 33
                }
            },
            "42": {
                start: {
                    line: 88,
                    column: 30
                },
                end: {
                    line: 88,
                    column: 32
                }
            },
            "43": {
                start: {
                    line: 89,
                    column: 16
                },
                end: {
                    line: 100,
                    column: 17
                }
            },
            "44": {
                start: {
                    line: 90,
                    column: 33
                },
                end: {
                    line: 90,
                    column: 47
                }
            },
            "45": {
                start: {
                    line: 91,
                    column: 37
                },
                end: {
                    line: 91,
                    column: 69
                }
            },
            "46": {
                start: {
                    line: 92,
                    column: 20
                },
                end: {
                    line: 94,
                    column: 21
                }
            },
            "47": {
                start: {
                    line: 93,
                    column: 24
                },
                end: {
                    line: 93,
                    column: 46
                }
            },
            "48": {
                start: {
                    line: 95,
                    column: 38
                },
                end: {
                    line: 95,
                    column: 82
                }
            },
            "49": {
                start: {
                    line: 96,
                    column: 20
                },
                end: {
                    line: 99,
                    column: 21
                }
            },
            "50": {
                start: {
                    line: 97,
                    column: 24
                },
                end: {
                    line: 97,
                    column: 37
                }
            },
            "51": {
                start: {
                    line: 98,
                    column: 24
                },
                end: {
                    line: 98,
                    column: 30
                }
            },
            "52": {
                start: {
                    line: 101,
                    column: 16
                },
                end: {
                    line: 104,
                    column: 17
                }
            },
            "53": {
                start: {
                    line: 102,
                    column: 20
                },
                end: {
                    line: 102,
                    column: 83
                }
            },
            "54": {
                start: {
                    line: 103,
                    column: 20
                },
                end: {
                    line: 103,
                    column: 33
                }
            },
            "55": {
                start: {
                    line: 105,
                    column: 16
                },
                end: {
                    line: 105,
                    column: 83
                }
            },
            "56": {
                start: {
                    line: 106,
                    column: 41
                },
                end: {
                    line: 106,
                    column: 127
                }
            },
            "57": {
                start: {
                    line: 107,
                    column: 16
                },
                end: {
                    line: 114,
                    column: 17
                }
            },
            "58": {
                start: {
                    line: 108,
                    column: 20
                },
                end: {
                    line: 108,
                    column: 89
                }
            },
            "59": {
                start: {
                    line: 109,
                    column: 20
                },
                end: {
                    line: 109,
                    column: 32
                }
            },
            "60": {
                start: {
                    line: 112,
                    column: 20
                },
                end: {
                    line: 112,
                    column: 79
                }
            },
            "61": {
                start: {
                    line: 113,
                    column: 20
                },
                end: {
                    line: 113,
                    column: 33
                }
            },
            "62": {
                start: {
                    line: 117,
                    column: 16
                },
                end: {
                    line: 120,
                    column: 72
                }
            },
            "63": {
                start: {
                    line: 121,
                    column: 16
                },
                end: {
                    line: 121,
                    column: 29
                }
            },
            "64": {
                start: {
                    line: 125,
                    column: 21
                },
                end: {
                    line: 125,
                    column: 56
                }
            },
            "65": {
                start: {
                    line: 126,
                    column: 28
                },
                end: {
                    line: 126,
                    column: 57
                }
            },
            "66": {
                start: {
                    line: 127,
                    column: 8
                },
                end: {
                    line: 127,
                    column: 47
                }
            },
            "67": {
                start: {
                    line: 128,
                    column: 8
                },
                end: {
                    line: 128,
                    column: 48
                }
            },
            "68": {
                start: {
                    line: 129,
                    column: 20
                },
                end: {
                    line: 129,
                    column: 30
                }
            },
            "69": {
                start: {
                    line: 130,
                    column: 8
                },
                end: {
                    line: 130,
                    column: 45
                }
            },
            "70": {
                start: {
                    line: 132,
                    column: 8
                },
                end: {
                    line: 132,
                    column: 100
                }
            },
            "71": {
                start: {
                    line: 133,
                    column: 22
                },
                end: {
                    line: 136,
                    column: 14
                }
            },
            "72": {
                start: {
                    line: 137,
                    column: 8
                },
                end: {
                    line: 137,
                    column: 38
                }
            },
            "73": {
                start: {
                    line: 138,
                    column: 8
                },
                end: {
                    line: 138,
                    column: 37
                }
            },
            "74": {
                start: {
                    line: 139,
                    column: 8
                },
                end: {
                    line: 159,
                    column: 11
                }
            },
            "75": {
                start: {
                    line: 161,
                    column: 8
                },
                end: {
                    line: 161,
                    column: 68
                }
            },
            "76": {
                start: {
                    line: 163,
                    column: 20
                },
                end: {
                    line: 163,
                    column: 59
                }
            },
            "77": {
                start: {
                    line: 164,
                    column: 23
                },
                end: {
                    line: 164,
                    column: 65
                }
            },
            "78": {
                start: {
                    line: 165,
                    column: 8
                },
                end: {
                    line: 168,
                    column: 10
                }
            },
            "79": {
                start: {
                    line: 171,
                    column: 8
                },
                end: {
                    line: 182,
                    column: 9
                }
            },
            "80": {
                start: {
                    line: 172,
                    column: 26
                },
                end: {
                    line: 172,
                    column: 72
                }
            },
            "81": {
                start: {
                    line: 173,
                    column: 29
                },
                end: {
                    line: 173,
                    column: 52
                }
            },
            "82": {
                start: {
                    line: 174,
                    column: 12
                },
                end: {
                    line: 181,
                    column: 13
                }
            },
            "83": {
                start: {
                    line: 175,
                    column: 16
                },
                end: {
                    line: 175,
                    column: 89
                }
            },
            "84": {
                start: {
                    line: 176,
                    column: 16
                },
                end: {
                    line: 176,
                    column: 45
                }
            },
            "85": {
                start: {
                    line: 179,
                    column: 30
                },
                end: {
                    line: 179,
                    column: 76
                }
            },
            "86": {
                start: {
                    line: 180,
                    column: 16
                },
                end: {
                    line: 180,
                    column: 51
                }
            },
            "87": {
                start: {
                    line: 183,
                    column: 8
                },
                end: {
                    line: 183,
                    column: 32
                }
            },
            "88": {
                start: {
                    line: 186,
                    column: 8
                },
                end: {
                    line: 251,
                    column: 9
                }
            },
            "89": {
                start: {
                    line: 188,
                    column: 40
                },
                end: {
                    line: 188,
                    column: 77
                }
            },
            "90": {
                start: {
                    line: 189,
                    column: 16
                },
                end: {
                    line: 192,
                    column: 17
                }
            },
            "91": {
                start: {
                    line: 191,
                    column: 20
                },
                end: {
                    line: 191,
                    column: 33
                }
            },
            "92": {
                start: {
                    line: 193,
                    column: 16
                },
                end: {
                    line: 195,
                    column: 125
                }
            },
            "93": {
                start: {
                    line: 196,
                    column: 39
                },
                end: {
                    line: 196,
                    column: 128
                }
            },
            "94": {
                start: {
                    line: 197,
                    column: 16
                },
                end: {
                    line: 213,
                    column: 17
                }
            },
            "95": {
                start: {
                    line: 198,
                    column: 20
                },
                end: {
                    line: 198,
                    column: 90
                }
            },
            "96": {
                start: {
                    line: 199,
                    column: 39
                },
                end: {
                    line: 199,
                    column: 114
                }
            },
            "97": {
                start: {
                    line: 199,
                    column: 102
                },
                end: {
                    line: 199,
                    column: 113
                }
            },
            "98": {
                start: {
                    line: 201,
                    column: 20
                },
                end: {
                    line: 207,
                    column: 21
                }
            },
            "99": {
                start: {
                    line: 203,
                    column: 24
                },
                end: {
                    line: 203,
                    column: 75
                }
            },
            "100": {
                start: {
                    line: 206,
                    column: 24
                },
                end: {
                    line: 206,
                    column: 99
                }
            },
            "101": {
                start: {
                    line: 208,
                    column: 20
                },
                end: {
                    line: 208,
                    column: 33
                }
            },
            "102": {
                start: {
                    line: 211,
                    column: 20
                },
                end: {
                    line: 211,
                    column: 95
                }
            },
            "103": {
                start: {
                    line: 212,
                    column: 20
                },
                end: {
                    line: 212,
                    column: 32
                }
            },
            "104": {
                start: {
                    line: 215,
                    column: 16
                },
                end: {
                    line: 218,
                    column: 52
                }
            },
            "105": {
                start: {
                    line: 219,
                    column: 33
                },
                end: {
                    line: 228,
                    column: 17
                }
            },
            "106": {
                start: {
                    line: 229,
                    column: 31
                },
                end: {
                    line: 229,
                    column: 63
                }
            },
            "107": {
                start: {
                    line: 230,
                    column: 16
                },
                end: {
                    line: 244,
                    column: 17
                }
            },
            "108": {
                start: {
                    line: 231,
                    column: 20
                },
                end: {
                    line: 231,
                    column: 95
                }
            },
            "109": {
                start: {
                    line: 232,
                    column: 20
                },
                end: {
                    line: 232,
                    column: 32
                }
            },
            "110": {
                start: {
                    line: 235,
                    column: 20
                },
                end: {
                    line: 243,
                    column: 21
                }
            },
            "111": {
                start: {
                    line: 235,
                    column: 54
                },
                end: {
                    line: 235,
                    column: 116
                }
            },
            "112": {
                start: {
                    line: 236,
                    column: 24
                },
                end: {
                    line: 236,
                    column: 75
                }
            },
            "113": {
                start: {
                    line: 237,
                    column: 24
                },
                end: {
                    line: 237,
                    column: 37
                }
            },
            "114": {
                start: {
                    line: 240,
                    column: 24
                },
                end: {
                    line: 241,
                    column: 65
                }
            },
            "115": {
                start: {
                    line: 242,
                    column: 24
                },
                end: {
                    line: 242,
                    column: 37
                }
            },
            "116": {
                start: {
                    line: 247,
                    column: 16
                },
                end: {
                    line: 249,
                    column: 72
                }
            },
            "117": {
                start: {
                    line: 250,
                    column: 16
                },
                end: {
                    line: 250,
                    column: 28
                }
            },
            "118": {
                start: {
                    line: 254,
                    column: 8
                },
                end: {
                    line: 291,
                    column: 9
                }
            },
            "119": {
                start: {
                    line: 255,
                    column: 36
                },
                end: {
                    line: 255,
                    column: 73
                }
            },
            "120": {
                start: {
                    line: 256,
                    column: 12
                },
                end: {
                    line: 259,
                    column: 13
                }
            },
            "121": {
                start: {
                    line: 258,
                    column: 16
                },
                end: {
                    line: 258,
                    column: 29
                }
            },
            "122": {
                start: {
                    line: 260,
                    column: 29
                },
                end: {
                    line: 260,
                    column: 58
                }
            },
            "123": {
                start: {
                    line: 261,
                    column: 29
                },
                end: {
                    line: 261,
                    column: 90
                }
            },
            "124": {
                start: {
                    line: 262,
                    column: 37
                },
                end: {
                    line: 262,
                    column: 75
                }
            },
            "125": {
                start: {
                    line: 263,
                    column: 37
                },
                end: {
                    line: 269,
                    column: 28
                }
            },
            "126": {
                start: {
                    line: 270,
                    column: 12
                },
                end: {
                    line: 270,
                    column: 89
                }
            },
            "127": {
                start: {
                    line: 271,
                    column: 29
                },
                end: {
                    line: 277,
                    column: 13
                }
            },
            "128": {
                start: {
                    line: 278,
                    column: 38
                },
                end: {
                    line: 278,
                    column: 88
                }
            },
            "129": {
                start: {
                    line: 279,
                    column: 12
                },
                end: {
                    line: 286,
                    column: 13
                }
            },
            "130": {
                start: {
                    line: 280,
                    column: 16
                },
                end: {
                    line: 280,
                    column: 98
                }
            },
            "131": {
                start: {
                    line: 281,
                    column: 16
                },
                end: {
                    line: 281,
                    column: 29
                }
            },
            "132": {
                start: {
                    line: 284,
                    column: 16
                },
                end: {
                    line: 284,
                    column: 80
                }
            },
            "133": {
                start: {
                    line: 285,
                    column: 16
                },
                end: {
                    line: 285,
                    column: 28
                }
            },
            "134": {
                start: {
                    line: 290,
                    column: 12
                },
                end: {
                    line: 290,
                    column: 24
                }
            },
            "135": {
                start: {
                    line: 294,
                    column: 33
                },
                end: {
                    line: 294,
                    column: 55
                }
            },
            "136": {
                start: {
                    line: 295,
                    column: 37
                },
                end: {
                    line: 295,
                    column: 73
                }
            },
            "137": {
                start: {
                    line: 296,
                    column: 20
                },
                end: {
                    line: 296,
                    column: 30
                }
            },
            "138": {
                start: {
                    line: 297,
                    column: 32
                },
                end: {
                    line: 297,
                    column: 56
                }
            },
            "139": {
                start: {
                    line: 298,
                    column: 28
                },
                end: {
                    line: 298,
                    column: 62
                }
            },
            "140": {
                start: {
                    line: 299,
                    column: 36
                },
                end: {
                    line: 299,
                    column: 84
                }
            },
            "141": {
                start: {
                    line: 300,
                    column: 32
                },
                end: {
                    line: 300,
                    column: 67
                }
            },
            "142": {
                start: {
                    line: 301,
                    column: 8
                },
                end: {
                    line: 305,
                    column: 9
                }
            },
            "143": {
                start: {
                    line: 302,
                    column: 12
                },
                end: {
                    line: 304,
                    column: 15
                }
            },
            "144": {
                start: {
                    line: 306,
                    column: 8
                },
                end: {
                    line: 318,
                    column: 9
                }
            },
            "145": {
                start: {
                    line: 307,
                    column: 12
                },
                end: {
                    line: 307,
                    column: 83
                }
            },
            "146": {
                start: {
                    line: 308,
                    column: 12
                },
                end: {
                    line: 308,
                    column: 67
                }
            },
            "147": {
                start: {
                    line: 310,
                    column: 12
                },
                end: {
                    line: 312,
                    column: 13
                }
            },
            "148": {
                start: {
                    line: 311,
                    column: 16
                },
                end: {
                    line: 311,
                    column: 93
                }
            },
            "149": {
                start: {
                    line: 316,
                    column: 12
                },
                end: {
                    line: 316,
                    column: 57
                }
            },
            "150": {
                start: {
                    line: 317,
                    column: 12
                },
                end: {
                    line: 317,
                    column: 49
                }
            },
            "151": {
                start: {
                    line: 319,
                    column: 8
                },
                end: {
                    line: 319,
                    column: 71
                }
            },
            "152": {
                start: {
                    line: 322,
                    column: 32
                },
                end: {
                    line: 322,
                    column: 70
                }
            },
            "153": {
                start: {
                    line: 323,
                    column: 8
                },
                end: {
                    line: 325,
                    column: 9
                }
            },
            "154": {
                start: {
                    line: 324,
                    column: 12
                },
                end: {
                    line: 324,
                    column: 25
                }
            },
            "155": {
                start: {
                    line: 326,
                    column: 28
                },
                end: {
                    line: 326,
                    column: 73
                }
            },
            "156": {
                start: {
                    line: 327,
                    column: 8
                },
                end: {
                    line: 327,
                    column: 60
                }
            },
            "157": {
                start: {
                    line: 330,
                    column: 0
                },
                end: {
                    line: 330,
                    column: 48
                }
            }
        },
        fnMap: {
            "0": {
                name: "(anonymous_0)",
                decl: {
                    start: {
                        line: 22,
                        column: 4
                    },
                    end: {
                        line: 22,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 22,
                        column: 18
                    },
                    end: {
                        line: 24,
                        column: 5
                    }
                },
                line: 22
            },
            "1": {
                name: "(anonymous_1)",
                decl: {
                    start: {
                        line: 31,
                        column: 4
                    },
                    end: {
                        line: 31,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 31,
                        column: 59
                    },
                    end: {
                        line: 56,
                        column: 5
                    }
                },
                line: 31
            },
            "2": {
                name: "(anonymous_2)",
                decl: {
                    start: {
                        line: 62,
                        column: 4
                    },
                    end: {
                        line: 62,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 62,
                        column: 33
                    },
                    end: {
                        line: 123,
                        column: 5
                    }
                },
                line: 62
            },
            "3": {
                name: "(anonymous_3)",
                decl: {
                    start: {
                        line: 124,
                        column: 4
                    },
                    end: {
                        line: 124,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 124,
                        column: 36
                    },
                    end: {
                        line: 169,
                        column: 5
                    }
                },
                line: 124
            },
            "4": {
                name: "(anonymous_4)",
                decl: {
                    start: {
                        line: 170,
                        column: 4
                    },
                    end: {
                        line: 170,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 170,
                        column: 37
                    },
                    end: {
                        line: 184,
                        column: 5
                    }
                },
                line: 170
            },
            "5": {
                name: "(anonymous_5)",
                decl: {
                    start: {
                        line: 185,
                        column: 4
                    },
                    end: {
                        line: 185,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 185,
                        column: 52
                    },
                    end: {
                        line: 252,
                        column: 5
                    }
                },
                line: 185
            },
            "6": {
                name: "(anonymous_6)",
                decl: {
                    start: {
                        line: 199,
                        column: 92
                    },
                    end: {
                        line: 199,
                        column: 93
                    }
                },
                loc: {
                    start: {
                        line: 199,
                        column: 102
                    },
                    end: {
                        line: 199,
                        column: 113
                    }
                },
                line: 199
            },
            "7": {
                name: "(anonymous_7)",
                decl: {
                    start: {
                        line: 235,
                        column: 43
                    },
                    end: {
                        line: 235,
                        column: 44
                    }
                },
                loc: {
                    start: {
                        line: 235,
                        column: 54
                    },
                    end: {
                        line: 235,
                        column: 116
                    }
                },
                line: 235
            },
            "8": {
                name: "(anonymous_8)",
                decl: {
                    start: {
                        line: 253,
                        column: 4
                    },
                    end: {
                        line: 253,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 253,
                        column: 51
                    },
                    end: {
                        line: 292,
                        column: 5
                    }
                },
                line: 253
            },
            "9": {
                name: "(anonymous_9)",
                decl: {
                    start: {
                        line: 293,
                        column: 4
                    },
                    end: {
                        line: 293,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 293,
                        column: 41
                    },
                    end: {
                        line: 320,
                        column: 5
                    }
                },
                line: 293
            },
            "10": {
                name: "(anonymous_10)",
                decl: {
                    start: {
                        line: 321,
                        column: 4
                    },
                    end: {
                        line: 321,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 321,
                        column: 36
                    },
                    end: {
                        line: 328,
                        column: 5
                    }
                },
                line: 321
            }
        },
        branchMap: {
            "0": {
                loc: {
                    start: {
                        line: 32,
                        column: 8
                    },
                    end: {
                        line: 51,
                        column: 9
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 32,
                        column: 8
                    },
                    end: {
                        line: 51,
                        column: 9
                    }
                }, {
                    start: {
                        line: 32,
                        column: 8
                    },
                    end: {
                        line: 51,
                        column: 9
                    }
                }],
                line: 32
            },
            "1": {
                loc: {
                    start: {
                        line: 32,
                        column: 12
                    },
                    end: {
                        line: 32,
                        column: 84
                    }
                },
                type: "binary-expr",
                locations: [{
                    start: {
                        line: 32,
                        column: 12
                    },
                    end: {
                        line: 32,
                        column: 50
                    }
                }, {
                    start: {
                        line: 32,
                        column: 54
                    },
                    end: {
                        line: 32,
                        column: 84
                    }
                }],
                line: 32
            },
            "2": {
                loc: {
                    start: {
                        line: 33,
                        column: 12
                    },
                    end: {
                        line: 47,
                        column: 13
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 33,
                        column: 12
                    },
                    end: {
                        line: 47,
                        column: 13
                    }
                }, {
                    start: {
                        line: 33,
                        column: 12
                    },
                    end: {
                        line: 47,
                        column: 13
                    }
                }],
                line: 33
            },
            "3": {
                loc: {
                    start: {
                        line: 36,
                        column: 16
                    },
                    end: {
                        line: 41,
                        column: 17
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 36,
                        column: 16
                    },
                    end: {
                        line: 41,
                        column: 17
                    }
                }, {
                    start: {
                        line: 36,
                        column: 16
                    },
                    end: {
                        line: 41,
                        column: 17
                    }
                }],
                line: 36
            },
            "4": {
                loc: {
                    start: {
                        line: 43,
                        column: 16
                    },
                    end: {
                        line: 46,
                        column: 17
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 43,
                        column: 16
                    },
                    end: {
                        line: 46,
                        column: 17
                    }
                }, {
                    start: {
                        line: 43,
                        column: 16
                    },
                    end: {
                        line: 46,
                        column: 17
                    }
                }],
                line: 43
            },
            "5": {
                loc: {
                    start: {
                        line: 49,
                        column: 13
                    },
                    end: {
                        line: 51,
                        column: 9
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 49,
                        column: 13
                    },
                    end: {
                        line: 51,
                        column: 9
                    }
                }, {
                    start: {
                        line: 49,
                        column: 13
                    },
                    end: {
                        line: 51,
                        column: 9
                    }
                }],
                line: 49
            },
            "6": {
                loc: {
                    start: {
                        line: 63,
                        column: 8
                    },
                    end: {
                        line: 122,
                        column: 9
                    }
                },
                type: "switch",
                locations: [{
                    start: {
                        line: 64,
                        column: 12
                    },
                    end: {
                        line: 78,
                        column: 17
                    }
                }, {
                    start: {
                        line: 79,
                        column: 12
                    },
                    end: {
                        line: 114,
                        column: 17
                    }
                }, {
                    start: {
                        line: 115,
                        column: 12
                    },
                    end: {
                        line: 121,
                        column: 29
                    }
                }],
                line: 63
            },
            "7": {
                loc: {
                    start: {
                        line: 66,
                        column: 16
                    },
                    end: {
                        line: 69,
                        column: 17
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 66,
                        column: 16
                    },
                    end: {
                        line: 69,
                        column: 17
                    }
                }, {
                    start: {
                        line: 66,
                        column: 16
                    },
                    end: {
                        line: 69,
                        column: 17
                    }
                }],
                line: 66
            },
            "8": {
                loc: {
                    start: {
                        line: 71,
                        column: 16
                    },
                    end: {
                        line: 78,
                        column: 17
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 71,
                        column: 16
                    },
                    end: {
                        line: 78,
                        column: 17
                    }
                }, {
                    start: {
                        line: 71,
                        column: 16
                    },
                    end: {
                        line: 78,
                        column: 17
                    }
                }],
                line: 71
            },
            "9": {
                loc: {
                    start: {
                        line: 82,
                        column: 16
                    },
                    end: {
                        line: 85,
                        column: 17
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 82,
                        column: 16
                    },
                    end: {
                        line: 85,
                        column: 17
                    }
                }, {
                    start: {
                        line: 82,
                        column: 16
                    },
                    end: {
                        line: 85,
                        column: 17
                    }
                }],
                line: 82
            },
            "10": {
                loc: {
                    start: {
                        line: 92,
                        column: 20
                    },
                    end: {
                        line: 94,
                        column: 21
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 92,
                        column: 20
                    },
                    end: {
                        line: 94,
                        column: 21
                    }
                }, {
                    start: {
                        line: 92,
                        column: 20
                    },
                    end: {
                        line: 94,
                        column: 21
                    }
                }],
                line: 92
            },
            "11": {
                loc: {
                    start: {
                        line: 96,
                        column: 20
                    },
                    end: {
                        line: 99,
                        column: 21
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 96,
                        column: 20
                    },
                    end: {
                        line: 99,
                        column: 21
                    }
                }, {
                    start: {
                        line: 96,
                        column: 20
                    },
                    end: {
                        line: 99,
                        column: 21
                    }
                }],
                line: 96
            },
            "12": {
                loc: {
                    start: {
                        line: 96,
                        column: 24
                    },
                    end: {
                        line: 96,
                        column: 88
                    }
                },
                type: "binary-expr",
                locations: [{
                    start: {
                        line: 96,
                        column: 24
                    },
                    end: {
                        line: 96,
                        column: 33
                    }
                }, {
                    start: {
                        line: 96,
                        column: 37
                    },
                    end: {
                        line: 96,
                        column: 88
                    }
                }],
                line: 96
            },
            "13": {
                loc: {
                    start: {
                        line: 96,
                        column: 38
                    },
                    end: {
                        line: 96,
                        column: 56
                    }
                },
                type: "binary-expr",
                locations: [{
                    start: {
                        line: 96,
                        column: 38
                    },
                    end: {
                        line: 96,
                        column: 50
                    }
                }, {
                    start: {
                        line: 96,
                        column: 54
                    },
                    end: {
                        line: 96,
                        column: 56
                    }
                }],
                line: 96
            },
            "14": {
                loc: {
                    start: {
                        line: 101,
                        column: 16
                    },
                    end: {
                        line: 104,
                        column: 17
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 101,
                        column: 16
                    },
                    end: {
                        line: 104,
                        column: 17
                    }
                }, {
                    start: {
                        line: 101,
                        column: 16
                    },
                    end: {
                        line: 104,
                        column: 17
                    }
                }],
                line: 101
            },
            "15": {
                loc: {
                    start: {
                        line: 107,
                        column: 16
                    },
                    end: {
                        line: 114,
                        column: 17
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 107,
                        column: 16
                    },
                    end: {
                        line: 114,
                        column: 17
                    }
                }, {
                    start: {
                        line: 107,
                        column: 16
                    },
                    end: {
                        line: 114,
                        column: 17
                    }
                }],
                line: 107
            },
            "16": {
                loc: {
                    start: {
                        line: 171,
                        column: 8
                    },
                    end: {
                        line: 182,
                        column: 9
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 171,
                        column: 8
                    },
                    end: {
                        line: 182,
                        column: 9
                    }
                }, {
                    start: {
                        line: 171,
                        column: 8
                    },
                    end: {
                        line: 182,
                        column: 9
                    }
                }],
                line: 171
            },
            "17": {
                loc: {
                    start: {
                        line: 174,
                        column: 12
                    },
                    end: {
                        line: 181,
                        column: 13
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 174,
                        column: 12
                    },
                    end: {
                        line: 181,
                        column: 13
                    }
                }, {
                    start: {
                        line: 174,
                        column: 12
                    },
                    end: {
                        line: 181,
                        column: 13
                    }
                }],
                line: 174
            },
            "18": {
                loc: {
                    start: {
                        line: 186,
                        column: 8
                    },
                    end: {
                        line: 251,
                        column: 9
                    }
                },
                type: "switch",
                locations: [{
                    start: {
                        line: 187,
                        column: 12
                    },
                    end: {
                        line: 213,
                        column: 17
                    }
                }, {
                    start: {
                        line: 214,
                        column: 12
                    },
                    end: {
                        line: 244,
                        column: 17
                    }
                }, {
                    start: {
                        line: 245,
                        column: 12
                    },
                    end: {
                        line: 250,
                        column: 28
                    }
                }],
                line: 186
            },
            "19": {
                loc: {
                    start: {
                        line: 189,
                        column: 16
                    },
                    end: {
                        line: 192,
                        column: 17
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 189,
                        column: 16
                    },
                    end: {
                        line: 192,
                        column: 17
                    }
                }, {
                    start: {
                        line: 189,
                        column: 16
                    },
                    end: {
                        line: 192,
                        column: 17
                    }
                }],
                line: 189
            },
            "20": {
                loc: {
                    start: {
                        line: 197,
                        column: 16
                    },
                    end: {
                        line: 213,
                        column: 17
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 197,
                        column: 16
                    },
                    end: {
                        line: 213,
                        column: 17
                    }
                }, {
                    start: {
                        line: 197,
                        column: 16
                    },
                    end: {
                        line: 213,
                        column: 17
                    }
                }],
                line: 197
            },
            "21": {
                loc: {
                    start: {
                        line: 201,
                        column: 20
                    },
                    end: {
                        line: 207,
                        column: 21
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 201,
                        column: 20
                    },
                    end: {
                        line: 207,
                        column: 21
                    }
                }, {
                    start: {
                        line: 201,
                        column: 20
                    },
                    end: {
                        line: 207,
                        column: 21
                    }
                }],
                line: 201
            },
            "22": {
                loc: {
                    start: {
                        line: 201,
                        column: 24
                    },
                    end: {
                        line: 202,
                        column: 112
                    }
                },
                type: "binary-expr",
                locations: [{
                    start: {
                        line: 201,
                        column: 24
                    },
                    end: {
                        line: 201,
                        column: 60
                    }
                }, {
                    start: {
                        line: 202,
                        column: 24
                    },
                    end: {
                        line: 202,
                        column: 112
                    }
                }],
                line: 201
            },
            "23": {
                loc: {
                    start: {
                        line: 230,
                        column: 16
                    },
                    end: {
                        line: 244,
                        column: 17
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 230,
                        column: 16
                    },
                    end: {
                        line: 244,
                        column: 17
                    }
                }, {
                    start: {
                        line: 230,
                        column: 16
                    },
                    end: {
                        line: 244,
                        column: 17
                    }
                }],
                line: 230
            },
            "24": {
                loc: {
                    start: {
                        line: 235,
                        column: 20
                    },
                    end: {
                        line: 243,
                        column: 21
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 235,
                        column: 20
                    },
                    end: {
                        line: 243,
                        column: 21
                    }
                }, {
                    start: {
                        line: 235,
                        column: 20
                    },
                    end: {
                        line: 243,
                        column: 21
                    }
                }],
                line: 235
            },
            "25": {
                loc: {
                    start: {
                        line: 254,
                        column: 8
                    },
                    end: {
                        line: 291,
                        column: 9
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 254,
                        column: 8
                    },
                    end: {
                        line: 291,
                        column: 9
                    }
                }, {
                    start: {
                        line: 254,
                        column: 8
                    },
                    end: {
                        line: 291,
                        column: 9
                    }
                }],
                line: 254
            },
            "26": {
                loc: {
                    start: {
                        line: 256,
                        column: 12
                    },
                    end: {
                        line: 259,
                        column: 13
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 256,
                        column: 12
                    },
                    end: {
                        line: 259,
                        column: 13
                    }
                }, {
                    start: {
                        line: 256,
                        column: 12
                    },
                    end: {
                        line: 259,
                        column: 13
                    }
                }],
                line: 256
            },
            "27": {
                loc: {
                    start: {
                        line: 279,
                        column: 12
                    },
                    end: {
                        line: 286,
                        column: 13
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 279,
                        column: 12
                    },
                    end: {
                        line: 286,
                        column: 13
                    }
                }, {
                    start: {
                        line: 279,
                        column: 12
                    },
                    end: {
                        line: 286,
                        column: 13
                    }
                }],
                line: 279
            },
            "28": {
                loc: {
                    start: {
                        line: 301,
                        column: 8
                    },
                    end: {
                        line: 305,
                        column: 9
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 301,
                        column: 8
                    },
                    end: {
                        line: 305,
                        column: 9
                    }
                }, {
                    start: {
                        line: 301,
                        column: 8
                    },
                    end: {
                        line: 305,
                        column: 9
                    }
                }],
                line: 301
            },
            "29": {
                loc: {
                    start: {
                        line: 306,
                        column: 8
                    },
                    end: {
                        line: 318,
                        column: 9
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 306,
                        column: 8
                    },
                    end: {
                        line: 318,
                        column: 9
                    }
                }, {
                    start: {
                        line: 306,
                        column: 8
                    },
                    end: {
                        line: 318,
                        column: 9
                    }
                }],
                line: 306
            },
            "30": {
                loc: {
                    start: {
                        line: 310,
                        column: 12
                    },
                    end: {
                        line: 312,
                        column: 13
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 310,
                        column: 12
                    },
                    end: {
                        line: 312,
                        column: 13
                    }
                }, {
                    start: {
                        line: 310,
                        column: 12
                    },
                    end: {
                        line: 312,
                        column: 13
                    }
                }],
                line: 310
            },
            "31": {
                loc: {
                    start: {
                        line: 323,
                        column: 8
                    },
                    end: {
                        line: 325,
                        column: 9
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 323,
                        column: 8
                    },
                    end: {
                        line: 325,
                        column: 9
                    }
                }, {
                    start: {
                        line: 323,
                        column: 8
                    },
                    end: {
                        line: 325,
                        column: 9
                    }
                }],
                line: 323
            }
        },
        s: {
            "0": 0,
            "1": 0,
            "2": 0,
            "3": 0,
            "4": 0,
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0,
            "26": 0,
            "27": 0,
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0,
            "32": 0,
            "33": 0,
            "34": 0,
            "35": 0,
            "36": 0,
            "37": 0,
            "38": 0,
            "39": 0,
            "40": 0,
            "41": 0,
            "42": 0,
            "43": 0,
            "44": 0,
            "45": 0,
            "46": 0,
            "47": 0,
            "48": 0,
            "49": 0,
            "50": 0,
            "51": 0,
            "52": 0,
            "53": 0,
            "54": 0,
            "55": 0,
            "56": 0,
            "57": 0,
            "58": 0,
            "59": 0,
            "60": 0,
            "61": 0,
            "62": 0,
            "63": 0,
            "64": 0,
            "65": 0,
            "66": 0,
            "67": 0,
            "68": 0,
            "69": 0,
            "70": 0,
            "71": 0,
            "72": 0,
            "73": 0,
            "74": 0,
            "75": 0,
            "76": 0,
            "77": 0,
            "78": 0,
            "79": 0,
            "80": 0,
            "81": 0,
            "82": 0,
            "83": 0,
            "84": 0,
            "85": 0,
            "86": 0,
            "87": 0,
            "88": 0,
            "89": 0,
            "90": 0,
            "91": 0,
            "92": 0,
            "93": 0,
            "94": 0,
            "95": 0,
            "96": 0,
            "97": 0,
            "98": 0,
            "99": 0,
            "100": 0,
            "101": 0,
            "102": 0,
            "103": 0,
            "104": 0,
            "105": 0,
            "106": 0,
            "107": 0,
            "108": 0,
            "109": 0,
            "110": 0,
            "111": 0,
            "112": 0,
            "113": 0,
            "114": 0,
            "115": 0,
            "116": 0,
            "117": 0,
            "118": 0,
            "119": 0,
            "120": 0,
            "121": 0,
            "122": 0,
            "123": 0,
            "124": 0,
            "125": 0,
            "126": 0,
            "127": 0,
            "128": 0,
            "129": 0,
            "130": 0,
            "131": 0,
            "132": 0,
            "133": 0,
            "134": 0,
            "135": 0,
            "136": 0,
            "137": 0,
            "138": 0,
            "139": 0,
            "140": 0,
            "141": 0,
            "142": 0,
            "143": 0,
            "144": 0,
            "145": 0,
            "146": 0,
            "147": 0,
            "148": 0,
            "149": 0,
            "150": 0,
            "151": 0,
            "152": 0,
            "153": 0,
            "154": 0,
            "155": 0,
            "156": 0,
            "157": 0
        },
        f: {
            "0": 0,
            "1": 0,
            "2": 0,
            "3": 0,
            "4": 0,
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0
        },
        b: {
            "0": [0, 0],
            "1": [0, 0],
            "2": [0, 0],
            "3": [0, 0],
            "4": [0, 0],
            "5": [0, 0],
            "6": [0, 0, 0],
            "7": [0, 0],
            "8": [0, 0],
            "9": [0, 0],
            "10": [0, 0],
            "11": [0, 0],
            "12": [0, 0],
            "13": [0, 0],
            "14": [0, 0],
            "15": [0, 0],
            "16": [0, 0],
            "17": [0, 0],
            "18": [0, 0, 0],
            "19": [0, 0],
            "20": [0, 0],
            "21": [0, 0],
            "22": [0, 0],
            "23": [0, 0],
            "24": [0, 0],
            "25": [0, 0],
            "26": [0, 0],
            "27": [0, 0],
            "28": [0, 0],
            "29": [0, 0],
            "30": [0, 0],
            "31": [0, 0]
        },
        _coverageSchema: "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

cov_46hqz1nrw.s[0]++;
Object.defineProperty(exports, "__esModule", { value: true });
const forge = /* istanbul ignore next */(cov_46hqz1nrw.s[1]++, require("node-forge"));
const path = /* istanbul ignore next */(cov_46hqz1nrw.s[2]++, require("path"));
const child_process = /* istanbul ignore next */(cov_46hqz1nrw.s[3]++, require("child_process"));
const os_1 = /* istanbul ignore next */(cov_46hqz1nrw.s[4]++, require("os"));
const node_core_library_1 = /* istanbul ignore next */(cov_46hqz1nrw.s[5]++, require("@rushstack/node-core-library"));
const sudoSync_1 = /* istanbul ignore next */(cov_46hqz1nrw.s[6]++, require("./sudoSync"));
const CertificateStore_1 = /* istanbul ignore next */(cov_46hqz1nrw.s[7]++, require("./CertificateStore"));
const serialNumber = /* istanbul ignore next */(cov_46hqz1nrw.s[8]++, '731c321744e34650a202e3ef91c3c1b0');
const friendlyName = /* istanbul ignore next */(cov_46hqz1nrw.s[9]++, 'debug-certificate-manager Development Certificate');
const macKeychain = /* istanbul ignore next */(cov_46hqz1nrw.s[10]++, '/Library/Keychains/System.keychain');
let _certutilExePath;
/**
 * A utility class to handle generating, trusting, and untrustring a debug certificate.
 * Contains two public methods to `ensureCertificate` and `untrustCertificate`.
 * @public
 */
class CertificateManager {
    constructor() {
        /* istanbul ignore next */cov_46hqz1nrw.f[0]++;
        cov_46hqz1nrw.s[11]++;

        this._certificateStore = new CertificateStore_1.CertificateStore();
    }
    /**
     * Get a dev certificate from the store, or optionally, generate a new one
     * and trust it if one doesn't exist in the store.
     *
     * @public
     */
    ensureCertificate(canGenerateNewCertificate, terminal) {
        /* istanbul ignore next */cov_46hqz1nrw.f[1]++;
        cov_46hqz1nrw.s[12]++;

        if ( /* istanbul ignore next */(cov_46hqz1nrw.b[1][0]++, this._certificateStore.certificateData) && /* istanbul ignore next */(cov_46hqz1nrw.b[1][1]++, this._certificateStore.keyData)) {
            /* istanbul ignore next */cov_46hqz1nrw.b[0][0]++;
            cov_46hqz1nrw.s[13]++;

            if (!this._certificateHasSubjectAltName()) {
                /* istanbul ignore next */cov_46hqz1nrw.b[2][0]++;

                let warningMessage = /* istanbul ignore next */(cov_46hqz1nrw.s[14]++, 'The existing development certificate is missing the subjectAltName ' + 'property and will not work with the latest versions of some browsers. ');
                /* istanbul ignore next */cov_46hqz1nrw.s[15]++;
                if (canGenerateNewCertificate) {
                    /* istanbul ignore next */cov_46hqz1nrw.b[3][0]++;
                    cov_46hqz1nrw.s[16]++;

                    warningMessage += ' Attempting to untrust the certificate and generate a new one.';
                } else {
                    /* istanbul ignore next */cov_46hqz1nrw.b[3][1]++;
                    cov_46hqz1nrw.s[17]++;

                    warningMessage += ' Untrust the certificate and generate a new one.';
                }
                /* istanbul ignore next */cov_46hqz1nrw.s[18]++;
                terminal.writeWarningLine(warningMessage);
                /* istanbul ignore next */cov_46hqz1nrw.s[19]++;
                if (canGenerateNewCertificate) {
                    /* istanbul ignore next */cov_46hqz1nrw.b[4][0]++;
                    cov_46hqz1nrw.s[20]++;

                    this.untrustCertificate(terminal);
                    /* istanbul ignore next */cov_46hqz1nrw.s[21]++;
                    this._ensureCertificateInternal(terminal);
                } else /* istanbul ignore next */{
                    cov_46hqz1nrw.b[4][1]++;
                }
            } else /* istanbul ignore next */{
                cov_46hqz1nrw.b[2][1]++;
            }
        } else {
                /* istanbul ignore next */cov_46hqz1nrw.b[0][1]++;
                cov_46hqz1nrw.s[22]++;
                if (canGenerateNewCertificate) {
                    /* istanbul ignore next */cov_46hqz1nrw.b[5][0]++;
                    cov_46hqz1nrw.s[23]++;

                    this._ensureCertificateInternal(terminal);
                } else /* istanbul ignore next */{
                    cov_46hqz1nrw.b[5][1]++;
                }
            } /* istanbul ignore next */cov_46hqz1nrw.s[24]++;
        return {
            pemCertificate: this._certificateStore.certificateData,
            pemKey: this._certificateStore.keyData
        };
    }
    /**
     * Attempt to locate a previously generated debug certificate and untrust it.
     *
     * @public
     */
    untrustCertificate(terminal) {
        /* istanbul ignore next */cov_46hqz1nrw.f[2]++;
        cov_46hqz1nrw.s[25]++;

        switch (process.platform) {
            case 'win32':
                /* istanbul ignore next */cov_46hqz1nrw.b[6][0]++;

                const certutilExePath = /* istanbul ignore next */(cov_46hqz1nrw.s[26]++, this._ensureCertUtilExePath(terminal));
                /* istanbul ignore next */cov_46hqz1nrw.s[27]++;
                if (!certutilExePath) {
                    /* istanbul ignore next */cov_46hqz1nrw.b[7][0]++;
                    cov_46hqz1nrw.s[28]++;

                    // Unable to find the cert utility
                    return false;
                } else /* istanbul ignore next */{
                    cov_46hqz1nrw.b[7][1]++;
                }
                const winUntrustResult = /* istanbul ignore next */(cov_46hqz1nrw.s[29]++, child_process.spawnSync(certutilExePath, ['-user', '-delstore', 'root', serialNumber]));
                /* istanbul ignore next */cov_46hqz1nrw.s[30]++;
                if (winUntrustResult.status !== 0) {
                    /* istanbul ignore next */cov_46hqz1nrw.b[8][0]++;
                    cov_46hqz1nrw.s[31]++;

                    terminal.writeErrorLine(`Error: ${winUntrustResult.stdout.toString()}`);
                    /* istanbul ignore next */cov_46hqz1nrw.s[32]++;
                    return false;
                } else {
                    /* istanbul ignore next */cov_46hqz1nrw.b[8][1]++;
                    cov_46hqz1nrw.s[33]++;

                    terminal.writeVerboseLine('Successfully untrusted development certificate.');
                    /* istanbul ignore next */cov_46hqz1nrw.s[34]++;
                    return true;
                }
            case 'darwin':
                /* istanbul ignore next */cov_46hqz1nrw.b[6][1]++;
                cov_46hqz1nrw.s[35]++;

                terminal.writeVerboseLine('Trying to find the signature of the dev cert');
                const macFindCertificateResult = /* istanbul ignore next */(cov_46hqz1nrw.s[36]++, child_process.spawnSync('security', ['find-certificate', '-c', 'localhost', '-a', '-Z', macKeychain]));
                /* istanbul ignore next */cov_46hqz1nrw.s[37]++;
                if (macFindCertificateResult.status !== 0) {
                    /* istanbul ignore next */cov_46hqz1nrw.b[9][0]++;
                    cov_46hqz1nrw.s[38]++;

                    terminal.writeErrorLine(`Error finding the dev certificate: ${macFindCertificateResult.output.join(' ')}`);
                    /* istanbul ignore next */cov_46hqz1nrw.s[39]++;
                    return false;
                } else /* istanbul ignore next */{
                    cov_46hqz1nrw.b[9][1]++;
                }
                const outputLines = /* istanbul ignore next */(cov_46hqz1nrw.s[40]++, macFindCertificateResult.stdout.toString().split(os_1.EOL));
                let found = /* istanbul ignore next */(cov_46hqz1nrw.s[41]++, false);
                let shaHash = /* istanbul ignore next */(cov_46hqz1nrw.s[42]++, "");
                /* istanbul ignore next */cov_46hqz1nrw.s[43]++;
                for (let i = 0; i < outputLines.length; i++) {
                    const line = /* istanbul ignore next */(cov_46hqz1nrw.s[44]++, outputLines[i]);
                    const shaMatch = /* istanbul ignore next */(cov_46hqz1nrw.s[45]++, line.match(/^SHA-1 hash: (.+)$/));
                    /* istanbul ignore next */cov_46hqz1nrw.s[46]++;
                    if (shaMatch) {
                        /* istanbul ignore next */cov_46hqz1nrw.b[10][0]++;
                        cov_46hqz1nrw.s[47]++;

                        shaHash = shaMatch[1];
                    } else /* istanbul ignore next */{
                        cov_46hqz1nrw.b[10][1]++;
                    }
                    const snbrMatch = /* istanbul ignore next */(cov_46hqz1nrw.s[48]++, line.match(/^\s*"snbr"<blob>=0x([^\s]+).+$/));
                    /* istanbul ignore next */cov_46hqz1nrw.s[49]++;
                    if ( /* istanbul ignore next */(cov_46hqz1nrw.b[12][0]++, snbrMatch) && /* istanbul ignore next */(cov_46hqz1nrw.b[12][1]++, ( /* istanbul ignore next */(cov_46hqz1nrw.b[13][0]++, snbrMatch[1]) || /* istanbul ignore next */(cov_46hqz1nrw.b[13][1]++, '')).toLowerCase() === serialNumber)) {
                        /* istanbul ignore next */cov_46hqz1nrw.b[11][0]++;
                        cov_46hqz1nrw.s[50]++;

                        found = true;
                        /* istanbul ignore next */cov_46hqz1nrw.s[51]++;
                        break;
                    } else /* istanbul ignore next */{
                        cov_46hqz1nrw.b[11][1]++;
                    }
                }
                /* istanbul ignore next */cov_46hqz1nrw.s[52]++;
                if (!found) {
                    /* istanbul ignore next */cov_46hqz1nrw.b[14][0]++;
                    cov_46hqz1nrw.s[53]++;

                    terminal.writeErrorLine('Unable to find the dev certificate.');
                    /* istanbul ignore next */cov_46hqz1nrw.s[54]++;
                    return false;
                } else /* istanbul ignore next */{
                    cov_46hqz1nrw.b[14][1]++;
                }
                cov_46hqz1nrw.s[55]++;
                terminal.writeVerboseLine(`Found the dev cert. SHA is ${shaHash}`);
                const macUntrustResult = /* istanbul ignore next */(cov_46hqz1nrw.s[56]++, sudoSync_1.runSudoSync(['security', 'delete-certificate', '-Z', shaHash, macKeychain]));
                /* istanbul ignore next */cov_46hqz1nrw.s[57]++;
                if (macUntrustResult.code === 0) {
                    /* istanbul ignore next */cov_46hqz1nrw.b[15][0]++;
                    cov_46hqz1nrw.s[58]++;

                    terminal.writeVerboseLine('Successfully untrusted dev certificate.');
                    /* istanbul ignore next */cov_46hqz1nrw.s[59]++;
                    return true;
                } else {
                    /* istanbul ignore next */cov_46hqz1nrw.b[15][1]++;
                    cov_46hqz1nrw.s[60]++;

                    terminal.writeErrorLine(macUntrustResult.stderr.join(' '));
                    /* istanbul ignore next */cov_46hqz1nrw.s[61]++;
                    return false;
                }
            default:
                /* istanbul ignore next */cov_46hqz1nrw.b[6][2]++;
                cov_46hqz1nrw.s[62]++;

                // Linux + others: Have the user manually untrust the cert
                terminal.writeLine('Automatic certificate untrust is only implemented for debug-certificate-manager on Windows ' + 'and macOS. To untrust the development certificate, remove this certificate from your trusted ' + `root certification authorities: "${this._certificateStore.certificatePath}". The ` + `certificate has serial number "${serialNumber}".`);
                /* istanbul ignore next */cov_46hqz1nrw.s[63]++;
                return false;
        }
    }
    _createDevelopmentCertificate() {
        /* istanbul ignore next */cov_46hqz1nrw.f[3]++;

        const keys = /* istanbul ignore next */(cov_46hqz1nrw.s[64]++, forge.pki.rsa.generateKeyPair(2048));
        const certificate = /* istanbul ignore next */(cov_46hqz1nrw.s[65]++, forge.pki.createCertificate());
        /* istanbul ignore next */cov_46hqz1nrw.s[66]++;
        certificate.publicKey = keys.publicKey;
        /* istanbul ignore next */cov_46hqz1nrw.s[67]++;
        certificate.serialNumber = serialNumber;
        const now = /* istanbul ignore next */(cov_46hqz1nrw.s[68]++, new Date());
        /* istanbul ignore next */cov_46hqz1nrw.s[69]++;
        certificate.validity.notBefore = now;
        // Valid for 3 years
        /* istanbul ignore next */cov_46hqz1nrw.s[70]++;
        certificate.validity.notAfter.setFullYear(certificate.validity.notBefore.getFullYear() + 3);
        const attrs = /* istanbul ignore next */(cov_46hqz1nrw.s[71]++, [{
            name: 'commonName',
            value: 'localhost'
        }]);
        /* istanbul ignore next */cov_46hqz1nrw.s[72]++;
        certificate.setSubject(attrs);
        /* istanbul ignore next */cov_46hqz1nrw.s[73]++;
        certificate.setIssuer(attrs);
        /* istanbul ignore next */cov_46hqz1nrw.s[74]++;
        certificate.setExtensions([{
            name: 'subjectAltName',
            altNames: [{
                type: 2,
                value: 'localhost'
            }]
        }, {
            name: 'keyUsage',
            digitalSignature: true,
            keyEncipherment: true,
            dataEncipherment: true
        }, {
            name: 'extKeyUsage',
            serverAuth: true
        }, {
            name: 'friendlyName',
            value: friendlyName
        }]);
        // self-sign certificate
        /* istanbul ignore next */cov_46hqz1nrw.s[75]++;
        certificate.sign(keys.privateKey, forge.md.sha256.create());
        // convert a Forge certificate to PEM
        const pem = /* istanbul ignore next */(cov_46hqz1nrw.s[76]++, forge.pki.certificateToPem(certificate));
        const pemKey = /* istanbul ignore next */(cov_46hqz1nrw.s[77]++, forge.pki.privateKeyToPem(keys.privateKey));
        /* istanbul ignore next */cov_46hqz1nrw.s[78]++;
        return {
            pemCertificate: pem,
            pemKey: pemKey
        };
    }
    _ensureCertUtilExePath(terminal) {
        /* istanbul ignore next */cov_46hqz1nrw.f[4]++;
        cov_46hqz1nrw.s[79]++;

        if (!_certutilExePath) {
            /* istanbul ignore next */cov_46hqz1nrw.b[16][0]++;

            const where = /* istanbul ignore next */(cov_46hqz1nrw.s[80]++, child_process.spawnSync('where', ['certutil']));
            const whereErr = /* istanbul ignore next */(cov_46hqz1nrw.s[81]++, where.stderr.toString());
            /* istanbul ignore next */cov_46hqz1nrw.s[82]++;
            if (whereErr) {
                /* istanbul ignore next */cov_46hqz1nrw.b[17][0]++;
                cov_46hqz1nrw.s[83]++;

                terminal.writeErrorLine(`Error finding certUtil command: "${whereErr}"`);
                /* istanbul ignore next */cov_46hqz1nrw.s[84]++;
                _certutilExePath = undefined;
            } else {
                /* istanbul ignore next */cov_46hqz1nrw.b[17][1]++;

                const lines = /* istanbul ignore next */(cov_46hqz1nrw.s[85]++, where.stdout.toString().trim().split(os_1.EOL));
                /* istanbul ignore next */cov_46hqz1nrw.s[86]++;
                _certutilExePath = lines[0].trim();
            }
        } else /* istanbul ignore next */{
            cov_46hqz1nrw.b[16][1]++;
        }
        cov_46hqz1nrw.s[87]++;
        return _certutilExePath;
    }
    _tryTrustCertificate(certificatePath, terminal) {
        /* istanbul ignore next */cov_46hqz1nrw.f[5]++;
        cov_46hqz1nrw.s[88]++;

        switch (process.platform) {
            case 'win32':
                /* istanbul ignore next */cov_46hqz1nrw.b[18][0]++;

                const certutilExePath = /* istanbul ignore next */(cov_46hqz1nrw.s[89]++, this._ensureCertUtilExePath(terminal));
                /* istanbul ignore next */cov_46hqz1nrw.s[90]++;
                if (!certutilExePath) {
                    /* istanbul ignore next */cov_46hqz1nrw.b[19][0]++;
                    cov_46hqz1nrw.s[91]++;

                    // Unable to find the cert utility
                    return false;
                } else /* istanbul ignore next */{
                    cov_46hqz1nrw.b[19][1]++;
                }
                cov_46hqz1nrw.s[92]++;
                terminal.writeLine('Attempting to trust a dev certificate. This self-signed certificate only points to localhost ' + 'and will be stored in your local user profile to be used by other instances of ' + 'debug-certificate-manager. If you do not consent to trust this certificate, click "NO" in the dialog.');
                const winTrustResult = /* istanbul ignore next */(cov_46hqz1nrw.s[93]++, child_process.spawnSync(certutilExePath, ['-user', '-addstore', 'root', certificatePath]));
                /* istanbul ignore next */cov_46hqz1nrw.s[94]++;
                if (winTrustResult.status !== 0) {
                    /* istanbul ignore next */cov_46hqz1nrw.b[20][0]++;
                    cov_46hqz1nrw.s[95]++;

                    terminal.writeErrorLine(`Error: ${winTrustResult.stdout.toString()}`);
                    const errorLines = /* istanbul ignore next */(cov_46hqz1nrw.s[96]++, winTrustResult.stdout.toString().split(os_1.EOL).map(line => {
                        /* istanbul ignore next */cov_46hqz1nrw.f[6]++;
                        cov_46hqz1nrw.s[97]++;
                        return line.trim();
                    }));
                    // Not sure if this is always the status code for "cancelled" - should confirm.
                    /* istanbul ignore next */cov_46hqz1nrw.s[98]++;
                    if ( /* istanbul ignore next */(cov_46hqz1nrw.b[22][0]++, winTrustResult.status === 2147943623) || /* istanbul ignore next */(cov_46hqz1nrw.b[22][1]++, errorLines[errorLines.length - 1].indexOf('The operation was canceled by the user.') > 0)) {
                        /* istanbul ignore next */cov_46hqz1nrw.b[21][0]++;
                        cov_46hqz1nrw.s[99]++;

                        terminal.writeLine('Certificate trust cancelled.');
                    } else {
                        /* istanbul ignore next */cov_46hqz1nrw.b[21][1]++;
                        cov_46hqz1nrw.s[100]++;

                        terminal.writeErrorLine('Certificate trust failed with an unknown error.');
                    }
                    /* istanbul ignore next */cov_46hqz1nrw.s[101]++;
                    return false;
                } else {
                    /* istanbul ignore next */cov_46hqz1nrw.b[20][1]++;
                    cov_46hqz1nrw.s[102]++;

                    terminal.writeVerboseLine('Successfully trusted development certificate.');
                    /* istanbul ignore next */cov_46hqz1nrw.s[103]++;
                    return true;
                }
            case 'darwin':
                /* istanbul ignore next */cov_46hqz1nrw.b[18][1]++;
                cov_46hqz1nrw.s[104]++;

                terminal.writeLine('Attempting to trust a dev certificate. This self-signed certificate only points to localhost ' + 'and will be stored in your local user profile to be used by other instances of ' + 'debug-certificate-manager. If you do not consent to trust this certificate, do not enter your ' + 'root password in the prompt.');
                const commands = /* istanbul ignore next */(cov_46hqz1nrw.s[105]++, ['security', 'add-trusted-cert', '-d', '-r', 'trustRoot', '-k', macKeychain, certificatePath]);
                const result = /* istanbul ignore next */(cov_46hqz1nrw.s[106]++, sudoSync_1.runSudoSync(commands));
                /* istanbul ignore next */cov_46hqz1nrw.s[107]++;
                if (result.code === 0) {
                    /* istanbul ignore next */cov_46hqz1nrw.b[23][0]++;
                    cov_46hqz1nrw.s[108]++;

                    terminal.writeVerboseLine('Successfully trusted development certificate.');
                    /* istanbul ignore next */cov_46hqz1nrw.s[109]++;
                    return true;
                } else {
                    /* istanbul ignore next */cov_46hqz1nrw.b[23][1]++;
                    cov_46hqz1nrw.s[110]++;

                    if (result.stderr.some(value => {
                        /* istanbul ignore next */cov_46hqz1nrw.f[7]++;
                        cov_46hqz1nrw.s[111]++;
                        return !!value.match(/The authorization was cancelled by the user\./);
                    })) {
                        /* istanbul ignore next */cov_46hqz1nrw.b[24][0]++;
                        cov_46hqz1nrw.s[112]++;

                        terminal.writeLine('Certificate trust cancelled.');
                        /* istanbul ignore next */cov_46hqz1nrw.s[113]++;
                        return false;
                    } else {
                        /* istanbul ignore next */cov_46hqz1nrw.b[24][1]++;
                        cov_46hqz1nrw.s[114]++;

                        terminal.writeErrorLine(`Certificate trust failed with an unknown error. Exit code: ${result.code}. ` + `Error: ${result.stderr.join(' ')}`);
                        /* istanbul ignore next */cov_46hqz1nrw.s[115]++;
                        return false;
                    }
                }
            default:
                /* istanbul ignore next */cov_46hqz1nrw.b[18][2]++;
                cov_46hqz1nrw.s[116]++;

                // Linux + others: Have the user manually trust the cert if they want to
                terminal.writeLine('Automatic certificate trust is only implemented for debug-certificate-manager on Windows ' + 'and macOS. To trust the development certificate, add this certificate to your trusted root ' + `certification authorities: "${certificatePath}".`);
                /* istanbul ignore next */cov_46hqz1nrw.s[117]++;
                return true;
        }
    }
    _trySetFriendlyName(certificatePath, terminal) {
        /* istanbul ignore next */cov_46hqz1nrw.f[8]++;
        cov_46hqz1nrw.s[118]++;

        if (process.platform === 'win32') {
            /* istanbul ignore next */cov_46hqz1nrw.b[25][0]++;

            const certutilExePath = /* istanbul ignore next */(cov_46hqz1nrw.s[119]++, this._ensureCertUtilExePath(terminal));
            /* istanbul ignore next */cov_46hqz1nrw.s[120]++;
            if (!certutilExePath) {
                /* istanbul ignore next */cov_46hqz1nrw.b[26][0]++;
                cov_46hqz1nrw.s[121]++;

                // Unable to find the cert utility
                return false;
            } else /* istanbul ignore next */{
                cov_46hqz1nrw.b[26][1]++;
            }
            const basePath = /* istanbul ignore next */(cov_46hqz1nrw.s[122]++, path.dirname(certificatePath));
            const fileName = /* istanbul ignore next */(cov_46hqz1nrw.s[123]++, path.basename(certificatePath, path.extname(certificatePath)));
            const friendlyNamePath = /* istanbul ignore next */(cov_46hqz1nrw.s[124]++, path.join(basePath, `${fileName}.inf`));
            const friendlyNameFile = /* istanbul ignore next */(cov_46hqz1nrw.s[125]++, ['[Version]', 'Signature = "$Windows NT$"', '[Properties]', `11 = "{text}${friendlyName}"`, ''].join(os_1.EOL));
            /* istanbul ignore next */cov_46hqz1nrw.s[126]++;
            node_core_library_1.FileSystem.writeFile(friendlyNamePath, friendlyNameFile);
            const commands = /* istanbul ignore next */(cov_46hqz1nrw.s[127]++, ['–repairstore', '–user', 'root', serialNumber, friendlyNamePath]);
            const repairStoreResult = /* istanbul ignore next */(cov_46hqz1nrw.s[128]++, child_process.spawnSync(certutilExePath, commands));
            /* istanbul ignore next */cov_46hqz1nrw.s[129]++;
            if (repairStoreResult.status !== 0) {
                /* istanbul ignore next */cov_46hqz1nrw.b[27][0]++;
                cov_46hqz1nrw.s[130]++;

                terminal.writeErrorLine(`CertUtil Error: ${repairStoreResult.stdout.toString()}`);
                /* istanbul ignore next */cov_46hqz1nrw.s[131]++;
                return false;
            } else {
                /* istanbul ignore next */cov_46hqz1nrw.b[27][1]++;
                cov_46hqz1nrw.s[132]++;

                terminal.writeVerboseLine('Successfully set certificate name.');
                /* istanbul ignore next */cov_46hqz1nrw.s[133]++;
                return true;
            }
        } else {
            /* istanbul ignore next */cov_46hqz1nrw.b[25][1]++;
            cov_46hqz1nrw.s[134]++;

            // No equivalent concept outside of Windows
            return true;
        }
    }
    _ensureCertificateInternal(terminal) {
        /* istanbul ignore next */cov_46hqz1nrw.f[9]++;

        const certificateStore = /* istanbul ignore next */(cov_46hqz1nrw.s[135]++, this._certificateStore);
        const generatedCertificate = /* istanbul ignore next */(cov_46hqz1nrw.s[136]++, this._createDevelopmentCertificate());
        const now = /* istanbul ignore next */(cov_46hqz1nrw.s[137]++, new Date());
        const certificateName = /* istanbul ignore next */(cov_46hqz1nrw.s[138]++, now.getTime().toString());
        const tempDirName = /* istanbul ignore next */(cov_46hqz1nrw.s[139]++, path.join(__dirname, '..', 'temp'));
        const tempCertificatePath = /* istanbul ignore next */(cov_46hqz1nrw.s[140]++, path.join(tempDirName, `${certificateName}.pem`));
        const pemFileContents = /* istanbul ignore next */(cov_46hqz1nrw.s[141]++, generatedCertificate.pemCertificate);
        /* istanbul ignore next */cov_46hqz1nrw.s[142]++;
        if (pemFileContents) {
            /* istanbul ignore next */cov_46hqz1nrw.b[28][0]++;
            cov_46hqz1nrw.s[143]++;

            node_core_library_1.FileSystem.writeFile(tempCertificatePath, pemFileContents, {
                ensureFolderExists: true
            });
        } else /* istanbul ignore next */{
            cov_46hqz1nrw.b[28][1]++;
        }
        cov_46hqz1nrw.s[144]++;
        if (this._tryTrustCertificate(tempCertificatePath, terminal)) {
            /* istanbul ignore next */cov_46hqz1nrw.b[29][0]++;
            cov_46hqz1nrw.s[145]++;

            certificateStore.certificateData = generatedCertificate.pemCertificate;
            /* istanbul ignore next */cov_46hqz1nrw.s[146]++;
            certificateStore.keyData = generatedCertificate.pemKey;
            // Try to set the friendly name, and warn if we can't
            /* istanbul ignore next */cov_46hqz1nrw.s[147]++;
            if (!this._trySetFriendlyName(tempCertificatePath, terminal)) {
                /* istanbul ignore next */cov_46hqz1nrw.b[30][0]++;
                cov_46hqz1nrw.s[148]++;

                terminal.writeWarningLine('Unable to set the certificate\'s friendly name.');
            } else /* istanbul ignore next */{
                cov_46hqz1nrw.b[30][1]++;
            }
        } else {
            /* istanbul ignore next */cov_46hqz1nrw.b[29][1]++;
            cov_46hqz1nrw.s[149]++;

            // Clear out the existing store data, if any exists
            certificateStore.certificateData = undefined;
            /* istanbul ignore next */cov_46hqz1nrw.s[150]++;
            certificateStore.keyData = undefined;
        }
        /* istanbul ignore next */cov_46hqz1nrw.s[151]++;
        node_core_library_1.FileSystem.deleteFile(tempCertificatePath);
    }
    _certificateHasSubjectAltName() {
        /* istanbul ignore next */cov_46hqz1nrw.f[10]++;

        const certificateData = /* istanbul ignore next */(cov_46hqz1nrw.s[152]++, this._certificateStore.certificateData);
        /* istanbul ignore next */cov_46hqz1nrw.s[153]++;
        if (!certificateData) {
            /* istanbul ignore next */cov_46hqz1nrw.b[31][0]++;
            cov_46hqz1nrw.s[154]++;

            return false;
        } else /* istanbul ignore next */{
            cov_46hqz1nrw.b[31][1]++;
        }
        const certificate = /* istanbul ignore next */(cov_46hqz1nrw.s[155]++, forge.pki.certificateFromPem(certificateData));
        /* istanbul ignore next */cov_46hqz1nrw.s[156]++;
        return !!certificate.getExtension('subjectAltName');
    }
}
/* istanbul ignore next */cov_46hqz1nrw.s[157]++;
exports.CertificateManager = CertificateManager;
//# sourceMappingURL=CertificateManager.js.map
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNlcnRpZmljYXRlTWFuYWdlci5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImZvcmdlIiwicmVxdWlyZSIsInBhdGgiLCJjaGlsZF9wcm9jZXNzIiwib3NfMSIsIm5vZGVfY29yZV9saWJyYXJ5XzEiLCJzdWRvU3luY18xIiwiQ2VydGlmaWNhdGVTdG9yZV8xIiwic2VyaWFsTnVtYmVyIiwiZnJpZW5kbHlOYW1lIiwibWFjS2V5Y2hhaW4iLCJfY2VydHV0aWxFeGVQYXRoIiwiQ2VydGlmaWNhdGVNYW5hZ2VyIiwiY29uc3RydWN0b3IiLCJfY2VydGlmaWNhdGVTdG9yZSIsIkNlcnRpZmljYXRlU3RvcmUiLCJlbnN1cmVDZXJ0aWZpY2F0ZSIsImNhbkdlbmVyYXRlTmV3Q2VydGlmaWNhdGUiLCJ0ZXJtaW5hbCIsImNlcnRpZmljYXRlRGF0YSIsImtleURhdGEiLCJfY2VydGlmaWNhdGVIYXNTdWJqZWN0QWx0TmFtZSIsIndhcm5pbmdNZXNzYWdlIiwid3JpdGVXYXJuaW5nTGluZSIsInVudHJ1c3RDZXJ0aWZpY2F0ZSIsIl9lbnN1cmVDZXJ0aWZpY2F0ZUludGVybmFsIiwicGVtQ2VydGlmaWNhdGUiLCJwZW1LZXkiLCJwcm9jZXNzIiwicGxhdGZvcm0iLCJjZXJ0dXRpbEV4ZVBhdGgiLCJfZW5zdXJlQ2VydFV0aWxFeGVQYXRoIiwid2luVW50cnVzdFJlc3VsdCIsInNwYXduU3luYyIsInN0YXR1cyIsIndyaXRlRXJyb3JMaW5lIiwic3Rkb3V0IiwidG9TdHJpbmciLCJ3cml0ZVZlcmJvc2VMaW5lIiwibWFjRmluZENlcnRpZmljYXRlUmVzdWx0Iiwib3V0cHV0Iiwiam9pbiIsIm91dHB1dExpbmVzIiwic3BsaXQiLCJFT0wiLCJmb3VuZCIsInNoYUhhc2giLCJpIiwibGVuZ3RoIiwibGluZSIsInNoYU1hdGNoIiwibWF0Y2giLCJzbmJyTWF0Y2giLCJ0b0xvd2VyQ2FzZSIsIm1hY1VudHJ1c3RSZXN1bHQiLCJydW5TdWRvU3luYyIsImNvZGUiLCJzdGRlcnIiLCJ3cml0ZUxpbmUiLCJjZXJ0aWZpY2F0ZVBhdGgiLCJfY3JlYXRlRGV2ZWxvcG1lbnRDZXJ0aWZpY2F0ZSIsImtleXMiLCJwa2kiLCJyc2EiLCJnZW5lcmF0ZUtleVBhaXIiLCJjZXJ0aWZpY2F0ZSIsImNyZWF0ZUNlcnRpZmljYXRlIiwicHVibGljS2V5Iiwibm93IiwiRGF0ZSIsInZhbGlkaXR5Iiwibm90QmVmb3JlIiwibm90QWZ0ZXIiLCJzZXRGdWxsWWVhciIsImdldEZ1bGxZZWFyIiwiYXR0cnMiLCJuYW1lIiwic2V0U3ViamVjdCIsInNldElzc3VlciIsInNldEV4dGVuc2lvbnMiLCJhbHROYW1lcyIsInR5cGUiLCJkaWdpdGFsU2lnbmF0dXJlIiwia2V5RW5jaXBoZXJtZW50IiwiZGF0YUVuY2lwaGVybWVudCIsInNlcnZlckF1dGgiLCJzaWduIiwicHJpdmF0ZUtleSIsIm1kIiwic2hhMjU2IiwiY3JlYXRlIiwicGVtIiwiY2VydGlmaWNhdGVUb1BlbSIsInByaXZhdGVLZXlUb1BlbSIsIndoZXJlIiwid2hlcmVFcnIiLCJ1bmRlZmluZWQiLCJsaW5lcyIsInRyaW0iLCJfdHJ5VHJ1c3RDZXJ0aWZpY2F0ZSIsIndpblRydXN0UmVzdWx0IiwiZXJyb3JMaW5lcyIsIm1hcCIsImluZGV4T2YiLCJjb21tYW5kcyIsInJlc3VsdCIsInNvbWUiLCJfdHJ5U2V0RnJpZW5kbHlOYW1lIiwiYmFzZVBhdGgiLCJkaXJuYW1lIiwiZmlsZU5hbWUiLCJiYXNlbmFtZSIsImV4dG5hbWUiLCJmcmllbmRseU5hbWVQYXRoIiwiZnJpZW5kbHlOYW1lRmlsZSIsIkZpbGVTeXN0ZW0iLCJ3cml0ZUZpbGUiLCJyZXBhaXJTdG9yZVJlc3VsdCIsImNlcnRpZmljYXRlU3RvcmUiLCJnZW5lcmF0ZWRDZXJ0aWZpY2F0ZSIsImNlcnRpZmljYXRlTmFtZSIsImdldFRpbWUiLCJ0ZW1wRGlyTmFtZSIsIl9fZGlybmFtZSIsInRlbXBDZXJ0aWZpY2F0ZVBhdGgiLCJwZW1GaWxlQ29udGVudHMiLCJlbnN1cmVGb2xkZXJFeGlzdHMiLCJkZWxldGVGaWxlIiwiY2VydGlmaWNhdGVGcm9tUGVtIiwiZ2V0RXh0ZW5zaW9uIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQUEsT0FBT0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkMsRUFBRUMsT0FBTyxJQUFULEVBQTdDO0FBQ0EsTUFBTUMseURBQVFDLFFBQVEsWUFBUixDQUFSLENBQU47QUFDQSxNQUFNQyx3REFBT0QsUUFBUSxNQUFSLENBQVAsQ0FBTjtBQUNBLE1BQU1FLGlFQUFnQkYsUUFBUSxlQUFSLENBQWhCLENBQU47QUFDQSxNQUFNRyx3REFBT0gsUUFBUSxJQUFSLENBQVAsQ0FBTjtBQUNBLE1BQU1JLHVFQUFzQkosUUFBUSw4QkFBUixDQUF0QixDQUFOO0FBQ0EsTUFBTUssOERBQWFMLFFBQVEsWUFBUixDQUFiLENBQU47QUFDQSxNQUFNTSxzRUFBcUJOLFFBQVEsb0JBQVIsQ0FBckIsQ0FBTjtBQUNBLE1BQU1PLGdFQUFlLGtDQUFmLENBQU47QUFDQSxNQUFNQyxnRUFBZSxtREFBZixDQUFOO0FBQ0EsTUFBTUMsZ0VBQWMsb0NBQWQsQ0FBTjtBQUNBLElBQUlDLGdCQUFKO0FBQ0E7Ozs7O0FBS0EsTUFBTUMsa0JBQU4sQ0FBeUI7QUFDckJDLGtCQUFjO0FBQUE7QUFBQTs7QUFDVixhQUFLQyxpQkFBTCxHQUF5QixJQUFJUCxtQkFBbUJRLGdCQUF2QixFQUF6QjtBQUNIO0FBQ0Q7Ozs7OztBQU1BQyxzQkFBa0JDLHlCQUFsQixFQUE2Q0MsUUFBN0MsRUFBdUQ7QUFBQTtBQUFBOztBQUNuRCxZQUFJLDBEQUFLSixpQkFBTCxDQUF1QkssZUFBdkIseURBQTBDLEtBQUtMLGlCQUFMLENBQXVCTSxPQUFqRSxDQUFKLEVBQThFO0FBQUE7QUFBQTs7QUFDMUUsZ0JBQUksQ0FBQyxLQUFLQyw2QkFBTCxFQUFMLEVBQTJDO0FBQUE7O0FBQ3ZDLG9CQUFJQyxtRUFBa0Isd0VBQ2xCLHdFQURBLENBQUo7QUFEdUM7QUFHdkMsb0JBQUlMLHlCQUFKLEVBQStCO0FBQUE7QUFBQTs7QUFDM0JLLHNDQUFrQixnRUFBbEI7QUFDSCxpQkFGRCxNQUdLO0FBQUE7QUFBQTs7QUFDREEsc0NBQWtCLGtEQUFsQjtBQUNIO0FBUnNDO0FBU3ZDSix5QkFBU0ssZ0JBQVQsQ0FBMEJELGNBQTFCO0FBVHVDO0FBVXZDLG9CQUFJTCx5QkFBSixFQUErQjtBQUFBO0FBQUE7O0FBQzNCLHlCQUFLTyxrQkFBTCxDQUF3Qk4sUUFBeEI7QUFEMkI7QUFFM0IseUJBQUtPLDBCQUFMLENBQWdDUCxRQUFoQztBQUNILGlCQUhEO0FBQUE7QUFBQTtBQUlILGFBZEQ7QUFBQTtBQUFBO0FBZUgsU0FoQkQsTUFpQks7QUFBQTtBQUFBO0FBQUEsb0JBQUlELHlCQUFKLEVBQStCO0FBQUE7QUFBQTs7QUFDaEMseUJBQUtRLDBCQUFMLENBQWdDUCxRQUFoQztBQUNILGlCQUZJO0FBQUE7QUFBQTtBQUVKLGFBcEJrRDtBQXFCbkQsZUFBTztBQUNIUSw0QkFBZ0IsS0FBS1osaUJBQUwsQ0FBdUJLLGVBRHBDO0FBRUhRLG9CQUFRLEtBQUtiLGlCQUFMLENBQXVCTTtBQUY1QixTQUFQO0FBSUg7QUFDRDs7Ozs7QUFLQUksdUJBQW1CTixRQUFuQixFQUE2QjtBQUFBO0FBQUE7O0FBQ3pCLGdCQUFRVSxRQUFRQyxRQUFoQjtBQUNJLGlCQUFLLE9BQUw7QUFBQTs7QUFDSSxzQkFBTUMsb0VBQWtCLEtBQUtDLHNCQUFMLENBQTRCYixRQUE1QixDQUFsQixDQUFOO0FBREo7QUFFSSxvQkFBSSxDQUFDWSxlQUFMLEVBQXNCO0FBQUE7QUFBQTs7QUFDbEI7QUFDQSwyQkFBTyxLQUFQO0FBQ0gsaUJBSEQ7QUFBQTtBQUFBO0FBSUEsc0JBQU1FLHFFQUFtQjdCLGNBQWM4QixTQUFkLENBQXdCSCxlQUF4QixFQUF5QyxDQUFDLE9BQUQsRUFBVSxXQUFWLEVBQXVCLE1BQXZCLEVBQStCdEIsWUFBL0IsQ0FBekMsQ0FBbkIsQ0FBTjtBQU5KO0FBT0ksb0JBQUl3QixpQkFBaUJFLE1BQWpCLEtBQTRCLENBQWhDLEVBQW1DO0FBQUE7QUFBQTs7QUFDL0JoQiw2QkFBU2lCLGNBQVQsQ0FBeUIsVUFBU0gsaUJBQWlCSSxNQUFqQixDQUF3QkMsUUFBeEIsRUFBbUMsRUFBckU7QUFEK0I7QUFFL0IsMkJBQU8sS0FBUDtBQUNILGlCQUhELE1BSUs7QUFBQTtBQUFBOztBQUNEbkIsNkJBQVNvQixnQkFBVCxDQUEwQixpREFBMUI7QUFEQztBQUVELDJCQUFPLElBQVA7QUFDSDtBQUNMLGlCQUFLLFFBQUw7QUFBQTtBQUFBOztBQUNJcEIseUJBQVNvQixnQkFBVCxDQUEwQiw4Q0FBMUI7QUFDQSxzQkFBTUMsNkVBQTJCcEMsY0FBYzhCLFNBQWQsQ0FBd0IsVUFBeEIsRUFBb0MsQ0FBQyxrQkFBRCxFQUFxQixJQUFyQixFQUEyQixXQUEzQixFQUF3QyxJQUF4QyxFQUE4QyxJQUE5QyxFQUFvRHZCLFdBQXBELENBQXBDLENBQTNCLENBQU47QUFGSjtBQUdJLG9CQUFJNkIseUJBQXlCTCxNQUF6QixLQUFvQyxDQUF4QyxFQUEyQztBQUFBO0FBQUE7O0FBQ3ZDaEIsNkJBQVNpQixjQUFULENBQXlCLHNDQUFxQ0kseUJBQXlCQyxNQUF6QixDQUFnQ0MsSUFBaEMsQ0FBcUMsR0FBckMsQ0FBMEMsRUFBeEc7QUFEdUM7QUFFdkMsMkJBQU8sS0FBUDtBQUNILGlCQUhEO0FBQUE7QUFBQTtBQUlBLHNCQUFNQyxnRUFBY0gseUJBQXlCSCxNQUF6QixDQUFnQ0MsUUFBaEMsR0FBMkNNLEtBQTNDLENBQWlEdkMsS0FBS3dDLEdBQXRELENBQWQsQ0FBTjtBQUNBLG9CQUFJQywwREFBUSxLQUFSLENBQUo7QUFDQSxvQkFBSUMsNERBQVUsRUFBVixDQUFKO0FBVEo7QUFVSSxxQkFBSyxJQUFJQyxJQUFJLENBQWIsRUFBZ0JBLElBQUlMLFlBQVlNLE1BQWhDLEVBQXdDRCxHQUF4QyxFQUE2QztBQUN6QywwQkFBTUUseURBQU9QLFlBQVlLLENBQVosQ0FBUCxDQUFOO0FBQ0EsMEJBQU1HLDZEQUFXRCxLQUFLRSxLQUFMLENBQVcsb0JBQVgsQ0FBWCxDQUFOO0FBRnlDO0FBR3pDLHdCQUFJRCxRQUFKLEVBQWM7QUFBQTtBQUFBOztBQUNWSixrQ0FBVUksU0FBUyxDQUFULENBQVY7QUFDSCxxQkFGRDtBQUFBO0FBQUE7QUFHQSwwQkFBTUUsOERBQVlILEtBQUtFLEtBQUwsQ0FBVyxnQ0FBWCxDQUFaLENBQU47QUFOeUM7QUFPekMsd0JBQUkseUhBQWEsQ0FBQyxnRUFBVSxDQUFWLDJEQUFnQixFQUFoQixDQUFELEVBQXFCRSxXQUFyQixPQUF1QzdDLFlBQXBELENBQUosRUFBc0U7QUFBQTtBQUFBOztBQUNsRXFDLGdDQUFRLElBQVI7QUFEa0U7QUFFbEU7QUFDSCxxQkFIRDtBQUFBO0FBQUE7QUFJSDtBQXJCTDtBQXNCSSxvQkFBSSxDQUFDQSxLQUFMLEVBQVk7QUFBQTtBQUFBOztBQUNSM0IsNkJBQVNpQixjQUFULENBQXdCLHFDQUF4QjtBQURRO0FBRVIsMkJBQU8sS0FBUDtBQUNILGlCQUhEO0FBQUE7QUFBQTtBQXRCSjtBQTBCSWpCLHlCQUFTb0IsZ0JBQVQsQ0FBMkIsOEJBQTZCUSxPQUFRLEVBQWhFO0FBQ0Esc0JBQU1RLHFFQUFtQmhELFdBQVdpRCxXQUFYLENBQXVCLENBQUMsVUFBRCxFQUFhLG9CQUFiLEVBQW1DLElBQW5DLEVBQXlDVCxPQUF6QyxFQUFrRHBDLFdBQWxELENBQXZCLENBQW5CLENBQU47QUEzQko7QUE0Qkksb0JBQUk0QyxpQkFBaUJFLElBQWpCLEtBQTBCLENBQTlCLEVBQWlDO0FBQUE7QUFBQTs7QUFDN0J0Qyw2QkFBU29CLGdCQUFULENBQTBCLHlDQUExQjtBQUQ2QjtBQUU3QiwyQkFBTyxJQUFQO0FBQ0gsaUJBSEQsTUFJSztBQUFBO0FBQUE7O0FBQ0RwQiw2QkFBU2lCLGNBQVQsQ0FBd0JtQixpQkFBaUJHLE1BQWpCLENBQXdCaEIsSUFBeEIsQ0FBNkIsR0FBN0IsQ0FBeEI7QUFEQztBQUVELDJCQUFPLEtBQVA7QUFDSDtBQUNMO0FBQUE7QUFBQTs7QUFDSTtBQUNBdkIseUJBQVN3QyxTQUFULENBQW1CLGdHQUNmLCtGQURlLEdBRWQsb0NBQW1DLEtBQUs1QyxpQkFBTCxDQUF1QjZDLGVBQWdCLFNBRjVELEdBR2Qsa0NBQWlDbkQsWUFBYSxJQUhuRDtBQUZKO0FBTUksdUJBQU8sS0FBUDtBQTFEUjtBQTRESDtBQUNEb0Qsb0NBQWdDO0FBQUE7O0FBQzVCLGNBQU1DLHlEQUFPN0QsTUFBTThELEdBQU4sQ0FBVUMsR0FBVixDQUFjQyxlQUFkLENBQThCLElBQTlCLENBQVAsQ0FBTjtBQUNBLGNBQU1DLGdFQUFjakUsTUFBTThELEdBQU4sQ0FBVUksaUJBQVYsRUFBZCxDQUFOO0FBRjRCO0FBRzVCRCxvQkFBWUUsU0FBWixHQUF3Qk4sS0FBS00sU0FBN0I7QUFINEI7QUFJNUJGLG9CQUFZekQsWUFBWixHQUEyQkEsWUFBM0I7QUFDQSxjQUFNNEQsd0RBQU0sSUFBSUMsSUFBSixFQUFOLENBQU47QUFMNEI7QUFNNUJKLG9CQUFZSyxRQUFaLENBQXFCQyxTQUFyQixHQUFpQ0gsR0FBakM7QUFDQTtBQVA0QjtBQVE1Qkgsb0JBQVlLLFFBQVosQ0FBcUJFLFFBQXJCLENBQThCQyxXQUE5QixDQUEwQ1IsWUFBWUssUUFBWixDQUFxQkMsU0FBckIsQ0FBK0JHLFdBQS9CLEtBQStDLENBQXpGO0FBQ0EsY0FBTUMsMERBQVEsQ0FBQztBQUNQQyxrQkFBTSxZQURDO0FBRVA3RSxtQkFBTztBQUZBLFNBQUQsQ0FBUixDQUFOO0FBVDRCO0FBYTVCa0Usb0JBQVlZLFVBQVosQ0FBdUJGLEtBQXZCO0FBYjRCO0FBYzVCVixvQkFBWWEsU0FBWixDQUFzQkgsS0FBdEI7QUFkNEI7QUFlNUJWLG9CQUFZYyxhQUFaLENBQTBCLENBQ3RCO0FBQ0lILGtCQUFNLGdCQURWO0FBRUlJLHNCQUFVLENBQUM7QUFDSEMsc0JBQU0sQ0FESDtBQUVIbEYsdUJBQU87QUFGSixhQUFEO0FBRmQsU0FEc0IsRUFRdEI7QUFDSTZFLGtCQUFNLFVBRFY7QUFFSU0sOEJBQWtCLElBRnRCO0FBR0lDLDZCQUFpQixJQUhyQjtBQUlJQyw4QkFBa0I7QUFKdEIsU0FSc0IsRUFhbkI7QUFDQ1Isa0JBQU0sYUFEUDtBQUVDUyx3QkFBWTtBQUZiLFNBYm1CLEVBZ0JuQjtBQUNDVCxrQkFBTSxjQURQO0FBRUM3RSxtQkFBT1U7QUFGUixTQWhCbUIsQ0FBMUI7QUFxQkE7QUFwQzRCO0FBcUM1QndELG9CQUFZcUIsSUFBWixDQUFpQnpCLEtBQUswQixVQUF0QixFQUFrQ3ZGLE1BQU13RixFQUFOLENBQVNDLE1BQVQsQ0FBZ0JDLE1BQWhCLEVBQWxDO0FBQ0E7QUFDQSxjQUFNQyx3REFBTTNGLE1BQU04RCxHQUFOLENBQVU4QixnQkFBVixDQUEyQjNCLFdBQTNCLENBQU4sQ0FBTjtBQUNBLGNBQU10QywyREFBUzNCLE1BQU04RCxHQUFOLENBQVUrQixlQUFWLENBQTBCaEMsS0FBSzBCLFVBQS9CLENBQVQsQ0FBTjtBQXhDNEI7QUF5QzVCLGVBQU87QUFDSDdELDRCQUFnQmlFLEdBRGI7QUFFSGhFLG9CQUFRQTtBQUZMLFNBQVA7QUFJSDtBQUNESSwyQkFBdUJiLFFBQXZCLEVBQWlDO0FBQUE7QUFBQTs7QUFDN0IsWUFBSSxDQUFDUCxnQkFBTCxFQUF1QjtBQUFBOztBQUNuQixrQkFBTW1GLDBEQUFRM0YsY0FBYzhCLFNBQWQsQ0FBd0IsT0FBeEIsRUFBaUMsQ0FBQyxVQUFELENBQWpDLENBQVIsQ0FBTjtBQUNBLGtCQUFNOEQsNkRBQVdELE1BQU1yQyxNQUFOLENBQWFwQixRQUFiLEVBQVgsQ0FBTjtBQUZtQjtBQUduQixnQkFBSTBELFFBQUosRUFBYztBQUFBO0FBQUE7O0FBQ1Y3RSx5QkFBU2lCLGNBQVQsQ0FBeUIsb0NBQW1DNEQsUUFBUyxHQUFyRTtBQURVO0FBRVZwRixtQ0FBbUJxRixTQUFuQjtBQUNILGFBSEQsTUFJSztBQUFBOztBQUNELHNCQUFNQywwREFBUUgsTUFBTTFELE1BQU4sQ0FBYUMsUUFBYixHQUF3QjZELElBQXhCLEdBQStCdkQsS0FBL0IsQ0FBcUN2QyxLQUFLd0MsR0FBMUMsQ0FBUixDQUFOO0FBREM7QUFFRGpDLG1DQUFtQnNGLE1BQU0sQ0FBTixFQUFTQyxJQUFULEVBQW5CO0FBQ0g7QUFDSixTQVhEO0FBQUE7QUFBQTtBQUQ2QjtBQWE3QixlQUFPdkYsZ0JBQVA7QUFDSDtBQUNEd0YseUJBQXFCeEMsZUFBckIsRUFBc0N6QyxRQUF0QyxFQUFnRDtBQUFBO0FBQUE7O0FBQzVDLGdCQUFRVSxRQUFRQyxRQUFoQjtBQUNJLGlCQUFLLE9BQUw7QUFBQTs7QUFDSSxzQkFBTUMsb0VBQWtCLEtBQUtDLHNCQUFMLENBQTRCYixRQUE1QixDQUFsQixDQUFOO0FBREo7QUFFSSxvQkFBSSxDQUFDWSxlQUFMLEVBQXNCO0FBQUE7QUFBQTs7QUFDbEI7QUFDQSwyQkFBTyxLQUFQO0FBQ0gsaUJBSEQ7QUFBQTtBQUFBO0FBRko7QUFNSVoseUJBQVN3QyxTQUFULENBQW1CLGtHQUNmLGlGQURlLEdBRWYsdUdBRko7QUFHQSxzQkFBTTBDLG1FQUFpQmpHLGNBQWM4QixTQUFkLENBQXdCSCxlQUF4QixFQUF5QyxDQUFDLE9BQUQsRUFBVSxXQUFWLEVBQXVCLE1BQXZCLEVBQStCNkIsZUFBL0IsQ0FBekMsQ0FBakIsQ0FBTjtBQVRKO0FBVUksb0JBQUl5QyxlQUFlbEUsTUFBZixLQUEwQixDQUE5QixFQUFpQztBQUFBO0FBQUE7O0FBQzdCaEIsNkJBQVNpQixjQUFULENBQXlCLFVBQVNpRSxlQUFlaEUsTUFBZixDQUFzQkMsUUFBdEIsRUFBaUMsRUFBbkU7QUFDQSwwQkFBTWdFLCtEQUFhRCxlQUFlaEUsTUFBZixDQUFzQkMsUUFBdEIsR0FBaUNNLEtBQWpDLENBQXVDdkMsS0FBS3dDLEdBQTVDLEVBQWlEMEQsR0FBakQsQ0FBc0RyRCxJQUFELElBQVU7QUFBQTtBQUFBO0FBQUEsb0NBQUtpRCxJQUFMO0FBQVcscUJBQTFFLENBQWIsQ0FBTjtBQUNBO0FBSDZCO0FBSTdCLHdCQUFJLHFFQUFlaEUsTUFBZixLQUEwQixVQUExQiwwREFDQW1FLFdBQVdBLFdBQVdyRCxNQUFYLEdBQW9CLENBQS9CLEVBQWtDdUQsT0FBbEMsQ0FBMEMseUNBQTFDLElBQXVGLENBRHZGLENBQUosRUFDOEY7QUFBQTtBQUFBOztBQUMxRnJGLGlDQUFTd0MsU0FBVCxDQUFtQiw4QkFBbkI7QUFDSCxxQkFIRCxNQUlLO0FBQUE7QUFBQTs7QUFDRHhDLGlDQUFTaUIsY0FBVCxDQUF3QixpREFBeEI7QUFDSDtBQVY0QjtBQVc3QiwyQkFBTyxLQUFQO0FBQ0gsaUJBWkQsTUFhSztBQUFBO0FBQUE7O0FBQ0RqQiw2QkFBU29CLGdCQUFULENBQTBCLCtDQUExQjtBQURDO0FBRUQsMkJBQU8sSUFBUDtBQUNIO0FBQ0wsaUJBQUssUUFBTDtBQUFBO0FBQUE7O0FBQ0lwQix5QkFBU3dDLFNBQVQsQ0FBbUIsa0dBQ2YsaUZBRGUsR0FFZixnR0FGZSxHQUdmLDhCQUhKO0FBSUEsc0JBQU04Qyw4REFBVyxDQUNiLFVBRGEsRUFFYixrQkFGYSxFQUdiLElBSGEsRUFJYixJQUphLEVBS2IsV0FMYSxFQU1iLElBTmEsRUFPYjlGLFdBUGEsRUFRYmlELGVBUmEsQ0FBWCxDQUFOO0FBVUEsc0JBQU04Qyw0REFBU25HLFdBQVdpRCxXQUFYLENBQXVCaUQsUUFBdkIsQ0FBVCxDQUFOO0FBZko7QUFnQkksb0JBQUlDLE9BQU9qRCxJQUFQLEtBQWdCLENBQXBCLEVBQXVCO0FBQUE7QUFBQTs7QUFDbkJ0Qyw2QkFBU29CLGdCQUFULENBQTBCLCtDQUExQjtBQURtQjtBQUVuQiwyQkFBTyxJQUFQO0FBQ0gsaUJBSEQsTUFJSztBQUFBO0FBQUE7O0FBQ0Qsd0JBQUltRSxPQUFPaEQsTUFBUCxDQUFjaUQsSUFBZCxDQUFvQjNHLEtBQUQsSUFBVztBQUFBO0FBQUE7QUFBQSxnQ0FBQyxDQUFDQSxNQUFNb0QsS0FBTixDQUFZLCtDQUFaLENBQUY7QUFBOEQscUJBQTVGLENBQUosRUFBbUc7QUFBQTtBQUFBOztBQUMvRmpDLGlDQUFTd0MsU0FBVCxDQUFtQiw4QkFBbkI7QUFEK0Y7QUFFL0YsK0JBQU8sS0FBUDtBQUNILHFCQUhELE1BSUs7QUFBQTtBQUFBOztBQUNEeEMsaUNBQVNpQixjQUFULENBQXlCLDhEQUE2RHNFLE9BQU9qRCxJQUFLLElBQTFFLEdBQ25CLFVBQVNpRCxPQUFPaEQsTUFBUCxDQUFjaEIsSUFBZCxDQUFtQixHQUFuQixDQUF3QixFQUR0QztBQURDO0FBR0QsK0JBQU8sS0FBUDtBQUNIO0FBQ0o7QUFDTDtBQUFBO0FBQUE7O0FBQ0k7QUFDQXZCLHlCQUFTd0MsU0FBVCxDQUFtQiw4RkFDZiw2RkFEZSxHQUVkLCtCQUE4QkMsZUFBZ0IsSUFGbkQ7QUFGSjtBQUtJLHVCQUFPLElBQVA7QUFoRVI7QUFrRUg7QUFDRGdELHdCQUFvQmhELGVBQXBCLEVBQXFDekMsUUFBckMsRUFBK0M7QUFBQTtBQUFBOztBQUMzQyxZQUFJVSxRQUFRQyxRQUFSLEtBQXFCLE9BQXpCLEVBQWtDO0FBQUE7O0FBQzlCLGtCQUFNQyxxRUFBa0IsS0FBS0Msc0JBQUwsQ0FBNEJiLFFBQTVCLENBQWxCLENBQU47QUFEOEI7QUFFOUIsZ0JBQUksQ0FBQ1ksZUFBTCxFQUFzQjtBQUFBO0FBQUE7O0FBQ2xCO0FBQ0EsdUJBQU8sS0FBUDtBQUNILGFBSEQ7QUFBQTtBQUFBO0FBSUEsa0JBQU04RSw4REFBVzFHLEtBQUsyRyxPQUFMLENBQWFsRCxlQUFiLENBQVgsQ0FBTjtBQUNBLGtCQUFNbUQsOERBQVc1RyxLQUFLNkcsUUFBTCxDQUFjcEQsZUFBZCxFQUErQnpELEtBQUs4RyxPQUFMLENBQWFyRCxlQUFiLENBQS9CLENBQVgsQ0FBTjtBQUNBLGtCQUFNc0Qsc0VBQW1CL0csS0FBS3VDLElBQUwsQ0FBVW1FLFFBQVYsRUFBcUIsR0FBRUUsUUFBUyxNQUFoQyxDQUFuQixDQUFOO0FBQ0Esa0JBQU1JLHNFQUFtQixDQUNyQixXQURxQixFQUVyQiw0QkFGcUIsRUFHckIsY0FIcUIsRUFJcEIsZUFBY3pHLFlBQWEsR0FKUCxFQUtyQixFQUxxQixFQU12QmdDLElBTnVCLENBTWxCckMsS0FBS3dDLEdBTmEsQ0FBbkIsQ0FBTjtBQVQ4QjtBQWdCOUJ2QyxnQ0FBb0I4RyxVQUFwQixDQUErQkMsU0FBL0IsQ0FBeUNILGdCQUF6QyxFQUEyREMsZ0JBQTNEO0FBQ0Esa0JBQU1WLDhEQUFXLENBQ2IsY0FEYSxFQUViLE9BRmEsRUFHYixNQUhhLEVBSWJoRyxZQUphLEVBS2J5RyxnQkFMYSxDQUFYLENBQU47QUFPQSxrQkFBTUksdUVBQW9CbEgsY0FBYzhCLFNBQWQsQ0FBd0JILGVBQXhCLEVBQXlDMEUsUUFBekMsQ0FBcEIsQ0FBTjtBQXhCOEI7QUF5QjlCLGdCQUFJYSxrQkFBa0JuRixNQUFsQixLQUE2QixDQUFqQyxFQUFvQztBQUFBO0FBQUE7O0FBQ2hDaEIseUJBQVNpQixjQUFULENBQXlCLG1CQUFrQmtGLGtCQUFrQmpGLE1BQWxCLENBQXlCQyxRQUF6QixFQUFvQyxFQUEvRTtBQURnQztBQUVoQyx1QkFBTyxLQUFQO0FBQ0gsYUFIRCxNQUlLO0FBQUE7QUFBQTs7QUFDRG5CLHlCQUFTb0IsZ0JBQVQsQ0FBMEIsb0NBQTFCO0FBREM7QUFFRCx1QkFBTyxJQUFQO0FBQ0g7QUFDSixTQWpDRCxNQWtDSztBQUFBO0FBQUE7O0FBQ0Q7QUFDQSxtQkFBTyxJQUFQO0FBQ0g7QUFDSjtBQUNEYiwrQkFBMkJQLFFBQTNCLEVBQXFDO0FBQUE7O0FBQ2pDLGNBQU1vRyxzRUFBbUIsS0FBS3hHLGlCQUF4QixDQUFOO0FBQ0EsY0FBTXlHLDBFQUF1QixLQUFLM0QsNkJBQUwsRUFBdkIsQ0FBTjtBQUNBLGNBQU1RLHlEQUFNLElBQUlDLElBQUosRUFBTixDQUFOO0FBQ0EsY0FBTW1ELHFFQUFrQnBELElBQUlxRCxPQUFKLEdBQWNwRixRQUFkLEVBQWxCLENBQU47QUFDQSxjQUFNcUYsaUVBQWN4SCxLQUFLdUMsSUFBTCxDQUFVa0YsU0FBVixFQUFxQixJQUFyQixFQUEyQixNQUEzQixDQUFkLENBQU47QUFDQSxjQUFNQyx5RUFBc0IxSCxLQUFLdUMsSUFBTCxDQUFVaUYsV0FBVixFQUF3QixHQUFFRixlQUFnQixNQUExQyxDQUF0QixDQUFOO0FBQ0EsY0FBTUsscUVBQWtCTixxQkFBcUI3RixjQUF2QyxDQUFOO0FBUGlDO0FBUWpDLFlBQUltRyxlQUFKLEVBQXFCO0FBQUE7QUFBQTs7QUFDakJ4SCxnQ0FBb0I4RyxVQUFwQixDQUErQkMsU0FBL0IsQ0FBeUNRLG1CQUF6QyxFQUE4REMsZUFBOUQsRUFBK0U7QUFDM0VDLG9DQUFvQjtBQUR1RCxhQUEvRTtBQUdILFNBSkQ7QUFBQTtBQUFBO0FBUmlDO0FBYWpDLFlBQUksS0FBSzNCLG9CQUFMLENBQTBCeUIsbUJBQTFCLEVBQStDMUcsUUFBL0MsQ0FBSixFQUE4RDtBQUFBO0FBQUE7O0FBQzFEb0csNkJBQWlCbkcsZUFBakIsR0FBbUNvRyxxQkFBcUI3RixjQUF4RDtBQUQwRDtBQUUxRDRGLDZCQUFpQmxHLE9BQWpCLEdBQTJCbUcscUJBQXFCNUYsTUFBaEQ7QUFDQTtBQUgwRDtBQUkxRCxnQkFBSSxDQUFDLEtBQUtnRixtQkFBTCxDQUF5QmlCLG1CQUF6QixFQUE4QzFHLFFBQTlDLENBQUwsRUFBOEQ7QUFBQTtBQUFBOztBQUMxREEseUJBQVNLLGdCQUFULENBQTBCLGlEQUExQjtBQUNILGFBRkQ7QUFBQTtBQUFBO0FBR0gsU0FQRCxNQVFLO0FBQUE7QUFBQTs7QUFDRDtBQUNBK0YsNkJBQWlCbkcsZUFBakIsR0FBbUM2RSxTQUFuQztBQUZDO0FBR0RzQiw2QkFBaUJsRyxPQUFqQixHQUEyQjRFLFNBQTNCO0FBQ0g7QUF6QmdDO0FBMEJqQzNGLDRCQUFvQjhHLFVBQXBCLENBQStCWSxVQUEvQixDQUEwQ0gsbUJBQTFDO0FBQ0g7QUFDRHZHLG9DQUFnQztBQUFBOztBQUM1QixjQUFNRixxRUFBa0IsS0FBS0wsaUJBQUwsQ0FBdUJLLGVBQXpDLENBQU47QUFENEI7QUFFNUIsWUFBSSxDQUFDQSxlQUFMLEVBQXNCO0FBQUE7QUFBQTs7QUFDbEIsbUJBQU8sS0FBUDtBQUNILFNBRkQ7QUFBQTtBQUFBO0FBR0EsY0FBTThDLGlFQUFjakUsTUFBTThELEdBQU4sQ0FBVWtFLGtCQUFWLENBQTZCN0csZUFBN0IsQ0FBZCxDQUFOO0FBTDRCO0FBTTVCLGVBQU8sQ0FBQyxDQUFDOEMsWUFBWWdFLFlBQVosQ0FBeUIsZ0JBQXpCLENBQVQ7QUFDSDtBQW5Ub0I7O0FBcVR6Qm5JLFFBQVFjLGtCQUFSLEdBQTZCQSxrQkFBN0I7QUFDQSIsImZpbGUiOiJDZXJ0aWZpY2F0ZU1hbmFnZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG4vLyBTZWUgTElDRU5TRSBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgZm9yZ2UgPSByZXF1aXJlKFwibm9kZS1mb3JnZVwiKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKFwicGF0aFwiKTtcbmNvbnN0IGNoaWxkX3Byb2Nlc3MgPSByZXF1aXJlKFwiY2hpbGRfcHJvY2Vzc1wiKTtcbmNvbnN0IG9zXzEgPSByZXF1aXJlKFwib3NcIik7XG5jb25zdCBub2RlX2NvcmVfbGlicmFyeV8xID0gcmVxdWlyZShcIkBydXNoc3RhY2svbm9kZS1jb3JlLWxpYnJhcnlcIik7XG5jb25zdCBzdWRvU3luY18xID0gcmVxdWlyZShcIi4vc3Vkb1N5bmNcIik7XG5jb25zdCBDZXJ0aWZpY2F0ZVN0b3JlXzEgPSByZXF1aXJlKFwiLi9DZXJ0aWZpY2F0ZVN0b3JlXCIpO1xuY29uc3Qgc2VyaWFsTnVtYmVyID0gJzczMWMzMjE3NDRlMzQ2NTBhMjAyZTNlZjkxYzNjMWIwJztcbmNvbnN0IGZyaWVuZGx5TmFtZSA9ICdkZWJ1Zy1jZXJ0aWZpY2F0ZS1tYW5hZ2VyIERldmVsb3BtZW50IENlcnRpZmljYXRlJztcbmNvbnN0IG1hY0tleWNoYWluID0gJy9MaWJyYXJ5L0tleWNoYWlucy9TeXN0ZW0ua2V5Y2hhaW4nO1xubGV0IF9jZXJ0dXRpbEV4ZVBhdGg7XG4vKipcbiAqIEEgdXRpbGl0eSBjbGFzcyB0byBoYW5kbGUgZ2VuZXJhdGluZywgdHJ1c3RpbmcsIGFuZCB1bnRydXN0cmluZyBhIGRlYnVnIGNlcnRpZmljYXRlLlxuICogQ29udGFpbnMgdHdvIHB1YmxpYyBtZXRob2RzIHRvIGBlbnN1cmVDZXJ0aWZpY2F0ZWAgYW5kIGB1bnRydXN0Q2VydGlmaWNhdGVgLlxuICogQHB1YmxpY1xuICovXG5jbGFzcyBDZXJ0aWZpY2F0ZU1hbmFnZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLl9jZXJ0aWZpY2F0ZVN0b3JlID0gbmV3IENlcnRpZmljYXRlU3RvcmVfMS5DZXJ0aWZpY2F0ZVN0b3JlKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBhIGRldiBjZXJ0aWZpY2F0ZSBmcm9tIHRoZSBzdG9yZSwgb3Igb3B0aW9uYWxseSwgZ2VuZXJhdGUgYSBuZXcgb25lXG4gICAgICogYW5kIHRydXN0IGl0IGlmIG9uZSBkb2Vzbid0IGV4aXN0IGluIHRoZSBzdG9yZS5cbiAgICAgKlxuICAgICAqIEBwdWJsaWNcbiAgICAgKi9cbiAgICBlbnN1cmVDZXJ0aWZpY2F0ZShjYW5HZW5lcmF0ZU5ld0NlcnRpZmljYXRlLCB0ZXJtaW5hbCkge1xuICAgICAgICBpZiAodGhpcy5fY2VydGlmaWNhdGVTdG9yZS5jZXJ0aWZpY2F0ZURhdGEgJiYgdGhpcy5fY2VydGlmaWNhdGVTdG9yZS5rZXlEYXRhKSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuX2NlcnRpZmljYXRlSGFzU3ViamVjdEFsdE5hbWUoKSkge1xuICAgICAgICAgICAgICAgIGxldCB3YXJuaW5nTWVzc2FnZSA9ICgnVGhlIGV4aXN0aW5nIGRldmVsb3BtZW50IGNlcnRpZmljYXRlIGlzIG1pc3NpbmcgdGhlIHN1YmplY3RBbHROYW1lICcgK1xuICAgICAgICAgICAgICAgICAgICAncHJvcGVydHkgYW5kIHdpbGwgbm90IHdvcmsgd2l0aCB0aGUgbGF0ZXN0IHZlcnNpb25zIG9mIHNvbWUgYnJvd3NlcnMuICcpO1xuICAgICAgICAgICAgICAgIGlmIChjYW5HZW5lcmF0ZU5ld0NlcnRpZmljYXRlKSB7XG4gICAgICAgICAgICAgICAgICAgIHdhcm5pbmdNZXNzYWdlICs9ICcgQXR0ZW1wdGluZyB0byB1bnRydXN0IHRoZSBjZXJ0aWZpY2F0ZSBhbmQgZ2VuZXJhdGUgYSBuZXcgb25lLic7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB3YXJuaW5nTWVzc2FnZSArPSAnIFVudHJ1c3QgdGhlIGNlcnRpZmljYXRlIGFuZCBnZW5lcmF0ZSBhIG5ldyBvbmUuJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGVybWluYWwud3JpdGVXYXJuaW5nTGluZSh3YXJuaW5nTWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgaWYgKGNhbkdlbmVyYXRlTmV3Q2VydGlmaWNhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy51bnRydXN0Q2VydGlmaWNhdGUodGVybWluYWwpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9lbnN1cmVDZXJ0aWZpY2F0ZUludGVybmFsKHRlcm1pbmFsKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoY2FuR2VuZXJhdGVOZXdDZXJ0aWZpY2F0ZSkge1xuICAgICAgICAgICAgdGhpcy5fZW5zdXJlQ2VydGlmaWNhdGVJbnRlcm5hbCh0ZXJtaW5hbCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHBlbUNlcnRpZmljYXRlOiB0aGlzLl9jZXJ0aWZpY2F0ZVN0b3JlLmNlcnRpZmljYXRlRGF0YSxcbiAgICAgICAgICAgIHBlbUtleTogdGhpcy5fY2VydGlmaWNhdGVTdG9yZS5rZXlEYXRhXG4gICAgICAgIH07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEF0dGVtcHQgdG8gbG9jYXRlIGEgcHJldmlvdXNseSBnZW5lcmF0ZWQgZGVidWcgY2VydGlmaWNhdGUgYW5kIHVudHJ1c3QgaXQuXG4gICAgICpcbiAgICAgKiBAcHVibGljXG4gICAgICovXG4gICAgdW50cnVzdENlcnRpZmljYXRlKHRlcm1pbmFsKSB7XG4gICAgICAgIHN3aXRjaCAocHJvY2Vzcy5wbGF0Zm9ybSkge1xuICAgICAgICAgICAgY2FzZSAnd2luMzInOlxuICAgICAgICAgICAgICAgIGNvbnN0IGNlcnR1dGlsRXhlUGF0aCA9IHRoaXMuX2Vuc3VyZUNlcnRVdGlsRXhlUGF0aCh0ZXJtaW5hbCk7XG4gICAgICAgICAgICAgICAgaWYgKCFjZXJ0dXRpbEV4ZVBhdGgpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gVW5hYmxlIHRvIGZpbmQgdGhlIGNlcnQgdXRpbGl0eVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHdpblVudHJ1c3RSZXN1bHQgPSBjaGlsZF9wcm9jZXNzLnNwYXduU3luYyhjZXJ0dXRpbEV4ZVBhdGgsIFsnLXVzZXInLCAnLWRlbHN0b3JlJywgJ3Jvb3QnLCBzZXJpYWxOdW1iZXJdKTtcbiAgICAgICAgICAgICAgICBpZiAod2luVW50cnVzdFJlc3VsdC5zdGF0dXMgIT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgdGVybWluYWwud3JpdGVFcnJvckxpbmUoYEVycm9yOiAke3dpblVudHJ1c3RSZXN1bHQuc3Rkb3V0LnRvU3RyaW5nKCl9YCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlVmVyYm9zZUxpbmUoJ1N1Y2Nlc3NmdWxseSB1bnRydXN0ZWQgZGV2ZWxvcG1lbnQgY2VydGlmaWNhdGUuJyk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgJ2Rhcndpbic6XG4gICAgICAgICAgICAgICAgdGVybWluYWwud3JpdGVWZXJib3NlTGluZSgnVHJ5aW5nIHRvIGZpbmQgdGhlIHNpZ25hdHVyZSBvZiB0aGUgZGV2IGNlcnQnKTtcbiAgICAgICAgICAgICAgICBjb25zdCBtYWNGaW5kQ2VydGlmaWNhdGVSZXN1bHQgPSBjaGlsZF9wcm9jZXNzLnNwYXduU3luYygnc2VjdXJpdHknLCBbJ2ZpbmQtY2VydGlmaWNhdGUnLCAnLWMnLCAnbG9jYWxob3N0JywgJy1hJywgJy1aJywgbWFjS2V5Y2hhaW5dKTtcbiAgICAgICAgICAgICAgICBpZiAobWFjRmluZENlcnRpZmljYXRlUmVzdWx0LnN0YXR1cyAhPT0gMCkge1xuICAgICAgICAgICAgICAgICAgICB0ZXJtaW5hbC53cml0ZUVycm9yTGluZShgRXJyb3IgZmluZGluZyB0aGUgZGV2IGNlcnRpZmljYXRlOiAke21hY0ZpbmRDZXJ0aWZpY2F0ZVJlc3VsdC5vdXRwdXQuam9pbignICcpfWApO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IG91dHB1dExpbmVzID0gbWFjRmluZENlcnRpZmljYXRlUmVzdWx0LnN0ZG91dC50b1N0cmluZygpLnNwbGl0KG9zXzEuRU9MKTtcbiAgICAgICAgICAgICAgICBsZXQgZm91bmQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBsZXQgc2hhSGFzaCA9IFwiXCI7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBvdXRwdXRMaW5lcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBsaW5lID0gb3V0cHV0TGluZXNbaV07XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHNoYU1hdGNoID0gbGluZS5tYXRjaCgvXlNIQS0xIGhhc2g6ICguKykkLyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzaGFNYXRjaCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2hhSGFzaCA9IHNoYU1hdGNoWzFdO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHNuYnJNYXRjaCA9IGxpbmUubWF0Y2goL15cXHMqXCJzbmJyXCI8YmxvYj49MHgoW15cXHNdKykuKyQvKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNuYnJNYXRjaCAmJiAoc25ick1hdGNoWzFdIHx8ICcnKS50b0xvd2VyQ2FzZSgpID09PSBzZXJpYWxOdW1iZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvdW5kID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICghZm91bmQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGVybWluYWwud3JpdGVFcnJvckxpbmUoJ1VuYWJsZSB0byBmaW5kIHRoZSBkZXYgY2VydGlmaWNhdGUuJyk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGVybWluYWwud3JpdGVWZXJib3NlTGluZShgRm91bmQgdGhlIGRldiBjZXJ0LiBTSEEgaXMgJHtzaGFIYXNofWApO1xuICAgICAgICAgICAgICAgIGNvbnN0IG1hY1VudHJ1c3RSZXN1bHQgPSBzdWRvU3luY18xLnJ1blN1ZG9TeW5jKFsnc2VjdXJpdHknLCAnZGVsZXRlLWNlcnRpZmljYXRlJywgJy1aJywgc2hhSGFzaCwgbWFjS2V5Y2hhaW5dKTtcbiAgICAgICAgICAgICAgICBpZiAobWFjVW50cnVzdFJlc3VsdC5jb2RlID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlVmVyYm9zZUxpbmUoJ1N1Y2Nlc3NmdWxseSB1bnRydXN0ZWQgZGV2IGNlcnRpZmljYXRlLicpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlRXJyb3JMaW5lKG1hY1VudHJ1c3RSZXN1bHQuc3RkZXJyLmpvaW4oJyAnKSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIC8vIExpbnV4ICsgb3RoZXJzOiBIYXZlIHRoZSB1c2VyIG1hbnVhbGx5IHVudHJ1c3QgdGhlIGNlcnRcbiAgICAgICAgICAgICAgICB0ZXJtaW5hbC53cml0ZUxpbmUoJ0F1dG9tYXRpYyBjZXJ0aWZpY2F0ZSB1bnRydXN0IGlzIG9ubHkgaW1wbGVtZW50ZWQgZm9yIGRlYnVnLWNlcnRpZmljYXRlLW1hbmFnZXIgb24gV2luZG93cyAnICtcbiAgICAgICAgICAgICAgICAgICAgJ2FuZCBtYWNPUy4gVG8gdW50cnVzdCB0aGUgZGV2ZWxvcG1lbnQgY2VydGlmaWNhdGUsIHJlbW92ZSB0aGlzIGNlcnRpZmljYXRlIGZyb20geW91ciB0cnVzdGVkICcgK1xuICAgICAgICAgICAgICAgICAgICBgcm9vdCBjZXJ0aWZpY2F0aW9uIGF1dGhvcml0aWVzOiBcIiR7dGhpcy5fY2VydGlmaWNhdGVTdG9yZS5jZXJ0aWZpY2F0ZVBhdGh9XCIuIFRoZSBgICtcbiAgICAgICAgICAgICAgICAgICAgYGNlcnRpZmljYXRlIGhhcyBzZXJpYWwgbnVtYmVyIFwiJHtzZXJpYWxOdW1iZXJ9XCIuYCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIF9jcmVhdGVEZXZlbG9wbWVudENlcnRpZmljYXRlKCkge1xuICAgICAgICBjb25zdCBrZXlzID0gZm9yZ2UucGtpLnJzYS5nZW5lcmF0ZUtleVBhaXIoMjA0OCk7XG4gICAgICAgIGNvbnN0IGNlcnRpZmljYXRlID0gZm9yZ2UucGtpLmNyZWF0ZUNlcnRpZmljYXRlKCk7XG4gICAgICAgIGNlcnRpZmljYXRlLnB1YmxpY0tleSA9IGtleXMucHVibGljS2V5O1xuICAgICAgICBjZXJ0aWZpY2F0ZS5zZXJpYWxOdW1iZXIgPSBzZXJpYWxOdW1iZXI7XG4gICAgICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7XG4gICAgICAgIGNlcnRpZmljYXRlLnZhbGlkaXR5Lm5vdEJlZm9yZSA9IG5vdztcbiAgICAgICAgLy8gVmFsaWQgZm9yIDMgeWVhcnNcbiAgICAgICAgY2VydGlmaWNhdGUudmFsaWRpdHkubm90QWZ0ZXIuc2V0RnVsbFllYXIoY2VydGlmaWNhdGUudmFsaWRpdHkubm90QmVmb3JlLmdldEZ1bGxZZWFyKCkgKyAzKTtcbiAgICAgICAgY29uc3QgYXR0cnMgPSBbe1xuICAgICAgICAgICAgICAgIG5hbWU6ICdjb21tb25OYW1lJyxcbiAgICAgICAgICAgICAgICB2YWx1ZTogJ2xvY2FsaG9zdCdcbiAgICAgICAgICAgIH1dO1xuICAgICAgICBjZXJ0aWZpY2F0ZS5zZXRTdWJqZWN0KGF0dHJzKTtcbiAgICAgICAgY2VydGlmaWNhdGUuc2V0SXNzdWVyKGF0dHJzKTtcbiAgICAgICAgY2VydGlmaWNhdGUuc2V0RXh0ZW5zaW9ucyhbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ3N1YmplY3RBbHROYW1lJyxcbiAgICAgICAgICAgICAgICBhbHROYW1lczogW3tcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IDIsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ2xvY2FsaG9zdCdcbiAgICAgICAgICAgICAgICAgICAgfV1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ2tleVVzYWdlJyxcbiAgICAgICAgICAgICAgICBkaWdpdGFsU2lnbmF0dXJlOiB0cnVlLFxuICAgICAgICAgICAgICAgIGtleUVuY2lwaGVybWVudDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBkYXRhRW5jaXBoZXJtZW50OiB0cnVlXG4gICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ2V4dEtleVVzYWdlJyxcbiAgICAgICAgICAgICAgICBzZXJ2ZXJBdXRoOiB0cnVlXG4gICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ2ZyaWVuZGx5TmFtZScsXG4gICAgICAgICAgICAgICAgdmFsdWU6IGZyaWVuZGx5TmFtZVxuICAgICAgICAgICAgfVxuICAgICAgICBdKTtcbiAgICAgICAgLy8gc2VsZi1zaWduIGNlcnRpZmljYXRlXG4gICAgICAgIGNlcnRpZmljYXRlLnNpZ24oa2V5cy5wcml2YXRlS2V5LCBmb3JnZS5tZC5zaGEyNTYuY3JlYXRlKCkpO1xuICAgICAgICAvLyBjb252ZXJ0IGEgRm9yZ2UgY2VydGlmaWNhdGUgdG8gUEVNXG4gICAgICAgIGNvbnN0IHBlbSA9IGZvcmdlLnBraS5jZXJ0aWZpY2F0ZVRvUGVtKGNlcnRpZmljYXRlKTtcbiAgICAgICAgY29uc3QgcGVtS2V5ID0gZm9yZ2UucGtpLnByaXZhdGVLZXlUb1BlbShrZXlzLnByaXZhdGVLZXkpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcGVtQ2VydGlmaWNhdGU6IHBlbSxcbiAgICAgICAgICAgIHBlbUtleTogcGVtS2V5XG4gICAgICAgIH07XG4gICAgfVxuICAgIF9lbnN1cmVDZXJ0VXRpbEV4ZVBhdGgodGVybWluYWwpIHtcbiAgICAgICAgaWYgKCFfY2VydHV0aWxFeGVQYXRoKSB7XG4gICAgICAgICAgICBjb25zdCB3aGVyZSA9IGNoaWxkX3Byb2Nlc3Muc3Bhd25TeW5jKCd3aGVyZScsIFsnY2VydHV0aWwnXSk7XG4gICAgICAgICAgICBjb25zdCB3aGVyZUVyciA9IHdoZXJlLnN0ZGVyci50b1N0cmluZygpO1xuICAgICAgICAgICAgaWYgKHdoZXJlRXJyKSB7XG4gICAgICAgICAgICAgICAgdGVybWluYWwud3JpdGVFcnJvckxpbmUoYEVycm9yIGZpbmRpbmcgY2VydFV0aWwgY29tbWFuZDogXCIke3doZXJlRXJyfVwiYCk7XG4gICAgICAgICAgICAgICAgX2NlcnR1dGlsRXhlUGF0aCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnN0IGxpbmVzID0gd2hlcmUuc3Rkb3V0LnRvU3RyaW5nKCkudHJpbSgpLnNwbGl0KG9zXzEuRU9MKTtcbiAgICAgICAgICAgICAgICBfY2VydHV0aWxFeGVQYXRoID0gbGluZXNbMF0udHJpbSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfY2VydHV0aWxFeGVQYXRoO1xuICAgIH1cbiAgICBfdHJ5VHJ1c3RDZXJ0aWZpY2F0ZShjZXJ0aWZpY2F0ZVBhdGgsIHRlcm1pbmFsKSB7XG4gICAgICAgIHN3aXRjaCAocHJvY2Vzcy5wbGF0Zm9ybSkge1xuICAgICAgICAgICAgY2FzZSAnd2luMzInOlxuICAgICAgICAgICAgICAgIGNvbnN0IGNlcnR1dGlsRXhlUGF0aCA9IHRoaXMuX2Vuc3VyZUNlcnRVdGlsRXhlUGF0aCh0ZXJtaW5hbCk7XG4gICAgICAgICAgICAgICAgaWYgKCFjZXJ0dXRpbEV4ZVBhdGgpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gVW5hYmxlIHRvIGZpbmQgdGhlIGNlcnQgdXRpbGl0eVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlTGluZSgnQXR0ZW1wdGluZyB0byB0cnVzdCBhIGRldiBjZXJ0aWZpY2F0ZS4gVGhpcyBzZWxmLXNpZ25lZCBjZXJ0aWZpY2F0ZSBvbmx5IHBvaW50cyB0byBsb2NhbGhvc3QgJyArXG4gICAgICAgICAgICAgICAgICAgICdhbmQgd2lsbCBiZSBzdG9yZWQgaW4geW91ciBsb2NhbCB1c2VyIHByb2ZpbGUgdG8gYmUgdXNlZCBieSBvdGhlciBpbnN0YW5jZXMgb2YgJyArXG4gICAgICAgICAgICAgICAgICAgICdkZWJ1Zy1jZXJ0aWZpY2F0ZS1tYW5hZ2VyLiBJZiB5b3UgZG8gbm90IGNvbnNlbnQgdG8gdHJ1c3QgdGhpcyBjZXJ0aWZpY2F0ZSwgY2xpY2sgXCJOT1wiIGluIHRoZSBkaWFsb2cuJyk7XG4gICAgICAgICAgICAgICAgY29uc3Qgd2luVHJ1c3RSZXN1bHQgPSBjaGlsZF9wcm9jZXNzLnNwYXduU3luYyhjZXJ0dXRpbEV4ZVBhdGgsIFsnLXVzZXInLCAnLWFkZHN0b3JlJywgJ3Jvb3QnLCBjZXJ0aWZpY2F0ZVBhdGhdKTtcbiAgICAgICAgICAgICAgICBpZiAod2luVHJ1c3RSZXN1bHQuc3RhdHVzICE9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlRXJyb3JMaW5lKGBFcnJvcjogJHt3aW5UcnVzdFJlc3VsdC5zdGRvdXQudG9TdHJpbmcoKX1gKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZXJyb3JMaW5lcyA9IHdpblRydXN0UmVzdWx0LnN0ZG91dC50b1N0cmluZygpLnNwbGl0KG9zXzEuRU9MKS5tYXAoKGxpbmUpID0+IGxpbmUudHJpbSgpKTtcbiAgICAgICAgICAgICAgICAgICAgLy8gTm90IHN1cmUgaWYgdGhpcyBpcyBhbHdheXMgdGhlIHN0YXR1cyBjb2RlIGZvciBcImNhbmNlbGxlZFwiIC0gc2hvdWxkIGNvbmZpcm0uXG4gICAgICAgICAgICAgICAgICAgIGlmICh3aW5UcnVzdFJlc3VsdC5zdGF0dXMgPT09IDIxNDc5NDM2MjMgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yTGluZXNbZXJyb3JMaW5lcy5sZW5ndGggLSAxXS5pbmRleE9mKCdUaGUgb3BlcmF0aW9uIHdhcyBjYW5jZWxlZCBieSB0aGUgdXNlci4nKSA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlTGluZSgnQ2VydGlmaWNhdGUgdHJ1c3QgY2FuY2VsbGVkLicpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGVybWluYWwud3JpdGVFcnJvckxpbmUoJ0NlcnRpZmljYXRlIHRydXN0IGZhaWxlZCB3aXRoIGFuIHVua25vd24gZXJyb3IuJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGVybWluYWwud3JpdGVWZXJib3NlTGluZSgnU3VjY2Vzc2Z1bGx5IHRydXN0ZWQgZGV2ZWxvcG1lbnQgY2VydGlmaWNhdGUuJyk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgJ2Rhcndpbic6XG4gICAgICAgICAgICAgICAgdGVybWluYWwud3JpdGVMaW5lKCdBdHRlbXB0aW5nIHRvIHRydXN0IGEgZGV2IGNlcnRpZmljYXRlLiBUaGlzIHNlbGYtc2lnbmVkIGNlcnRpZmljYXRlIG9ubHkgcG9pbnRzIHRvIGxvY2FsaG9zdCAnICtcbiAgICAgICAgICAgICAgICAgICAgJ2FuZCB3aWxsIGJlIHN0b3JlZCBpbiB5b3VyIGxvY2FsIHVzZXIgcHJvZmlsZSB0byBiZSB1c2VkIGJ5IG90aGVyIGluc3RhbmNlcyBvZiAnICtcbiAgICAgICAgICAgICAgICAgICAgJ2RlYnVnLWNlcnRpZmljYXRlLW1hbmFnZXIuIElmIHlvdSBkbyBub3QgY29uc2VudCB0byB0cnVzdCB0aGlzIGNlcnRpZmljYXRlLCBkbyBub3QgZW50ZXIgeW91ciAnICtcbiAgICAgICAgICAgICAgICAgICAgJ3Jvb3QgcGFzc3dvcmQgaW4gdGhlIHByb21wdC4nKTtcbiAgICAgICAgICAgICAgICBjb25zdCBjb21tYW5kcyA9IFtcbiAgICAgICAgICAgICAgICAgICAgJ3NlY3VyaXR5JyxcbiAgICAgICAgICAgICAgICAgICAgJ2FkZC10cnVzdGVkLWNlcnQnLFxuICAgICAgICAgICAgICAgICAgICAnLWQnLFxuICAgICAgICAgICAgICAgICAgICAnLXInLFxuICAgICAgICAgICAgICAgICAgICAndHJ1c3RSb290JyxcbiAgICAgICAgICAgICAgICAgICAgJy1rJyxcbiAgICAgICAgICAgICAgICAgICAgbWFjS2V5Y2hhaW4sXG4gICAgICAgICAgICAgICAgICAgIGNlcnRpZmljYXRlUGF0aFxuICAgICAgICAgICAgICAgIF07XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gc3Vkb1N5bmNfMS5ydW5TdWRvU3luYyhjb21tYW5kcyk7XG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5jb2RlID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlVmVyYm9zZUxpbmUoJ1N1Y2Nlc3NmdWxseSB0cnVzdGVkIGRldmVsb3BtZW50IGNlcnRpZmljYXRlLicpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQuc3RkZXJyLnNvbWUoKHZhbHVlKSA9PiAhIXZhbHVlLm1hdGNoKC9UaGUgYXV0aG9yaXphdGlvbiB3YXMgY2FuY2VsbGVkIGJ5IHRoZSB1c2VyXFwuLykpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXJtaW5hbC53cml0ZUxpbmUoJ0NlcnRpZmljYXRlIHRydXN0IGNhbmNlbGxlZC4nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlRXJyb3JMaW5lKGBDZXJ0aWZpY2F0ZSB0cnVzdCBmYWlsZWQgd2l0aCBhbiB1bmtub3duIGVycm9yLiBFeGl0IGNvZGU6ICR7cmVzdWx0LmNvZGV9LiBgICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBgRXJyb3I6ICR7cmVzdWx0LnN0ZGVyci5qb2luKCcgJyl9YCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIC8vIExpbnV4ICsgb3RoZXJzOiBIYXZlIHRoZSB1c2VyIG1hbnVhbGx5IHRydXN0IHRoZSBjZXJ0IGlmIHRoZXkgd2FudCB0b1xuICAgICAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlTGluZSgnQXV0b21hdGljIGNlcnRpZmljYXRlIHRydXN0IGlzIG9ubHkgaW1wbGVtZW50ZWQgZm9yIGRlYnVnLWNlcnRpZmljYXRlLW1hbmFnZXIgb24gV2luZG93cyAnICtcbiAgICAgICAgICAgICAgICAgICAgJ2FuZCBtYWNPUy4gVG8gdHJ1c3QgdGhlIGRldmVsb3BtZW50IGNlcnRpZmljYXRlLCBhZGQgdGhpcyBjZXJ0aWZpY2F0ZSB0byB5b3VyIHRydXN0ZWQgcm9vdCAnICtcbiAgICAgICAgICAgICAgICAgICAgYGNlcnRpZmljYXRpb24gYXV0aG9yaXRpZXM6IFwiJHtjZXJ0aWZpY2F0ZVBhdGh9XCIuYCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgX3RyeVNldEZyaWVuZGx5TmFtZShjZXJ0aWZpY2F0ZVBhdGgsIHRlcm1pbmFsKSB7XG4gICAgICAgIGlmIChwcm9jZXNzLnBsYXRmb3JtID09PSAnd2luMzInKSB7XG4gICAgICAgICAgICBjb25zdCBjZXJ0dXRpbEV4ZVBhdGggPSB0aGlzLl9lbnN1cmVDZXJ0VXRpbEV4ZVBhdGgodGVybWluYWwpO1xuICAgICAgICAgICAgaWYgKCFjZXJ0dXRpbEV4ZVBhdGgpIHtcbiAgICAgICAgICAgICAgICAvLyBVbmFibGUgdG8gZmluZCB0aGUgY2VydCB1dGlsaXR5XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgYmFzZVBhdGggPSBwYXRoLmRpcm5hbWUoY2VydGlmaWNhdGVQYXRoKTtcbiAgICAgICAgICAgIGNvbnN0IGZpbGVOYW1lID0gcGF0aC5iYXNlbmFtZShjZXJ0aWZpY2F0ZVBhdGgsIHBhdGguZXh0bmFtZShjZXJ0aWZpY2F0ZVBhdGgpKTtcbiAgICAgICAgICAgIGNvbnN0IGZyaWVuZGx5TmFtZVBhdGggPSBwYXRoLmpvaW4oYmFzZVBhdGgsIGAke2ZpbGVOYW1lfS5pbmZgKTtcbiAgICAgICAgICAgIGNvbnN0IGZyaWVuZGx5TmFtZUZpbGUgPSBbXG4gICAgICAgICAgICAgICAgJ1tWZXJzaW9uXScsXG4gICAgICAgICAgICAgICAgJ1NpZ25hdHVyZSA9IFwiJFdpbmRvd3MgTlQkXCInLFxuICAgICAgICAgICAgICAgICdbUHJvcGVydGllc10nLFxuICAgICAgICAgICAgICAgIGAxMSA9IFwie3RleHR9JHtmcmllbmRseU5hbWV9XCJgLFxuICAgICAgICAgICAgICAgICcnXG4gICAgICAgICAgICBdLmpvaW4ob3NfMS5FT0wpO1xuICAgICAgICAgICAgbm9kZV9jb3JlX2xpYnJhcnlfMS5GaWxlU3lzdGVtLndyaXRlRmlsZShmcmllbmRseU5hbWVQYXRoLCBmcmllbmRseU5hbWVGaWxlKTtcbiAgICAgICAgICAgIGNvbnN0IGNvbW1hbmRzID0gW1xuICAgICAgICAgICAgICAgICfigJNyZXBhaXJzdG9yZScsXG4gICAgICAgICAgICAgICAgJ+KAk3VzZXInLFxuICAgICAgICAgICAgICAgICdyb290JyxcbiAgICAgICAgICAgICAgICBzZXJpYWxOdW1iZXIsXG4gICAgICAgICAgICAgICAgZnJpZW5kbHlOYW1lUGF0aFxuICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIGNvbnN0IHJlcGFpclN0b3JlUmVzdWx0ID0gY2hpbGRfcHJvY2Vzcy5zcGF3blN5bmMoY2VydHV0aWxFeGVQYXRoLCBjb21tYW5kcyk7XG4gICAgICAgICAgICBpZiAocmVwYWlyU3RvcmVSZXN1bHQuc3RhdHVzICE9PSAwKSB7XG4gICAgICAgICAgICAgICAgdGVybWluYWwud3JpdGVFcnJvckxpbmUoYENlcnRVdGlsIEVycm9yOiAke3JlcGFpclN0b3JlUmVzdWx0LnN0ZG91dC50b1N0cmluZygpfWApO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlVmVyYm9zZUxpbmUoJ1N1Y2Nlc3NmdWxseSBzZXQgY2VydGlmaWNhdGUgbmFtZS4nKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIE5vIGVxdWl2YWxlbnQgY29uY2VwdCBvdXRzaWRlIG9mIFdpbmRvd3NcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIF9lbnN1cmVDZXJ0aWZpY2F0ZUludGVybmFsKHRlcm1pbmFsKSB7XG4gICAgICAgIGNvbnN0IGNlcnRpZmljYXRlU3RvcmUgPSB0aGlzLl9jZXJ0aWZpY2F0ZVN0b3JlO1xuICAgICAgICBjb25zdCBnZW5lcmF0ZWRDZXJ0aWZpY2F0ZSA9IHRoaXMuX2NyZWF0ZURldmVsb3BtZW50Q2VydGlmaWNhdGUoKTtcbiAgICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTtcbiAgICAgICAgY29uc3QgY2VydGlmaWNhdGVOYW1lID0gbm93LmdldFRpbWUoKS50b1N0cmluZygpO1xuICAgICAgICBjb25zdCB0ZW1wRGlyTmFtZSA9IHBhdGguam9pbihfX2Rpcm5hbWUsICcuLicsICd0ZW1wJyk7XG4gICAgICAgIGNvbnN0IHRlbXBDZXJ0aWZpY2F0ZVBhdGggPSBwYXRoLmpvaW4odGVtcERpck5hbWUsIGAke2NlcnRpZmljYXRlTmFtZX0ucGVtYCk7XG4gICAgICAgIGNvbnN0IHBlbUZpbGVDb250ZW50cyA9IGdlbmVyYXRlZENlcnRpZmljYXRlLnBlbUNlcnRpZmljYXRlO1xuICAgICAgICBpZiAocGVtRmlsZUNvbnRlbnRzKSB7XG4gICAgICAgICAgICBub2RlX2NvcmVfbGlicmFyeV8xLkZpbGVTeXN0ZW0ud3JpdGVGaWxlKHRlbXBDZXJ0aWZpY2F0ZVBhdGgsIHBlbUZpbGVDb250ZW50cywge1xuICAgICAgICAgICAgICAgIGVuc3VyZUZvbGRlckV4aXN0czogdHJ1ZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuX3RyeVRydXN0Q2VydGlmaWNhdGUodGVtcENlcnRpZmljYXRlUGF0aCwgdGVybWluYWwpKSB7XG4gICAgICAgICAgICBjZXJ0aWZpY2F0ZVN0b3JlLmNlcnRpZmljYXRlRGF0YSA9IGdlbmVyYXRlZENlcnRpZmljYXRlLnBlbUNlcnRpZmljYXRlO1xuICAgICAgICAgICAgY2VydGlmaWNhdGVTdG9yZS5rZXlEYXRhID0gZ2VuZXJhdGVkQ2VydGlmaWNhdGUucGVtS2V5O1xuICAgICAgICAgICAgLy8gVHJ5IHRvIHNldCB0aGUgZnJpZW5kbHkgbmFtZSwgYW5kIHdhcm4gaWYgd2UgY2FuJ3RcbiAgICAgICAgICAgIGlmICghdGhpcy5fdHJ5U2V0RnJpZW5kbHlOYW1lKHRlbXBDZXJ0aWZpY2F0ZVBhdGgsIHRlcm1pbmFsKSkge1xuICAgICAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlV2FybmluZ0xpbmUoJ1VuYWJsZSB0byBzZXQgdGhlIGNlcnRpZmljYXRlXFwncyBmcmllbmRseSBuYW1lLicpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgLy8gQ2xlYXIgb3V0IHRoZSBleGlzdGluZyBzdG9yZSBkYXRhLCBpZiBhbnkgZXhpc3RzXG4gICAgICAgICAgICBjZXJ0aWZpY2F0ZVN0b3JlLmNlcnRpZmljYXRlRGF0YSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIGNlcnRpZmljYXRlU3RvcmUua2V5RGF0YSA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICBub2RlX2NvcmVfbGlicmFyeV8xLkZpbGVTeXN0ZW0uZGVsZXRlRmlsZSh0ZW1wQ2VydGlmaWNhdGVQYXRoKTtcbiAgICB9XG4gICAgX2NlcnRpZmljYXRlSGFzU3ViamVjdEFsdE5hbWUoKSB7XG4gICAgICAgIGNvbnN0IGNlcnRpZmljYXRlRGF0YSA9IHRoaXMuX2NlcnRpZmljYXRlU3RvcmUuY2VydGlmaWNhdGVEYXRhO1xuICAgICAgICBpZiAoIWNlcnRpZmljYXRlRGF0YSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNlcnRpZmljYXRlID0gZm9yZ2UucGtpLmNlcnRpZmljYXRlRnJvbVBlbShjZXJ0aWZpY2F0ZURhdGEpO1xuICAgICAgICByZXR1cm4gISFjZXJ0aWZpY2F0ZS5nZXRFeHRlbnNpb24oJ3N1YmplY3RBbHROYW1lJyk7XG4gICAgfVxufVxuZXhwb3J0cy5DZXJ0aWZpY2F0ZU1hbmFnZXIgPSBDZXJ0aWZpY2F0ZU1hbmFnZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DZXJ0aWZpY2F0ZU1hbmFnZXIuanMubWFwIl19