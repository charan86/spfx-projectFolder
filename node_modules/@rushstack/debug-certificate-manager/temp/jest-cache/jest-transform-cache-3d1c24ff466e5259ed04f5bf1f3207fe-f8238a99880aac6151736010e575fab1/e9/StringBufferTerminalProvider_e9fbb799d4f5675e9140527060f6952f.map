{"version":3,"sources":["StringBufferTerminalProvider.js"],"names":["Object","defineProperty","exports","value","ITerminalProvider_1","require","StringBuilder_1","Text_1","StringBufferTerminalProvider","constructor","supportsColor","_standardBuffer","StringBuilder","_verboseBuffer","_warningBuffer","_errorBuffer","_supportsColor","write","data","severity","TerminalProviderSeverity","warning","append","error","verbose","log","eolCharacter","getOutput","_normalizeOutput","toString","getVerbose","getErrorOutput","getWarningOutput","s","Text","convertToLf","replace"],"mappings":"AAAA;AACA;AACA;;AACAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,MAAMC,sBAAsBC,QAAQ,qBAAR,CAA5B;AACA,MAAMC,kBAAkBD,QAAQ,kBAAR,CAAxB;AACA,MAAME,SAASF,QAAQ,SAAR,CAAf;AACA;;;;;;;AAOA,MAAMG,4BAAN,CAAmC;AAC/BC,gBAAYC,gBAAgB,KAA5B,EAAmC;AAC/B,aAAKC,eAAL,GAAuB,IAAIL,gBAAgBM,aAApB,EAAvB;AACA,aAAKC,cAAL,GAAsB,IAAIP,gBAAgBM,aAApB,EAAtB;AACA,aAAKE,cAAL,GAAsB,IAAIR,gBAAgBM,aAApB,EAAtB;AACA,aAAKG,YAAL,GAAoB,IAAIT,gBAAgBM,aAApB,EAApB;AACA,aAAKI,cAAL,GAAsBN,aAAtB;AACH;AACD;;;AAGAO,UAAMC,IAAN,EAAYC,QAAZ,EAAsB;AAClB,gBAAQA,QAAR;AACI,iBAAKf,oBAAoBgB,wBAApB,CAA6CC,OAAlD;AAA2D;AACvD,yBAAKP,cAAL,CAAoBQ,MAApB,CAA2BJ,IAA3B;AACA;AACH;AACD,iBAAKd,oBAAoBgB,wBAApB,CAA6CG,KAAlD;AAAyD;AACrD,yBAAKR,YAAL,CAAkBO,MAAlB,CAAyBJ,IAAzB;AACA;AACH;AACD,iBAAKd,oBAAoBgB,wBAApB,CAA6CI,OAAlD;AAA2D;AACvD,yBAAKX,cAAL,CAAoBS,MAApB,CAA2BJ,IAA3B;AACA;AACH;AACD,iBAAKd,oBAAoBgB,wBAApB,CAA6CK,GAAlD;AACA;AAAS;AACL,yBAAKd,eAAL,CAAqBW,MAArB,CAA4BJ,IAA5B;AACA;AACH;AAjBL;AAmBH;AACD;;;AAGA,QAAIQ,YAAJ,GAAmB;AACf,eAAO,KAAP;AACH;AACD;;;AAGA,QAAIhB,aAAJ,GAAoB;AAChB,eAAO,KAAKM,cAAZ;AACH;AACD;;;AAGAW,gBAAY;AACR,eAAO,KAAKC,gBAAL,CAAsB,KAAKjB,eAAL,CAAqBkB,QAArB,EAAtB,CAAP;AACH;AACD;;;AAGAC,iBAAa;AACT,eAAO,KAAKF,gBAAL,CAAsB,KAAKf,cAAL,CAAoBgB,QAApB,EAAtB,CAAP;AACH;AACD;;;AAGAE,qBAAiB;AACb,eAAO,KAAKH,gBAAL,CAAsB,KAAKb,YAAL,CAAkBc,QAAlB,EAAtB,CAAP;AACH;AACD;;;AAGAG,uBAAmB;AACf,eAAO,KAAKJ,gBAAL,CAAsB,KAAKd,cAAL,CAAoBe,QAApB,EAAtB,CAAP;AACH;AACDD,qBAAiBK,CAAjB,EAAoB;AAChB,eAAO1B,OAAO2B,IAAP,CAAYC,WAAZ,CAAwBF,CAAxB,EACFG,OADE,CACM,SADN,EACiB,KADjB,EACwB;AADxB,SAEFA,OAFE,CAEM,KAFN,EAEa,OAFb,EAGFA,OAHE,CAGM,KAHN,EAGa,OAHb,CAAP;AAIH;AAzE8B;AA2EnClC,QAAQM,4BAAR,GAAuCA,4BAAvC;AACA","file":"StringBufferTerminalProvider.js","sourcesContent":["\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ITerminalProvider_1 = require(\"./ITerminalProvider\");\nconst StringBuilder_1 = require(\"../StringBuilder\");\nconst Text_1 = require(\"../Text\");\n/**\n * Terminal provider that stores written data in buffers separated by severity.\n * This terminal provider is designed to be used when code that prints to a terminal\n * is being unit tested.\n *\n * @beta\n */\nclass StringBufferTerminalProvider {\n    constructor(supportsColor = false) {\n        this._standardBuffer = new StringBuilder_1.StringBuilder();\n        this._verboseBuffer = new StringBuilder_1.StringBuilder();\n        this._warningBuffer = new StringBuilder_1.StringBuilder();\n        this._errorBuffer = new StringBuilder_1.StringBuilder();\n        this._supportsColor = supportsColor;\n    }\n    /**\n     * {@inheritDoc ITerminalProvider.write}\n     */\n    write(data, severity) {\n        switch (severity) {\n            case ITerminalProvider_1.TerminalProviderSeverity.warning: {\n                this._warningBuffer.append(data);\n                break;\n            }\n            case ITerminalProvider_1.TerminalProviderSeverity.error: {\n                this._errorBuffer.append(data);\n                break;\n            }\n            case ITerminalProvider_1.TerminalProviderSeverity.verbose: {\n                this._verboseBuffer.append(data);\n                break;\n            }\n            case ITerminalProvider_1.TerminalProviderSeverity.log:\n            default: {\n                this._standardBuffer.append(data);\n                break;\n            }\n        }\n    }\n    /**\n     * {@inheritDoc ITerminalProvider.eolCharacter}\n     */\n    get eolCharacter() {\n        return '[n]';\n    }\n    /**\n     * {@inheritDoc ITerminalProvider.supportsColor}\n     */\n    get supportsColor() {\n        return this._supportsColor;\n    }\n    /**\n     * Get everything that has been written at log-level severity.\n     */\n    getOutput() {\n        return this._normalizeOutput(this._standardBuffer.toString());\n    }\n    /**\n     * Get everything that has been written at verbose-level severity.\n     */\n    getVerbose() {\n        return this._normalizeOutput(this._verboseBuffer.toString());\n    }\n    /**\n     * Get everything that has been written at error-level severity.\n     */\n    getErrorOutput() {\n        return this._normalizeOutput(this._errorBuffer.toString());\n    }\n    /**\n     * Get everything that has been written at warning-level severity.\n     */\n    getWarningOutput() {\n        return this._normalizeOutput(this._warningBuffer.toString());\n    }\n    _normalizeOutput(s) {\n        return Text_1.Text.convertToLf(s)\n            .replace(/\\u001b/g, '[x]') // eslint-disable-line no-control-regex\n            .replace(/\\n/g, '[-n-]')\n            .replace(/\\r/g, '[-r-]');\n    }\n}\nexports.StringBufferTerminalProvider = StringBufferTerminalProvider;\n//# sourceMappingURL=StringBufferTerminalProvider.js.map"]}