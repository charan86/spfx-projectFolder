c2a152a4caccf2972637d47465103a0e
"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.

/* istanbul ignore next */var cov_1pqjdq55xm = function () {
    var path = "/home/vsts/work/1/s/libraries/debug-certificate-manager/lib/sudoSync.js",
        hash = "c6cd7082c3dc31f09b7f169f20ccebed33d27f30",
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = "__coverage__",
        coverageData = {
        path: "/home/vsts/work/1/s/libraries/debug-certificate-manager/lib/sudoSync.js",
        statementMap: {
            "0": {
                start: {
                    line: 4,
                    column: 0
                },
                end: {
                    line: 4,
                    column: 62
                }
            },
            "1": {
                start: {
                    line: 6,
                    column: 13
                },
                end: {
                    line: 6,
                    column: 28
                }
            },
            "2": {
                start: {
                    line: 8,
                    column: 16
                },
                end: {
                    line: 8,
                    column: 34
                }
            },
            "3": {
                start: {
                    line: 10,
                    column: 23
                },
                end: {
                    line: 13,
                    column: 6
                }
            },
            "4": {
                start: {
                    line: 14,
                    column: 19
                },
                end: {
                    line: 14,
                    column: 21
                }
            },
            "5": {
                start: {
                    line: 15,
                    column: 4
                },
                end: {
                    line: 17,
                    column: 7
                }
            },
            "6": {
                start: {
                    line: 16,
                    column: 8
                },
                end: {
                    line: 16,
                    column: 37
                }
            },
            "7": {
                start: {
                    line: 18,
                    column: 19
                },
                end: {
                    line: 18,
                    column: 21
                }
            },
            "8": {
                start: {
                    line: 19,
                    column: 4
                },
                end: {
                    line: 21,
                    column: 7
                }
            },
            "9": {
                start: {
                    line: 20,
                    column: 8
                },
                end: {
                    line: 20,
                    column: 37
                }
            },
            "10": {
                start: {
                    line: 23,
                    column: 4
                },
                end: {
                    line: 25,
                    column: 7
                }
            },
            "11": {
                start: {
                    line: 24,
                    column: 8
                },
                end: {
                    line: 24,
                    column: 24
                }
            },
            "12": {
                start: {
                    line: 28,
                    column: 4
                },
                end: {
                    line: 30,
                    column: 5
                }
            },
            "13": {
                start: {
                    line: 29,
                    column: 8
                },
                end: {
                    line: 29,
                    column: 27
                }
            },
            "14": {
                start: {
                    line: 31,
                    column: 4
                },
                end: {
                    line: 31,
                    column: 36
                }
            },
            "15": {
                start: {
                    line: 33,
                    column: 0
                },
                end: {
                    line: 33,
                    column: 34
                }
            }
        },
        fnMap: {
            "0": {
                name: "runSudoSync",
                decl: {
                    start: {
                        line: 9,
                        column: 9
                    },
                    end: {
                        line: 9,
                        column: 20
                    }
                },
                loc: {
                    start: {
                        line: 9,
                        column: 29
                    },
                    end: {
                        line: 32,
                        column: 1
                    }
                },
                line: 9
            },
            "1": {
                name: "(anonymous_1)",
                decl: {
                    start: {
                        line: 15,
                        column: 33
                    },
                    end: {
                        line: 15,
                        column: 34
                    }
                },
                loc: {
                    start: {
                        line: 15,
                        column: 43
                    },
                    end: {
                        line: 17,
                        column: 5
                    }
                },
                line: 15
            },
            "2": {
                name: "(anonymous_2)",
                decl: {
                    start: {
                        line: 19,
                        column: 33
                    },
                    end: {
                        line: 19,
                        column: 34
                    }
                },
                loc: {
                    start: {
                        line: 19,
                        column: 43
                    },
                    end: {
                        line: 21,
                        column: 5
                    }
                },
                line: 19
            },
            "3": {
                name: "(anonymous_3)",
                decl: {
                    start: {
                        line: 23,
                        column: 27
                    },
                    end: {
                        line: 23,
                        column: 28
                    }
                },
                loc: {
                    start: {
                        line: 23,
                        column: 41
                    },
                    end: {
                        line: 25,
                        column: 5
                    }
                },
                line: 23
            }
        },
        branchMap: {},
        s: {
            "0": 0,
            "1": 0,
            "2": 0,
            "3": 0,
            "4": 0,
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0
        },
        f: {
            "0": 0,
            "1": 0,
            "2": 0,
            "3": 0
        },
        b: {},
        _coverageSchema: "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

cov_1pqjdq55xm.s[0]++;
Object.defineProperty(exports, "__esModule", { value: true });
// eslint-disable-next-line
const sudo = /* istanbul ignore next */(cov_1pqjdq55xm.s[1]++, require('sudo'));
// eslint-disable-next-line
const deasync = /* istanbul ignore next */(cov_1pqjdq55xm.s[2]++, require('deasync'));
function runSudoSync(params) {
    /* istanbul ignore next */cov_1pqjdq55xm.f[0]++;

    const sudoResult = /* istanbul ignore next */(cov_1pqjdq55xm.s[3]++, sudo(params, {
        cachePassword: false,
        prompt: 'Enter your password: '
    }));
    const stderr = /* istanbul ignore next */(cov_1pqjdq55xm.s[4]++, []);
    /* istanbul ignore next */cov_1pqjdq55xm.s[5]++;
    sudoResult.stderr.on('data', data => {
        /* istanbul ignore next */cov_1pqjdq55xm.f[1]++;
        cov_1pqjdq55xm.s[6]++;

        stderr.push(data.toString());
    });
    const stdout = /* istanbul ignore next */(cov_1pqjdq55xm.s[7]++, []);
    /* istanbul ignore next */cov_1pqjdq55xm.s[8]++;
    sudoResult.stdout.on('data', data => {
        /* istanbul ignore next */cov_1pqjdq55xm.f[2]++;
        cov_1pqjdq55xm.s[9]++;

        stdout.push(data.toString());
    });
    let code;
    /* istanbul ignore next */cov_1pqjdq55xm.s[10]++;
    sudoResult.on('close', exitCode => {
        /* istanbul ignore next */cov_1pqjdq55xm.f[3]++;
        cov_1pqjdq55xm.s[11]++;

        code = exitCode;
    });
    // Because we're running with sudo, we can't run synchronously, so synchronize by polling.
    // eslint-disable-next-line no-unmodified-loop-condition
    /* istanbul ignore next */cov_1pqjdq55xm.s[12]++;
    while (code === undefined) {
        /* istanbul ignore next */cov_1pqjdq55xm.s[13]++;

        deasync.sleep(100);
    }
    /* istanbul ignore next */cov_1pqjdq55xm.s[14]++;
    return { code, stdout, stderr };
}
/* istanbul ignore next */cov_1pqjdq55xm.s[15]++;
exports.runSudoSync = runSudoSync;
//# sourceMappingURL=sudoSync.js.map
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN1ZG9TeW5jLmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwic3VkbyIsInJlcXVpcmUiLCJkZWFzeW5jIiwicnVuU3Vkb1N5bmMiLCJwYXJhbXMiLCJzdWRvUmVzdWx0IiwiY2FjaGVQYXNzd29yZCIsInByb21wdCIsInN0ZGVyciIsIm9uIiwiZGF0YSIsInB1c2giLCJ0b1N0cmluZyIsInN0ZG91dCIsImNvZGUiLCJleGl0Q29kZSIsInVuZGVmaW5lZCIsInNsZWVwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBQSxPQUFPQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QyxFQUFFQyxPQUFPLElBQVQsRUFBN0M7QUFDQTtBQUNBLE1BQU1DLHlEQUFPQyxRQUFRLE1BQVIsQ0FBUCxDQUFOO0FBQ0E7QUFDQSxNQUFNQyw0REFBVUQsUUFBUSxTQUFSLENBQVYsQ0FBTjtBQUNBLFNBQVNFLFdBQVQsQ0FBcUJDLE1BQXJCLEVBQTZCO0FBQUE7O0FBQ3pCLFVBQU1DLCtEQUFhTCxLQUFLSSxNQUFMLEVBQWE7QUFDNUJFLHVCQUFlLEtBRGE7QUFFNUJDLGdCQUFRO0FBRm9CLEtBQWIsQ0FBYixDQUFOO0FBSUEsVUFBTUMsMkRBQVMsRUFBVCxDQUFOO0FBTHlCO0FBTXpCSCxlQUFXRyxNQUFYLENBQWtCQyxFQUFsQixDQUFxQixNQUFyQixFQUE4QkMsSUFBRCxJQUFVO0FBQUE7QUFBQTs7QUFDbkNGLGVBQU9HLElBQVAsQ0FBWUQsS0FBS0UsUUFBTCxFQUFaO0FBQ0gsS0FGRDtBQUdBLFVBQU1DLDJEQUFTLEVBQVQsQ0FBTjtBQVR5QjtBQVV6QlIsZUFBV1EsTUFBWCxDQUFrQkosRUFBbEIsQ0FBcUIsTUFBckIsRUFBOEJDLElBQUQsSUFBVTtBQUFBO0FBQUE7O0FBQ25DRyxlQUFPRixJQUFQLENBQVlELEtBQUtFLFFBQUwsRUFBWjtBQUNILEtBRkQ7QUFHQSxRQUFJRSxJQUFKO0FBYnlCO0FBY3pCVCxlQUFXSSxFQUFYLENBQWMsT0FBZCxFQUF3Qk0sUUFBRCxJQUFjO0FBQUE7QUFBQTs7QUFDakNELGVBQU9DLFFBQVA7QUFDSCxLQUZEO0FBR0E7QUFDQTtBQWxCeUI7QUFtQnpCLFdBQU9ELFNBQVNFLFNBQWhCLEVBQTJCO0FBQUE7O0FBQ3ZCZCxnQkFBUWUsS0FBUixDQUFjLEdBQWQ7QUFDSDtBQXJCd0I7QUFzQnpCLFdBQU8sRUFBRUgsSUFBRixFQUFRRCxNQUFSLEVBQWdCTCxNQUFoQixFQUFQO0FBQ0g7O0FBQ0RWLFFBQVFLLFdBQVIsR0FBc0JBLFdBQXRCO0FBQ0EiLCJmaWxlIjoic3Vkb1N5bmMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG4vLyBTZWUgTElDRU5TRSBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG5jb25zdCBzdWRvID0gcmVxdWlyZSgnc3VkbycpO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG5jb25zdCBkZWFzeW5jID0gcmVxdWlyZSgnZGVhc3luYycpO1xuZnVuY3Rpb24gcnVuU3Vkb1N5bmMocGFyYW1zKSB7XG4gICAgY29uc3Qgc3Vkb1Jlc3VsdCA9IHN1ZG8ocGFyYW1zLCB7XG4gICAgICAgIGNhY2hlUGFzc3dvcmQ6IGZhbHNlLFxuICAgICAgICBwcm9tcHQ6ICdFbnRlciB5b3VyIHBhc3N3b3JkOiAnXG4gICAgfSk7XG4gICAgY29uc3Qgc3RkZXJyID0gW107XG4gICAgc3Vkb1Jlc3VsdC5zdGRlcnIub24oJ2RhdGEnLCAoZGF0YSkgPT4ge1xuICAgICAgICBzdGRlcnIucHVzaChkYXRhLnRvU3RyaW5nKCkpO1xuICAgIH0pO1xuICAgIGNvbnN0IHN0ZG91dCA9IFtdO1xuICAgIHN1ZG9SZXN1bHQuc3Rkb3V0Lm9uKCdkYXRhJywgKGRhdGEpID0+IHtcbiAgICAgICAgc3Rkb3V0LnB1c2goZGF0YS50b1N0cmluZygpKTtcbiAgICB9KTtcbiAgICBsZXQgY29kZTtcbiAgICBzdWRvUmVzdWx0Lm9uKCdjbG9zZScsIChleGl0Q29kZSkgPT4ge1xuICAgICAgICBjb2RlID0gZXhpdENvZGU7XG4gICAgfSk7XG4gICAgLy8gQmVjYXVzZSB3ZSdyZSBydW5uaW5nIHdpdGggc3Vkbywgd2UgY2FuJ3QgcnVuIHN5bmNocm9ub3VzbHksIHNvIHN5bmNocm9uaXplIGJ5IHBvbGxpbmcuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVubW9kaWZpZWQtbG9vcC1jb25kaXRpb25cbiAgICB3aGlsZSAoY29kZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGRlYXN5bmMuc2xlZXAoMTAwKTtcbiAgICB9XG4gICAgcmV0dXJuIHsgY29kZSwgc3Rkb3V0LCBzdGRlcnIgfTtcbn1cbmV4cG9ydHMucnVuU3Vkb1N5bmMgPSBydW5TdWRvU3luYztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN1ZG9TeW5jLmpzLm1hcCJdfQ==