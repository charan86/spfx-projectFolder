{"version":3,"sources":["CertificateStore.js"],"names":["Object","defineProperty","exports","value","path","require","os_1","node_core_library_1","CertificateStore","constructor","unresolvedUserFolder","homedir","_userProfilePath","resolve","FileSystem","exists","Error","_serveDataPath","join","ensureFolder","_certificatePath","_keyPath","certificatePath","certificateData","_certificateData","readFile","undefined","certificate","writeFile","deleteFile","keyData","_keyData","key"],"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","file":"CertificateStore.js","sourcesContent":["\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path = require(\"path\");\nconst os_1 = require(\"os\");\nconst node_core_library_1 = require(\"@rushstack/node-core-library\");\n/**\n * Store to retrieve and save debug certificate data.\n * @public\n */\nclass CertificateStore {\n    constructor() {\n        const unresolvedUserFolder = os_1.homedir();\n        this._userProfilePath = path.resolve(unresolvedUserFolder);\n        if (!node_core_library_1.FileSystem.exists(this._userProfilePath)) {\n            throw new Error('Unable to determine the current user\\'s home directory');\n        }\n        this._serveDataPath = path.join(this._userProfilePath, '.rushstack');\n        node_core_library_1.FileSystem.ensureFolder(this._serveDataPath);\n        this._certificatePath = path.join(this._serveDataPath, 'rushstack-serve.pem');\n        this._keyPath = path.join(this._serveDataPath, 'rushstack-serve.key');\n    }\n    /**\n     * Path to the saved debug certificate\n     */\n    get certificatePath() {\n        return this._certificatePath;\n    }\n    /**\n     * Debug certificate pem file contents.\n     */\n    get certificateData() {\n        if (!this._certificateData) {\n            if (node_core_library_1.FileSystem.exists(this._certificatePath)) {\n                this._certificateData = node_core_library_1.FileSystem.readFile(this._certificatePath);\n            }\n            else {\n                return undefined;\n            }\n        }\n        return this._certificateData;\n    }\n    set certificateData(certificate) {\n        if (certificate) {\n            node_core_library_1.FileSystem.writeFile(this._certificatePath, certificate);\n        }\n        else if (node_core_library_1.FileSystem.exists(this._certificatePath)) {\n            node_core_library_1.FileSystem.deleteFile(this._certificatePath);\n        }\n        this._certificateData = certificate;\n    }\n    /**\n     * Key used to sign the debug pem certificate.\n     */\n    get keyData() {\n        if (!this._keyData) {\n            if (node_core_library_1.FileSystem.exists(this._keyPath)) {\n                this._keyData = node_core_library_1.FileSystem.readFile(this._keyPath);\n            }\n            else {\n                return undefined;\n            }\n        }\n        return this._keyData;\n    }\n    set keyData(key) {\n        if (key) {\n            node_core_library_1.FileSystem.writeFile(this._keyPath, key);\n        }\n        else if (node_core_library_1.FileSystem.exists(this._keyPath)) {\n            node_core_library_1.FileSystem.deleteFile(this._keyPath);\n        }\n        this._keyData = key;\n    }\n}\nexports.CertificateStore = CertificateStore;\n//# sourceMappingURL=CertificateStore.js.map"]}