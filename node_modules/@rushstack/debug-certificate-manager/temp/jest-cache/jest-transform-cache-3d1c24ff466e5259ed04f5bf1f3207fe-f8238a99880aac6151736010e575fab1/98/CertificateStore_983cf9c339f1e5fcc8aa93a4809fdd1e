93774a214091124660d1c5fd7cd55125
"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.

/* istanbul ignore next */var cov_zif8xjqqk = function () {
    var path = "/home/vsts/work/1/s/libraries/debug-certificate-manager/lib/CertificateStore.js",
        hash = "aaadee1e199cecfdd8387afb4c0dc735c5761faa",
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = "__coverage__",
        coverageData = {
        path: "/home/vsts/work/1/s/libraries/debug-certificate-manager/lib/CertificateStore.js",
        statementMap: {
            "0": {
                start: {
                    line: 4,
                    column: 0
                },
                end: {
                    line: 4,
                    column: 62
                }
            },
            "1": {
                start: {
                    line: 5,
                    column: 13
                },
                end: {
                    line: 5,
                    column: 28
                }
            },
            "2": {
                start: {
                    line: 6,
                    column: 13
                },
                end: {
                    line: 6,
                    column: 26
                }
            },
            "3": {
                start: {
                    line: 7,
                    column: 28
                },
                end: {
                    line: 7,
                    column: 67
                }
            },
            "4": {
                start: {
                    line: 14,
                    column: 37
                },
                end: {
                    line: 14,
                    column: 51
                }
            },
            "5": {
                start: {
                    line: 15,
                    column: 8
                },
                end: {
                    line: 15,
                    column: 67
                }
            },
            "6": {
                start: {
                    line: 16,
                    column: 8
                },
                end: {
                    line: 18,
                    column: 9
                }
            },
            "7": {
                start: {
                    line: 17,
                    column: 12
                },
                end: {
                    line: 17,
                    column: 86
                }
            },
            "8": {
                start: {
                    line: 19,
                    column: 8
                },
                end: {
                    line: 19,
                    column: 77
                }
            },
            "9": {
                start: {
                    line: 20,
                    column: 8
                },
                end: {
                    line: 20,
                    column: 73
                }
            },
            "10": {
                start: {
                    line: 21,
                    column: 8
                },
                end: {
                    line: 21,
                    column: 86
                }
            },
            "11": {
                start: {
                    line: 22,
                    column: 8
                },
                end: {
                    line: 22,
                    column: 78
                }
            },
            "12": {
                start: {
                    line: 28,
                    column: 8
                },
                end: {
                    line: 28,
                    column: 37
                }
            },
            "13": {
                start: {
                    line: 34,
                    column: 8
                },
                end: {
                    line: 41,
                    column: 9
                }
            },
            "14": {
                start: {
                    line: 35,
                    column: 12
                },
                end: {
                    line: 40,
                    column: 13
                }
            },
            "15": {
                start: {
                    line: 36,
                    column: 16
                },
                end: {
                    line: 36,
                    column: 103
                }
            },
            "16": {
                start: {
                    line: 39,
                    column: 16
                },
                end: {
                    line: 39,
                    column: 33
                }
            },
            "17": {
                start: {
                    line: 42,
                    column: 8
                },
                end: {
                    line: 42,
                    column: 37
                }
            },
            "18": {
                start: {
                    line: 45,
                    column: 8
                },
                end: {
                    line: 50,
                    column: 9
                }
            },
            "19": {
                start: {
                    line: 46,
                    column: 12
                },
                end: {
                    line: 46,
                    column: 89
                }
            },
            "20": {
                start: {
                    line: 48,
                    column: 13
                },
                end: {
                    line: 50,
                    column: 9
                }
            },
            "21": {
                start: {
                    line: 49,
                    column: 12
                },
                end: {
                    line: 49,
                    column: 77
                }
            },
            "22": {
                start: {
                    line: 51,
                    column: 8
                },
                end: {
                    line: 51,
                    column: 44
                }
            },
            "23": {
                start: {
                    line: 57,
                    column: 8
                },
                end: {
                    line: 64,
                    column: 9
                }
            },
            "24": {
                start: {
                    line: 58,
                    column: 12
                },
                end: {
                    line: 63,
                    column: 13
                }
            },
            "25": {
                start: {
                    line: 59,
                    column: 16
                },
                end: {
                    line: 59,
                    column: 87
                }
            },
            "26": {
                start: {
                    line: 62,
                    column: 16
                },
                end: {
                    line: 62,
                    column: 33
                }
            },
            "27": {
                start: {
                    line: 65,
                    column: 8
                },
                end: {
                    line: 65,
                    column: 29
                }
            },
            "28": {
                start: {
                    line: 68,
                    column: 8
                },
                end: {
                    line: 73,
                    column: 9
                }
            },
            "29": {
                start: {
                    line: 69,
                    column: 12
                },
                end: {
                    line: 69,
                    column: 73
                }
            },
            "30": {
                start: {
                    line: 71,
                    column: 13
                },
                end: {
                    line: 73,
                    column: 9
                }
            },
            "31": {
                start: {
                    line: 72,
                    column: 12
                },
                end: {
                    line: 72,
                    column: 69
                }
            },
            "32": {
                start: {
                    line: 74,
                    column: 8
                },
                end: {
                    line: 74,
                    column: 28
                }
            },
            "33": {
                start: {
                    line: 77,
                    column: 0
                },
                end: {
                    line: 77,
                    column: 44
                }
            }
        },
        fnMap: {
            "0": {
                name: "(anonymous_0)",
                decl: {
                    start: {
                        line: 13,
                        column: 4
                    },
                    end: {
                        line: 13,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 13,
                        column: 18
                    },
                    end: {
                        line: 23,
                        column: 5
                    }
                },
                line: 13
            },
            "1": {
                name: "(anonymous_1)",
                decl: {
                    start: {
                        line: 27,
                        column: 4
                    },
                    end: {
                        line: 27,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 27,
                        column: 26
                    },
                    end: {
                        line: 29,
                        column: 5
                    }
                },
                line: 27
            },
            "2": {
                name: "(anonymous_2)",
                decl: {
                    start: {
                        line: 33,
                        column: 4
                    },
                    end: {
                        line: 33,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 33,
                        column: 26
                    },
                    end: {
                        line: 43,
                        column: 5
                    }
                },
                line: 33
            },
            "3": {
                name: "(anonymous_3)",
                decl: {
                    start: {
                        line: 44,
                        column: 4
                    },
                    end: {
                        line: 44,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 44,
                        column: 37
                    },
                    end: {
                        line: 52,
                        column: 5
                    }
                },
                line: 44
            },
            "4": {
                name: "(anonymous_4)",
                decl: {
                    start: {
                        line: 56,
                        column: 4
                    },
                    end: {
                        line: 56,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 56,
                        column: 18
                    },
                    end: {
                        line: 66,
                        column: 5
                    }
                },
                line: 56
            },
            "5": {
                name: "(anonymous_5)",
                decl: {
                    start: {
                        line: 67,
                        column: 4
                    },
                    end: {
                        line: 67,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 67,
                        column: 21
                    },
                    end: {
                        line: 75,
                        column: 5
                    }
                },
                line: 67
            }
        },
        branchMap: {
            "0": {
                loc: {
                    start: {
                        line: 16,
                        column: 8
                    },
                    end: {
                        line: 18,
                        column: 9
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 16,
                        column: 8
                    },
                    end: {
                        line: 18,
                        column: 9
                    }
                }, {
                    start: {
                        line: 16,
                        column: 8
                    },
                    end: {
                        line: 18,
                        column: 9
                    }
                }],
                line: 16
            },
            "1": {
                loc: {
                    start: {
                        line: 34,
                        column: 8
                    },
                    end: {
                        line: 41,
                        column: 9
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 34,
                        column: 8
                    },
                    end: {
                        line: 41,
                        column: 9
                    }
                }, {
                    start: {
                        line: 34,
                        column: 8
                    },
                    end: {
                        line: 41,
                        column: 9
                    }
                }],
                line: 34
            },
            "2": {
                loc: {
                    start: {
                        line: 35,
                        column: 12
                    },
                    end: {
                        line: 40,
                        column: 13
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 35,
                        column: 12
                    },
                    end: {
                        line: 40,
                        column: 13
                    }
                }, {
                    start: {
                        line: 35,
                        column: 12
                    },
                    end: {
                        line: 40,
                        column: 13
                    }
                }],
                line: 35
            },
            "3": {
                loc: {
                    start: {
                        line: 45,
                        column: 8
                    },
                    end: {
                        line: 50,
                        column: 9
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 45,
                        column: 8
                    },
                    end: {
                        line: 50,
                        column: 9
                    }
                }, {
                    start: {
                        line: 45,
                        column: 8
                    },
                    end: {
                        line: 50,
                        column: 9
                    }
                }],
                line: 45
            },
            "4": {
                loc: {
                    start: {
                        line: 48,
                        column: 13
                    },
                    end: {
                        line: 50,
                        column: 9
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 48,
                        column: 13
                    },
                    end: {
                        line: 50,
                        column: 9
                    }
                }, {
                    start: {
                        line: 48,
                        column: 13
                    },
                    end: {
                        line: 50,
                        column: 9
                    }
                }],
                line: 48
            },
            "5": {
                loc: {
                    start: {
                        line: 57,
                        column: 8
                    },
                    end: {
                        line: 64,
                        column: 9
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 57,
                        column: 8
                    },
                    end: {
                        line: 64,
                        column: 9
                    }
                }, {
                    start: {
                        line: 57,
                        column: 8
                    },
                    end: {
                        line: 64,
                        column: 9
                    }
                }],
                line: 57
            },
            "6": {
                loc: {
                    start: {
                        line: 58,
                        column: 12
                    },
                    end: {
                        line: 63,
                        column: 13
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 58,
                        column: 12
                    },
                    end: {
                        line: 63,
                        column: 13
                    }
                }, {
                    start: {
                        line: 58,
                        column: 12
                    },
                    end: {
                        line: 63,
                        column: 13
                    }
                }],
                line: 58
            },
            "7": {
                loc: {
                    start: {
                        line: 68,
                        column: 8
                    },
                    end: {
                        line: 73,
                        column: 9
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 68,
                        column: 8
                    },
                    end: {
                        line: 73,
                        column: 9
                    }
                }, {
                    start: {
                        line: 68,
                        column: 8
                    },
                    end: {
                        line: 73,
                        column: 9
                    }
                }],
                line: 68
            },
            "8": {
                loc: {
                    start: {
                        line: 71,
                        column: 13
                    },
                    end: {
                        line: 73,
                        column: 9
                    }
                },
                type: "if",
                locations: [{
                    start: {
                        line: 71,
                        column: 13
                    },
                    end: {
                        line: 73,
                        column: 9
                    }
                }, {
                    start: {
                        line: 71,
                        column: 13
                    },
                    end: {
                        line: 73,
                        column: 9
                    }
                }],
                line: 71
            }
        },
        s: {
            "0": 0,
            "1": 0,
            "2": 0,
            "3": 0,
            "4": 0,
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0,
            "26": 0,
            "27": 0,
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0,
            "32": 0,
            "33": 0
        },
        f: {
            "0": 0,
            "1": 0,
            "2": 0,
            "3": 0,
            "4": 0,
            "5": 0
        },
        b: {
            "0": [0, 0],
            "1": [0, 0],
            "2": [0, 0],
            "3": [0, 0],
            "4": [0, 0],
            "5": [0, 0],
            "6": [0, 0],
            "7": [0, 0],
            "8": [0, 0]
        },
        _coverageSchema: "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

cov_zif8xjqqk.s[0]++;
Object.defineProperty(exports, "__esModule", { value: true });
const path = /* istanbul ignore next */(cov_zif8xjqqk.s[1]++, require("path"));
const os_1 = /* istanbul ignore next */(cov_zif8xjqqk.s[2]++, require("os"));
const node_core_library_1 = /* istanbul ignore next */(cov_zif8xjqqk.s[3]++, require("@rushstack/node-core-library"));
/**
 * Store to retrieve and save debug certificate data.
 * @public
 */
class CertificateStore {
    constructor() {
        /* istanbul ignore next */cov_zif8xjqqk.f[0]++;

        const unresolvedUserFolder = /* istanbul ignore next */(cov_zif8xjqqk.s[4]++, os_1.homedir());
        /* istanbul ignore next */cov_zif8xjqqk.s[5]++;
        this._userProfilePath = path.resolve(unresolvedUserFolder);
        /* istanbul ignore next */cov_zif8xjqqk.s[6]++;
        if (!node_core_library_1.FileSystem.exists(this._userProfilePath)) {
            /* istanbul ignore next */cov_zif8xjqqk.b[0][0]++;
            cov_zif8xjqqk.s[7]++;

            throw new Error('Unable to determine the current user\'s home directory');
        } else /* istanbul ignore next */{
            cov_zif8xjqqk.b[0][1]++;
        }
        cov_zif8xjqqk.s[8]++;
        this._serveDataPath = path.join(this._userProfilePath, '.rushstack');
        /* istanbul ignore next */cov_zif8xjqqk.s[9]++;
        node_core_library_1.FileSystem.ensureFolder(this._serveDataPath);
        /* istanbul ignore next */cov_zif8xjqqk.s[10]++;
        this._certificatePath = path.join(this._serveDataPath, 'rushstack-serve.pem');
        /* istanbul ignore next */cov_zif8xjqqk.s[11]++;
        this._keyPath = path.join(this._serveDataPath, 'rushstack-serve.key');
    }
    /**
     * Path to the saved debug certificate
     */
    get certificatePath() {
        /* istanbul ignore next */cov_zif8xjqqk.f[1]++;
        cov_zif8xjqqk.s[12]++;

        return this._certificatePath;
    }
    /**
     * Debug certificate pem file contents.
     */
    get certificateData() {
        /* istanbul ignore next */cov_zif8xjqqk.f[2]++;
        cov_zif8xjqqk.s[13]++;

        if (!this._certificateData) {
            /* istanbul ignore next */cov_zif8xjqqk.b[1][0]++;
            cov_zif8xjqqk.s[14]++;

            if (node_core_library_1.FileSystem.exists(this._certificatePath)) {
                /* istanbul ignore next */cov_zif8xjqqk.b[2][0]++;
                cov_zif8xjqqk.s[15]++;

                this._certificateData = node_core_library_1.FileSystem.readFile(this._certificatePath);
            } else {
                /* istanbul ignore next */cov_zif8xjqqk.b[2][1]++;
                cov_zif8xjqqk.s[16]++;

                return undefined;
            }
        } else /* istanbul ignore next */{
            cov_zif8xjqqk.b[1][1]++;
        }
        cov_zif8xjqqk.s[17]++;
        return this._certificateData;
    }
    set certificateData(certificate) {
        /* istanbul ignore next */cov_zif8xjqqk.f[3]++;
        cov_zif8xjqqk.s[18]++;

        if (certificate) {
            /* istanbul ignore next */cov_zif8xjqqk.b[3][0]++;
            cov_zif8xjqqk.s[19]++;

            node_core_library_1.FileSystem.writeFile(this._certificatePath, certificate);
        } else {
                /* istanbul ignore next */cov_zif8xjqqk.b[3][1]++;
                cov_zif8xjqqk.s[20]++;
                if (node_core_library_1.FileSystem.exists(this._certificatePath)) {
                    /* istanbul ignore next */cov_zif8xjqqk.b[4][0]++;
                    cov_zif8xjqqk.s[21]++;

                    node_core_library_1.FileSystem.deleteFile(this._certificatePath);
                } else /* istanbul ignore next */{
                    cov_zif8xjqqk.b[4][1]++;
                }
            } /* istanbul ignore next */cov_zif8xjqqk.s[22]++;
        this._certificateData = certificate;
    }
    /**
     * Key used to sign the debug pem certificate.
     */
    get keyData() {
        /* istanbul ignore next */cov_zif8xjqqk.f[4]++;
        cov_zif8xjqqk.s[23]++;

        if (!this._keyData) {
            /* istanbul ignore next */cov_zif8xjqqk.b[5][0]++;
            cov_zif8xjqqk.s[24]++;

            if (node_core_library_1.FileSystem.exists(this._keyPath)) {
                /* istanbul ignore next */cov_zif8xjqqk.b[6][0]++;
                cov_zif8xjqqk.s[25]++;

                this._keyData = node_core_library_1.FileSystem.readFile(this._keyPath);
            } else {
                /* istanbul ignore next */cov_zif8xjqqk.b[6][1]++;
                cov_zif8xjqqk.s[26]++;

                return undefined;
            }
        } else /* istanbul ignore next */{
            cov_zif8xjqqk.b[5][1]++;
        }
        cov_zif8xjqqk.s[27]++;
        return this._keyData;
    }
    set keyData(key) {
        /* istanbul ignore next */cov_zif8xjqqk.f[5]++;
        cov_zif8xjqqk.s[28]++;

        if (key) {
            /* istanbul ignore next */cov_zif8xjqqk.b[7][0]++;
            cov_zif8xjqqk.s[29]++;

            node_core_library_1.FileSystem.writeFile(this._keyPath, key);
        } else {
                /* istanbul ignore next */cov_zif8xjqqk.b[7][1]++;
                cov_zif8xjqqk.s[30]++;
                if (node_core_library_1.FileSystem.exists(this._keyPath)) {
                    /* istanbul ignore next */cov_zif8xjqqk.b[8][0]++;
                    cov_zif8xjqqk.s[31]++;

                    node_core_library_1.FileSystem.deleteFile(this._keyPath);
                } else /* istanbul ignore next */{
                    cov_zif8xjqqk.b[8][1]++;
                }
            } /* istanbul ignore next */cov_zif8xjqqk.s[32]++;
        this._keyData = key;
    }
}
/* istanbul ignore next */cov_zif8xjqqk.s[33]++;
exports.CertificateStore = CertificateStore;
//# sourceMappingURL=CertificateStore.js.map
//# sourceMappingURL=data:application/json;charset=utf-8;base64,